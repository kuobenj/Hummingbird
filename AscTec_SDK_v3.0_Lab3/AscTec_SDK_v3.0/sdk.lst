   1              		.file	"sdk.c"
   9              	.Ltext0:
  10              		.align	2
  11              		.global	SPI0Handler
  13              	SPI0Handler:
  14              	.LFB2:
  15              		.file 1 "sdk.c"
   1:sdk.c         **** /*
   2:sdk.c         **** 
   3:sdk.c         **** AscTec SDK 3.0
   4:sdk.c         **** 
   5:sdk.c         **** Copyright (c) 2011, Ascending Technologies GmbH
   6:sdk.c         **** All rights reserved.
   7:sdk.c         **** 
   8:sdk.c         **** Redistribution and use in source and binary forms, with or without
   9:sdk.c         **** modification, are permitted provided that the following conditions are met:
  10:sdk.c         **** 
  11:sdk.c         ****  * Redistributions of source code must retain the above copyright notice,
  12:sdk.c         ****    this list of conditions and the following disclaimer.
  13:sdk.c         ****  * Redistributions in binary form must reproduce the above copyright
  14:sdk.c         ****    notice, this list of conditions and the following disclaimer in the
  15:sdk.c         ****    documentation and/or other materials provided with the distribution.
  16:sdk.c         **** 
  17:sdk.c         **** THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND ANY
  18:sdk.c         **** EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  19:sdk.c         **** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  20:sdk.c         **** DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY
  21:sdk.c         **** DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  22:sdk.c         **** (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  23:sdk.c         **** SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  24:sdk.c         **** CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  25:sdk.c         **** LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  26:sdk.c         **** OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
  27:sdk.c         **** DAMAGE.
  28:sdk.c         **** 
  29:sdk.c         ****  */
  30:sdk.c         **** 
  31:sdk.c         **** #include "main.h"
  32:sdk.c         **** #include "sdk.h"
  33:sdk.c         **** #include "LL_HL_comm.h"
  34:sdk.c         **** #include "gpsmath.h"
  35:sdk.c         **** #include "sdk_telemetry.h"
  36:sdk.c         **** #include "uart.h"
  37:sdk.c         **** #include "system.h"
  38:sdk.c         **** #include "lpc_aci_eeprom.h"
  39:sdk.c         **** #include "lab.h"
  40:sdk.c         **** #include "Utilites.h"
  41:sdk.c         **** 
  42:sdk.c         **** //Dan Block Add
  43:sdk.c         **** #include <stdio.h>
  44:sdk.c         **** #include "LPC214x.h"
  45:sdk.c         **** #include "hardware.h"
  46:sdk.c         **** #include "irq.h"
  47:sdk.c         **** 
  48:sdk.c         **** #define USONIC_INIT_DELAY 2000
  49:sdk.c         **** #define SWITCH_INIT_DELAY 2000
  50:sdk.c         **** #define SDCARD_START_DELAY 4000
  51:sdk.c         **** //End Dan Block Add
  52:sdk.c         **** 
  53:sdk.c         **** #ifdef MATLAB
  54:sdk.c         **** #include "..\custom_mdl\onboard_matlab_ert_rtw\onboard_matlab.h"
  55:sdk.c         **** #endif
  56:sdk.c         **** 
  57:sdk.c         **** struct WO_SDK_STRUCT WO_SDK;
  58:sdk.c         **** struct WO_CTRL_INPUT WO_CTRL_Input;
  59:sdk.c         **** struct RO_RC_DATA RO_RC_Data;
  60:sdk.c         **** struct RO_ALL_DATA RO_ALL_Data;
  61:sdk.c         **** struct WO_DIRECT_MOTOR_CONTROL WO_Direct_Motor_Control;
  62:sdk.c         **** struct WO_DIRECT_INDIVIDUAL_MOTOR_CONTROL WO_Direct_Individual_Motor_Control;
  63:sdk.c         **** struct imuSensor imusensor;
  64:sdk.c         **** 
  65:sdk.c         **** //waypoint example global variables for jeti display
  66:sdk.c         **** unsigned char wpExampleWpNr=0;
  67:sdk.c         **** unsigned char wpExampleActive=0;
  68:sdk.c         **** 
  69:sdk.c         **** //emergency mode variables
  70:sdk.c         **** unsigned char emergencyMode;
  71:sdk.c         **** unsigned char emergencyModeUpdate=0;
  72:sdk.c         **** 
  73:sdk.c         **** #ifdef MATLAB
  74:sdk.c         **** unsigned char xbee_send_flag=0;
  75:sdk.c         **** unsigned char triggerSaveMatlabParams=0; //trigger command to save matlab parameters to flash
  76:sdk.c         **** struct MATLAB_DEBUG matlab_debug;
  77:sdk.c         **** struct MATLAB_UART matlab_uart, matlab_uart_tmp;
  78:sdk.c         **** struct MATLAB_PARAMS matlab_params, matlab_params_tmp;
  79:sdk.c         **** 
  80:sdk.c         **** void SDK_matlabMainLoop(void);
  81:sdk.c         **** #endif
  82:sdk.c         **** void SDK_EXAMPLE_direct_individual_motor_commands(void);
  83:sdk.c         **** void SDK_EXAMPLE_direct_motor_commands_with_standard_output_mapping(void);
  84:sdk.c         **** void SDK_EXAMPLE_attitude_commands(void);
  85:sdk.c         **** void SDK_EXAMPLE_gps_waypoint_control(void);
  86:sdk.c         **** int SDK_EXAMPLE_turn_motors_on(void);
  87:sdk.c         **** int SDK_EXAMPLE_turn_motors_off(void);
  88:sdk.c         **** 
  89:sdk.c         **** // Start Added by Dan Block
  90:sdk.c         **** unsigned long my_sdkloop_counter = 0;
  91:sdk.c         **** static int timer = 1;
  92:sdk.c         **** int firebit = 1;
  93:sdk.c         **** int UsonicTimer = 0;
  94:sdk.c         **** unsigned int SPI0data = 0;
  95:sdk.c         **** unsigned int SPI0command = 0;
  96:sdk.c         **** int f28027_ready = 0;
  97:sdk.c         **** int UsonicData = 0;
  98:sdk.c         **** int NewUsonicData = 0;
  99:sdk.c         **** int USMaxBot_range1 = 0;
 100:sdk.c         **** 
 101:sdk.c         **** int SwitchTimer = 0;
 102:sdk.c         **** int readSwitchbit = 0;
 103:sdk.c         **** int MagnetSwitch = 0;
 104:sdk.c         **** int NewMagnetSwitch = 0;
 105:sdk.c         **** int GotMagnet = 0;
 106:sdk.c         **** 
 107:sdk.c         **** #define MAX_SPI_SEND_SHORTS  50
 108:sdk.c         **** int SPItxCount = 0;
 109:sdk.c         **** int SPItxSize = 0;
 110:sdk.c         **** unsigned short int SPItxArray[MAX_SPI_SEND_SHORTS];
 111:sdk.c         **** int	SPItxDone = 1;
 112:sdk.c         **** int numMissedTx = 0;
 113:sdk.c         **** 
 114:sdk.c         **** typedef union float2short_tag {
 115:sdk.c         **** 	float fl;
 116:sdk.c         **** 	unsigned short int sh[2];
 117:sdk.c         **** } float2short;
 118:sdk.c         **** 
 119:sdk.c         **** float2short f2s;
 120:sdk.c         **** 
 121:sdk.c         **** int testcount = 0;
 122:sdk.c         **** float testarray[5];
 123:sdk.c         **** 
 124:sdk.c         **** void SPI0Handler(void) __irq
 125:sdk.c         **** {
  16              	@ Function supports interworking.
  17              		@ args = 0, pretend = 0, frame = 0
  18              		@ frame_needed = 0, uses_anonymous_args = 0
  19              		stmfd	sp!, {r4, r5, lr}
  20 0000 30402DE9 	.LCFI0:
  21              		.loc 1 128 0
 126:sdk.c         **** f (SPI0command == 0xCC01) {  // command to tell f28027 to fire ultrasonic sensor
 127:sdk.c         **** 		if ((SPI0data == 0xBABE) || (SPI0data == 0xCABB)) {
 128:sdk.c         **** 			firebit = 0;
  22              	r, #-536870912
  23 0004 0EE2A0E3 		add	lr, lr, #163840
  24 0008 0AE98EE2 		mov	r4, #128
  25 000c 8040A0E3 		str	r4, [lr, #4]
  26 0010 04408EE5 		.loc 1 129 0
 129:sdk.c         ****  else { // error go back to not ready
  27              	ip, #-536870912
  28 0014 0EC2A0E3 		add	ip, ip, #131072
  29 0018 02C88CE2 		ldr	r3, [ip, #4]
  30 001c 04309CE5 		tst	r3, #128
  31 0020 800013E3 		.loc 1 130 0
 130:sdk.c         **** 		f28027_ready = 0;
  32              	e	r2, [ip, #8]
  33 0024 08209C15 		ldrne	r3, .L36
  34 0028 30329F15 		strne	r2, [r3, #0]
  35 002c 00208315 		.loc 1 133 0
 131:sdk.c         **** 	}
 132:sdk.c         **** 	} else if (SPI0command == 0xCC02) {  // command to read date from f28027 ultrasonic reading
 133:sdk.c         **** 		//mytest = SPI0data & 0xFF00;
  36              		r2, .L36+4
  37 0030 2C229FE5 		mov	r3, #52224
  38 0034 333BA0E3 		ldr	r2, [r2, #0]
  39 0038 002092E5 		add	r3, r3, #1
  40 003c 013083E2 		cmp	r2, r3
  41 0040 030052E1 		beq	.L30
  42 0044 2400000A 		.loc 1 139 0
 134:sdk.c         **** f ( (SPI0data & 0xFF00) == 0xDD00) {
 135:sdk.c         **** 			UsonicData = SPI0data & 0xFF;
 136:sdk.c         **** 			NewUsonicData = 1;
 137:sdk.c         **** 			firebit = 1;
 138:sdk.c         **** 			UsonicTimer = 0;
 139:sdk.c         **** 		} else {  // error go back to not ready
  43              	, #52224
  44 0048 333BA0E3 		add	r3, r3, #2
  45 004c 023083E2 		cmp	r2, r3
  46 0050 030052E1 		beq	.L31
  47 0054 2F00000A 		.loc 1 150 0
 140:sdk.c         **** 027_ready = 0;
 141:sdk.c         **** 		}
 142:sdk.c         **** 
 143:sdk.c         **** 	} else if (SPI0command == 0xCC03) {  // command to just check if board attached to SPI
 144:sdk.c         **** 		if (SPI0data == 0xCABB) {
 145:sdk.c         **** 			f28027_ready = 1;
 146:sdk.c         **** 			firebit = 1;
 147:sdk.c         **** 			readSwitchbit = 1;
 148:sdk.c         **** 			UsonicTimer = 0;
 149:sdk.c         **** 			SwitchTimer = 0;
 150:sdk.c         **** 		}
  48              	r3, #52224
  49 0058 333BA0E3 		add	r3, r3, #3
  50 005c 033083E2 		cmp	r2, r3
  51 0060 030052E1 		beq	.L32
  52 0064 3F00000A 		.loc 1 158 0
 151:sdk.c         **** (SPI0command == 0xCC04) { // command to beaglebone to store data to SD card
 152:sdk.c         **** 		if (SPItxCount < SPItxSize) {
 153:sdk.c         **** 			IOCLR0 = (1<<EXT_NCS);
 154:sdk.c         **** 			S0SPDR = SPItxArray[SPItxCount];
 155:sdk.c         **** 			SPItxCount++;
 156:sdk.c         **** 		} else {
 157:sdk.c         **** 			SPItxDone = 1;
 158:sdk.c         **** 		}
  53              	r3, #52224
  54 0068 333BA0E3 		add	r3, r3, #4
  55 006c 043083E2 		cmp	r2, r3
  56 0070 030052E1 		beq	.L33
  57 0074 5D00000A 		.loc 1 166 0
 159:sdk.c         **** if (SPI0command == 0xCC05) {  // command to tell f28027 to transfer magnet switch state
 160:sdk.c         **** 		if ((SPI0data == 0xBABE) || (SPI0data == 0xCABB)) {
 161:sdk.c         **** 			readSwitchbit = 0;
 162:sdk.c         **** 		} else { // error go back to not ready
 163:sdk.c         **** 			f28027_ready = 0;
 164:sdk.c         **** 		}
 165:sdk.c         **** 	} else if (SPI0command == 0xCC06) {  // command to read magnet switch state
 166:sdk.c         **** 		if ( (SPI0data & 0xFF00) == 0xDD00) {
  58              	r3, #52224
  59 0078 333BA0E3 		add	r3, r3, #5
  60 007c 053083E2 		cmp	r2, r3
  61 0080 030052E1 		beq	.L34
  62 0084 4A00000A 		.loc 1 172 0
 167:sdk.c         **** tSwitch = SPI0data & 0xFF;
 168:sdk.c         **** 			NewMagnetSwitch = 1;
 169:sdk.c         **** 			readSwitchbit = 1;
 170:sdk.c         **** 			SwitchTimer = 0;
 171:sdk.c         **** 		} else {  // error go back to not ready
 172:sdk.c         **** 			f28027_ready = 0;
  63              	r3, #52224
  64 0088 333BA0E3 		add	r3, r3, #6
  65 008c 063083E2 		cmp	r2, r3
  66 0090 030052E1 		bne	.L8
  67 0094 0700001A 		.loc 1 173 0
 173:sdk.c         **** }
  68              	r3, .L36
  69 0098 C0319FE5 		ldr	r1, [r3, #0]
  70 009c 001093E5 		and	r2, r1, #65280
  71 00a0 FF2C01E2 		cmp	r2, #56576
  72 00a4 DD0C52E3 		.loc 1 179 0
 174:sdk.c         **** 
 175:sdk.c         **** 	S0SPINT = 0x1;  // clear interrupt
 176:sdk.c         **** 
 177:sdk.c         **** 	IDISABLE;
 178:sdk.c         **** 	VICVectAddr = 0;		/* Acknowledge Interrupt */
 179:sdk.c         **** }
  73              	e	r2, #0
  74 00a8 0020A013 		.loc 1 173 0
  75              		beq	.L35
  76 00ac 5F00000A 	.L28:
  77              		.loc 1 179 0
  78              		ldr	r3, .L36+8
  79 00b0 B0319FE5 		str	r2, [r3, #0]
  80 00b4 002083E5 	.L8:
  81              		.loc 1 185 0
 180:sdk.c         **** d Dan Block Added
 181:sdk.c         **** 
 182:sdk.c         **** /*----------------------------------------------------------------------*/
 183:sdk.c         **** /*------------------------- Initialization -----------------------------*/
 184:sdk.c         **** /*----------------------------------------------------------------------*/
 185:sdk.c         **** void SDK_Init(void) { 	// Used in lab.c
  82              	#-536870912
  83 00b8 0E32A0E3 		add	r3, r3, #131072
  84 00bc 023883E2 		mov	r2, #1
  85 00c0 0120A0E3 		str	r2, [r3, #28]
  86 00c4 1C2083E5 		.loc 1 188 0
 186:sdk.c         **** itialize estimated position and velocity structure
 187:sdk.c         **** 	mocap.dX = 0.0;
 188:sdk.c         **** 	mocap.dY = 0.0;
  87              	r1, #0
  88 00c8 0010A0E3 		mvn	r3, #0
  89 00cc 0030E0E3 		str	r1, [r3, #-4047]
  90 00d0 CF1F03E5 		.loc 1 189 0
 189:sdk.c         **** cap.dZ = 0.0;
  91              	fd	sp!, {r4, r5, lr}
  92 00d4 3040BDE8 		bx	lr
  93 00d8 1EFF2FE1 	.L30:
  94              		.loc 1 134 0
  95              		ldr	r3, .L36
  96 00dc 7C319FE5 		mov	r2, #47616
  97 00e0 BA2CA0E3 		ldr	r1, [r3, #0]
  98 00e4 001093E5 		mov	r3, #51968
  99 00e8 CB3CA0E3 		sub	r3, r3, #69
 100 00ec 453043E2 		add	r2, r2, #190
 101 00f0 BE2082E2 		cmp	r1, r3
 102 00f4 030051E1 		cmpne	r1, r2
 103 00f8 02005111 		.loc 1 135 0
 104              		ldreq	r3, .L36+12
 105 00fc 68319F05 		.loc 1 134 0
 106              		movne	r2, #0
 107 0100 0020A013 		moveq	r2, #1
 108 0104 0120A003 		.loc 1 135 0
 109              		moveq	r2, #0
 110 0108 0020A003 		streq	r2, [r3, #0]
 111 010c 00208305 		.loc 1 134 0
 112              		beq	.L8
 113 0110 E8FFFF0A 		b	.L28
 114 0114 E5FFFFEA 	.L31:
 115              		.loc 1 141 0
 116              		ldr	r3, .L36
 117 0118 40319FE5 		ldr	r1, [r3, #0]
 118 011c 001093E5 		and	r2, r1, #65280
 119 0120 FF2C01E2 		cmp	r2, #56576
 120 0124 DD0C52E3 		.loc 1 147 0
 121              		ldrne	r3, .L36+8
 122 0128 38319F15 		movne	r2, #0
 123 012c 0020A013 		strne	r2, [r3, #0]
 124 0130 00208315 		.loc 1 141 0
 125              		bne	.L8
 126 0134 DFFFFF1A 		.loc 1 142 0
 127              		ldr	r3, .L36+16
 128 0138 30319FE5 		.loc 1 144 0
 129              		ldr	r2, .L36+12
 130 013c 28219FE5 		.loc 1 142 0
 131              		and	r1, r1, #255
 132 0140 FF1001E2 		.loc 1 143 0
 133              		mov	r0, #1
 134 0144 0100A0E3 		.loc 1 142 0
 135              		str	r1, [r3, #0]
 136 0148 001083E5 		.loc 1 144 0
 137              		str	r0, [r2, #0]
 138 014c 000082E5 		.loc 1 145 0
 139              		ldr	r3, .L36+20
 140 0150 1C319FE5 		.loc 1 143 0
 141              		ldr	r2, .L36+24
 142 0154 1C219FE5 		.loc 1 145 0
 143              		mov	r1, #0
 144 0158 0010A0E3 		str	r1, [r3, #0]
 145 015c 001083E5 		.loc 1 143 0
 146              		str	r0, [r2, #0]
 147 0160 000082E5 		b	.L8
 148 0164 D3FFFFEA 	.L32:
 149              		.loc 1 151 0
 150              		ldr	r3, .L36
 151 0168 F0309FE5 		mov	r2, #51968
 152 016c CB2CA0E3 		ldr	r1, [r3, #0]
 153 0170 001093E5 		sub	r2, r2, #69
 154 0174 452042E2 		cmp	r1, r2
 155 0178 020051E1 		bne	.L8
 156 017c CDFFFF1A 		.loc 1 154 0
 157              		ldr	r3, .L36+28
 158 0180 F4309FE5 		.loc 1 152 0
 159              		mov	r1, #1
 160 0184 0110A0E3 		.loc 1 156 0
 161              		ldr	r2, .L36+32
 162 0188 F0209FE5 		.loc 1 154 0
 163              		str	r1, [r3, #0]
 164 018c 001083E5 		.loc 1 152 0
 165              		ldr	r3, .L36+8
 166 0190 D0309FE5 		.loc 1 155 0
 167              		mov	r0, #0
 168 0194 0000A0E3 		.loc 1 156 0
 169              		str	r0, [r2, #0]
 170 0198 000082E5 		.loc 1 152 0
 171              		str	r1, [r3, #0]
 172 019c 001083E5 		.loc 1 153 0
 173              		ldr	r2, .L36+12
 174 01a0 C4209FE5 		.loc 1 155 0
 175              		ldr	r3, .L36+20
 176 01a4 C8309FE5 		.loc 1 153 0
 177              		str	r1, [r2, #0]
 178 01a8 001082E5 		.loc 1 155 0
 179              		str	r0, [r3, #0]
 180 01ac 000083E5 		b	.L8
 181 01b0 C0FFFFEA 	.L34:
 182              		.loc 1 167 0
 183              		ldr	r3, .L36
 184 01b4 A4309FE5 		mov	r2, #47616
 185 01b8 BA2CA0E3 		ldr	r1, [r3, #0]
 186 01bc 001093E5 		mov	r3, #51968
 187 01c0 CB3CA0E3 		sub	r3, r3, #69
 188 01c4 453043E2 		add	r2, r2, #190
 189 01c8 BE2082E2 		cmp	r1, r3
 190 01cc 030051E1 		cmpne	r1, r2
 191 01d0 02005111 		.loc 1 168 0
 192              		ldreq	r3, .L36+28
 193 01d4 A0309F05 		.loc 1 167 0
 194              		movne	r2, #0
 195 01d8 0020A013 		moveq	r2, #1
 196 01dc 0120A003 		.loc 1 168 0
 197              		moveq	r2, #0
 198 01e0 0020A003 		streq	r2, [r3, #0]
 199 01e4 00208305 		.loc 1 167 0
 200              		beq	.L8
 201 01e8 B2FFFF0A 		b	.L28
 202 01ec AFFFFFEA 	.L33:
 203              		.loc 1 159 0
 204              		ldr	r3, .L36+36
 205 01f0 8C309FE5 		ldr	r5, .L36+40
 206 01f4 8C509FE5 		ldr	r2, [r3, #0]
 207 01f8 002093E5 		ldr	r1, [r5, #0]
 208 01fc 001095E5 		cmp	r1, r2
 209 0200 020051E1 		.loc 1 161 0
 210              		ldrlt	r3, .L36+44
 211 0204 80309FB5 		movlt	r2, r1, asl #1
 212 0208 8120A0B1 		ldrlth	r0, [r2, r3]
 213 020c B30092B1 		.loc 1 164 0
 214              		ldrge	r3, .L36+48
 215 0210 78309FA5 		.loc 1 162 0
 216              		addlt	r1, r1, #1
 217 0214 011081B2 		.loc 1 164 0
 218              		movge	r2, #1
 219 0218 0120A0A3 		.loc 1 160 0
 220              		strlt	r4, [lr, #12]
 221 021c 0C408EB5 		.loc 1 162 0
 222              		strlt	r1, [r5, #0]
 223 0220 001085B5 		.loc 1 161 0
 224              		strlt	r0, [ip, #8]
 225 0224 08008CB5 		.loc 1 164 0
 226              		strge	r2, [r3, #0]
 227 0228 002083A5 		b	.L8
 228 022c A1FFFFEA 	.L35:
 229              		.loc 1 174 0
 230              		ldr	r3, .L36+52
 231 0230 5C309FE5 		.loc 1 176 0
 232              		ldr	r2, .L36+28
 233 0234 40209FE5 		.loc 1 174 0
 234              		and	r1, r1, #255
 235 0238 FF1001E2 		.loc 1 175 0
 236              		mov	r0, #1
 237 023c 0100A0E3 		.loc 1 174 0
 238              		str	r1, [r3, #0]
 239 0240 001083E5 		.loc 1 176 0
 240              		str	r0, [r2, #0]
 241 0244 000082E5 		.loc 1 177 0
 242              		ldr	r3, .L36+32
 243 0248 30309FE5 		.loc 1 175 0
 244              		ldr	r2, .L36+56
 245 024c 44209FE5 		.loc 1 177 0
 246              		mov	r1, #0
 247 0250 0010A0E3 		str	r1, [r3, #0]
 248 0254 001083E5 		.loc 1 175 0
 249              		str	r0, [r2, #0]
 250 0258 000082E5 		b	.L8
 251 025c 95FFFFEA 	.L37:
 252              		.align	2
 253              	.L36:
 254              		.word	SPI0data
 255 0260 00000000 		.word	SPI0command
 256 0264 00000000 		.word	f28027_ready
 257 0268 00000000 		.word	firebit
 258 026c 00000000 		.word	UsonicData
 259 0270 00000000 		.word	UsonicTimer
 260 0274 00000000 		.word	NewUsonicData
 261 0278 00000000 		.word	readSwitchbit
 262 027c 00000000 		.word	SwitchTimer
 263 0280 00000000 		.word	SPItxSize
 264 0284 00000000 		.word	SPItxCount
 265 0288 00000000 		.word	SPItxArray
 266 028c 00000000 		.word	SPItxDone
 267 0290 00000000 		.word	MagnetSwitch
 268 0294 00000000 		.word	NewMagnetSwitch
 269 0298 00000000 	.LFE2:
 271              		.align	2
 272              		.global	SDK_Init
 274              	SDK_Init:
 275              	.LFB3:
 276              		.loc 1 195 0
 190:sdk.c         **** mocap.dVx = 0.0;
 191:sdk.c         **** 	mocap.dVy = 0.0;
 192:sdk.c         **** 	mocap.dVz = 0.0;
 193:sdk.c         **** 
 194:sdk.c         **** 	// initialize motion capture structure
 195:sdk.c         **** 	real_mocap.dT = 0.0;
 277              	15 0
 278              		ldr	r4, .L40+4
 279              		.loc 1 219 0
 280              		str	r2, [r4, #12]	@ float
 281 029c 30402DE9 		.loc 1 248 0
 282              		ldr	r2, .L40+8
 196:sdk.c         **** mocap.dThetax = 0.0;
 197:sdk.c         **** 	real_mocap.dThetay = 0.0;
 198:sdk.c         **** 	real_mocap.dThetaz = 0.0;
 199:sdk.c         **** 	real_mocap.dX = 0.0;
 200:sdk.c         **** 	real_mocap.dY = 0.0;
 201:sdk.c         **** 	real_mocap.dZ = 0.0;
 202:sdk.c         **** 	real_mocap.iFrame = 1;
 203:sdk.c         **** 
 204:sdk.c         **** 	// initialize forces and torques structure
 205:sdk.c         **** 	u.u1 = 0.0;
 206:sdk.c         **** 	u.u2 = 0.0;
 207:sdk.c         **** 	u.u3 = 0.0;
 208:sdk.c         **** 	float mass = 1.9; // kg	
 209:sdk.c         **** 	u.u4 = mass*9.81;
 210:sdk.c         **** 
 211:sdk.c         **** 	// initialize flags
 212:sdk.c         **** 	initialize = 0;
 213:sdk.c         **** 	velocityEstHolder = 0;
 214:sdk.c         **** 
 215:sdk.c         **** 	// low pass filter initializations
 216:sdk.c         **** 	VelEstX = 0.0;
 217:sdk.c         **** 	VelEstY = 0.0;
 218:sdk.c         **** 	VelEstZ = 0.0;
 219:sdk.c         **** 	previousXMeas = 0.0;
 283              	1 222 0
 284 02a0 CC209FE5 		mov	ip, #0
 285              		.loc 1 223 0
 286 02a4 CC409FE5 		ldr	r1, .L40+12
 287              		.loc 1 248 0
 288 02a8 0C2084E5 		str	ip, [r2, #0]
 220:sdk.c         **** reviousZMeas = 0.0;
 221:sdk.c         **** 
 222:sdk.c         **** 	// Integral of error Initializations
 223:sdk.c         **** 	errorcum[0] = 0.0;
 224:sdk.c         **** 	errorcum[1] = 0.0;
 225:sdk.c         **** 	errorcum[2] = 0.0;
 226:sdk.c         **** 	IntegralHolder = 0;
 227:sdk.c         **** 
 228:sdk.c         **** 	takeoff2 = 0;
 229:sdk.c         **** 
 230:sdk.c         **** 	// Start Dan Block Added
 231:sdk.c         **** //	ultrasound_timer = 0;
 232:sdk.c         **** //	ultrasound_z = 0;
 233:sdk.c         **** //	ultrasound_vz = 0;
 234:sdk.c         **** //	ultrasound_z_prev = 0;
 235:sdk.c         **** //	ultrasound_z_error_sum = 0;
 236:sdk.c         **** 
 237:sdk.c         **** 	my_sdkloop_counter = 0;
 238:sdk.c         **** // End Dan Block Added
 239:sdk.c         **** }
 240:sdk.c         **** /*----------------------------------------------------------------------*/
 241:sdk.c         **** /*----------------------- End Initialization ---------------------------*/
 242:sdk.c         **** /*----------------------------------------------------------------------*/
 243:sdk.c         **** 
 244:sdk.c         **** 
 245:sdk.c         **** 
 246:sdk.c         **** void SDK_mainloop(void)
 247:sdk.c         **** {
 248:sdk.c         **** //#ifdef MATLAB
 289              	1 222 0
 290 02ac C8209FE5 		ldr	r2, .L40+16
 291              		.loc 1 223 0
 292 02b0 00C0A0E3 		str	ip, [r1, #0]
 293              		.loc 1 222 0
 294 02b4 C4109FE5 		str	ip, [r2, #0]
 295              		.loc 1 227 0
 296 02b8 00C082E5 		ldr	r1, .L40+20
 297              		.loc 1 226 0
 298 02bc C0209FE5 		ldr	r2, .L40+24
 299              		.loc 1 197 0
 300 02c0 00C081E5 		mov	r3, #0
 301              		.loc 1 226 0
 302 02c4 00C082E5 		str	r3, [r2, #0]	@ float
 303              		.loc 1 227 0
 304 02c8 B8109FE5 		str	r3, [r1, #0]	@ float
 305              		.loc 1 228 0
 306 02cc B8209FE5 		ldr	r2, .L40+28
 307              		.loc 1 229 0
 308 02d0 0030A0E3 		ldr	r1, .L40+32
 309              		.loc 1 228 0
 310 02d4 003082E5 		str	r3, [r2, #0]	@ float
 311              		.loc 1 229 0
 312 02d8 003081E5 		str	r3, [r1, #0]	@ float
 313              		.loc 1 230 0
 314 02dc AC209FE5 		ldr	r2, .L40+36
 315              		.loc 1 231 0
 316 02e0 AC109FE5 		ldr	r1, .L40+40
 317              		.loc 1 205 0
 318 02e4 003082E5 		ldr	r0, .L40+44
 319              		.loc 1 197 0
 320 02e8 003081E5 		ldr	lr, .L40+48
 321              		.loc 1 234 0
 322 02ec A4209FE5 		ldr	r5, .L40+52
 323              		.loc 1 230 0
 324 02f0 A4109FE5 		str	r3, [r2, #0]	@ float
 325              		.loc 1 231 0
 326 02f4 A4009FE5 		str	r3, [r1, #0]	@ float
 327              		.loc 1 237 0
 328 02f8 A4E09FE5 		ldr	r2, .L40+56
 329              		.loc 1 239 0
 330 02fc A4509FE5 		ldr	r1, .L40+60
 331              		.loc 1 236 0
 332 0300 003082E5 		str	r3, [r5, #8]	@ float
 333              		.loc 1 202 0
 334 0304 003081E5 		str	r3, [lr, #28]	@ float
 335              		.loc 1 197 0
 336 0308 9C209FE5 		str	r3, [lr, #8]	@ float
 337              		.loc 1 198 0
 338 030c 9C109FE5 		str	r3, [lr, #12]	@ float
 339              		.loc 1 199 0
 340 0310 083085E5 		str	r3, [lr, #16]	@ float
 341              		.loc 1 200 0
 342 0314 1C308EE5 		str	r3, [lr, #20]	@ float
 343              		.loc 1 201 0
 344 0318 08308EE5 		str	r3, [lr, #24]	@ float
 345              		.loc 1 205 0
 346 031c 0C308EE5 		str	r3, [r0, #4]	@ float
 347              		.loc 1 206 0
 348 0320 10308EE5 		str	r3, [r0, #20]	@ float
 349              		.loc 1 207 0
 350 0324 14308EE5 		str	r3, [r0, #24]	@ float
 351              		.loc 1 208 0
 352 0328 18308EE5 		str	r3, [r0, #28]	@ float
 353              		.loc 1 209 0
 354 032c 043080E5 		str	r3, [r0, #8]	@ float
 355              		.loc 1 210 0
 356 0330 143080E5 		str	r3, [r0, #12]	@ float
 357              		.loc 1 211 0
 358 0334 183080E5 		str	r3, [r0, #16]	@ float
 359              		.loc 1 215 0
 360 0338 1C3080E5 		str	r3, [r4, #0]	@ float
 361              		.loc 1 216 0
 362 033c 083080E5 		str	r3, [r4, #4]	@ float
 363              		.loc 1 217 0
 364 0340 0C3080E5 		str	r3, [r4, #8]	@ float
 365              		.loc 1 234 0
 366 0344 103080E5 		str	r3, [r5, #0]	@ float
 367              		.loc 1 235 0
 368 0348 003084E5 		str	r3, [r5, #4]	@ float
 369              		.loc 1 212 0
 370 034c 043084E5 		mov	r3, #1	@ movhi
 371              		.loc 1 237 0
 372 0350 083084E5 		str	ip, [r2, #0]
 373              		.loc 1 239 0
 374 0354 003085E5 		str	ip, [r1, #0]
 375              		.loc 1 212 0
 376 0358 043085E5 		strh	r3, [r0, #0]	@ movhi
 377              		.loc 1 250 0
 378 035c 0130A0E3 		ldmfd	sp!, {r4, r5, lr}
 379              		bx	lr
 380 0360 00C082E5 	.L41:
 381              		.align	2
 382 0364 00C081E5 	.L40:
 383              		.word	1100291244
 384 0368 B030C0E1 		.word	u
 249:sdk.c         **** is runs only in combination with the AscTec Simulink Toolkit
 250:sdk.c         **** 
 385              	tX
 386 036c 3040BDE8 		.word	VelEstZ
 387 0370 1EFF2FE1 		.word	previousXMeas
 388              		.word	previousYMeas
 389              		.word	previousZMeas
 390              		.word	real_mocap
 391 0374 AC1C9541 		.word	mocap
 392 0378 00000000 		.word	errorcum
 393 037c 00000000 		.word	IntegralHolder
 394 0380 00000000 		.word	takeoff2
 395 0384 00000000 	.LFE3:
 397 038c 00000000 		.align	2
 398 0390 00000000 		.global	SDK_SetEmergencyMode
 400 0398 00000000 	SDK_SetEmergencyMode:
 401 039c 00000000 	.LFB5:
 402 03a0 00000000 		.loc 1 407 0
 403 03a4 00000000 		@ Function supports interworking.
 404 03a8 00000000 		@ args = 0, pretend = 0, frame = 0
 405 03ac 00000000 		@ frame_needed = 0, uses_anonymous_args = 0
 406 03b0 00000000 		@ link register save eliminated.
 407              	.LVL0:
 408              		and	r0, r0, #255
 409              		.loc 1 408 0
 410              		sub	r3, r0, #1
 411              		cmp	r0, #8
 412              		cmpne	r3, #1
 413              		.loc 1 407 0
 251:sdk.c         **** /jeti telemetry can always be activated. You may deactivate this call if you don't have the AscTec 
 252:sdk.c         **** 	//SDK_jetiAscTecExampleRun();
 253:sdk.c         **** 
 254:sdk.c         **** //#else //write your own C-cod e within this function
 255:sdk.c         **** 
 256:sdk.c         **** 	imusensor.dT = (float) RO_ALL_Data.flight_time;
 257:sdk.c         **** 	imusensor.dThetax = (3.14159/180.0)*(((float) RO_ALL_Data.angle_roll) / 1000.0);
 258:sdk.c         **** 	imusensor.dThetay = (3.14159/180.0)*(((float) RO_ALL_Data.angle_pitch) / 1000.0);
 259:sdk.c         **** 	imusensor.dThetaz = angle_diff((3.14159 / 180.0) * (((float) RO_ALL_Data.angle_yaw) / 1000.0),0);
 260:sdk.c         **** 	imusensor.dOmegax = (3.1415 / 180.0) * 0.0154 * (float) IMU_CalcData.angvel_roll;
 261:sdk.c         **** 	imusensor.dOmegay = (3.1415 / 180.0) * 0.0154 * (float) IMU_CalcData.angvel_nick;
 262:sdk.c         **** 	imusensor.dOmegaz = (3.1415 / 180.0) * 0.0154 * (float) IMU_CalcData.angvel_yaw;
 263:sdk.c         **** 
 264:sdk.c         **** 	if (takeoff2 == 0) {
 265:sdk.c         **** 		if (real_mocap.dZ < -0.5) {
 266:sdk.c         **** 			takeoff2 = 1;
 267:sdk.c         **** 		}
 268:sdk.c         **** 	}
 269:sdk.c         **** 
 270:sdk.c         **** // Added By Dan Block
 271:sdk.c         **** 	if (NewUsonicData == 1) {
 272:sdk.c         **** 		USMaxBot_range1 = UsonicData;
 273:sdk.c         **** 		//filter_ultrasound_z();
 274:sdk.c         **** 		NewUsonicData = 0;
 275:sdk.c         **** 	}
 276:sdk.c         **** 	if (NewMagnetSwitch == 1) {
 277:sdk.c         **** 		GotMagnet = ~MagnetSwitch & 0x1;
 278:sdk.c         **** 		NewMagnetSwitch = 0;
 279:sdk.c         **** 	}
 280:sdk.c         **** // End Add
 281:sdk.c         **** 
 282:sdk.c         **** 	lab();
 283:sdk.c         **** 
 284:sdk.c         **** //	 Add by Dan Block
 285:sdk.c         **** //	 Code to read magnet switch from attached 28027 board
 286:sdk.c         **** //	if (timer > SWITCH_INIT_DELAY) { //wait SWITCH_INIT_DELAY ms before talking to 28027
 287:sdk.c         **** //		if (f28027_ready == 1) {
 288:sdk.c         **** //			SwitchTimer++;
 289:sdk.c         **** //			if (readSwitchbit == 1) {
 290:sdk.c         **** //				if (SwitchTimer == 25) {  // read every 25 ms
 291:sdk.c         **** //					IOCLR0 = (1<<EXT_NCS);
 292:sdk.c         **** //					SPI0command = 0xCC05;
 293:sdk.c         **** //					S0SPDR = SPI0command;  // send Sample Switch Command
 294:sdk.c         **** //				}
 295:sdk.c         **** //			} else if (SwitchTimer == 26) {
 296:sdk.c         **** //				IOCLR0 = (1<<EXT_NCS);
 297:sdk.c         **** //				SPI0command = 0xCC06;
 298:sdk.c         **** //				S0SPDR = SPI0command;  // send transfer Switch State Command
 299:sdk.c         **** //			}
 300:sdk.c         **** //		} else {
 301:sdk.c         **** //			IOCLR0 = (1<<EXT_NCS);
 302:sdk.c         **** //			SPI0command = 0xCC03;
 303:sdk.c         **** //			S0SPDR = SPI0command;  // send Are you Alive command
 304:sdk.c         **** //		}
 305:sdk.c         **** //	}
 306:sdk.c         **** 
 307:sdk.c         **** // This code was communicating with BBB
 308:sdk.c         **** //	if (timer > SDCARD_START_DELAY) {
 309:sdk.c         **** //		if(0==(timer%500)) {
 310:sdk.c         **** //			if (SPItxDone == 1) {
 311:sdk.c         **** //				SPItxDone = 0;
 312:sdk.c         **** //				testarray[0] = (float)(testcount);
 313:sdk.c         **** //				testarray[1] = (float)(5*testcount + 1);
 314:sdk.c         **** //				testarray[2] = (float)(5*testcount + 2);
 315:sdk.c         **** //				testarray[3] = (float)(5*testcount + 3);
 316:sdk.c         **** //				testarray[4] = (float)(5*testcount + 4);
 317:sdk.c         **** //				testcount++;
 318:sdk.c         **** //				for (i=0;i<5;i++) {
 319:sdk.c         **** //					f2s.fl = testarray[i];
 320:sdk.c         **** //					SPItxArray[2*i] = f2s.sh[0];
 321:sdk.c         **** //					SPItxArray[2*i + 1] = f2s.sh[1];
 322:sdk.c         **** //				}
 323:sdk.c         **** //				SPItxCount = 0;
 324:sdk.c         **** //				SPItxSize = 10;
 325:sdk.c         **** //
 326:sdk.c         **** //				IOCLR0 = (1<<EXT_NCS);
 327:sdk.c         **** //				SPI0command = 0xCC04;
 328:sdk.c         **** //				S0SPDR = SPI0command;  // send Command to beaglebone to store floats to SDCard
 329:sdk.c         **** //			} else {
 330:sdk.c         **** //				numMissedTx++;
 331:sdk.c         **** //			}
 332:sdk.c         **** //		}
 333:sdk.c         **** //	}
 334:sdk.c         **** 
 335:sdk.c         **** 
 336:sdk.c         **** 	// Code for reading Ultrasonic sensor if 28027 board attached
 337:sdk.c         **** 	if (timer > USONIC_INIT_DELAY) { //wait USONIC_INIT_DELAY ms before talking to 28027
 338:sdk.c         **** 		if (f28027_ready == 1) {
 339:sdk.c         **** 			UsonicTimer++;
 340:sdk.c         **** 			if (firebit == 1) {
 341:sdk.c         **** 				if (UsonicTimer == 5) {
 342:sdk.c         **** 					IOCLR0 = (1<<EXT_NCS);
 343:sdk.c         **** 					SPI0command = 0xCC01;
 344:sdk.c         **** 					S0SPDR = SPI0command;  // send Start Measurement Usonic Command
 345:sdk.c         **** 				}
 346:sdk.c         **** 			} else if (UsonicTimer == 75) {
 347:sdk.c         **** 				IOCLR0 = (1<<EXT_NCS);
 348:sdk.c         **** 				SPI0command = 0xCC02;
 349:sdk.c         **** 				S0SPDR = SPI0command;  // send Read Measurement Usonic Command
 350:sdk.c         **** 			}
 351:sdk.c         **** 		} else {
 352:sdk.c         **** 			IOCLR0 = (1<<EXT_NCS);
 353:sdk.c         **** 			SPI0command = 0xCC03;
 354:sdk.c         **** 			S0SPDR = SPI0command;  // send Are you Alive command
 355:sdk.c         **** 		}
 356:sdk.c         **** 	}
 357:sdk.c         **** 
 358:sdk.c         **** 	timer++;
 359:sdk.c         **** 
 360:sdk.c         **** 	my_sdkloop_counter++;
 361:sdk.c         **** 
 362:sdk.c         **** // End Add by Dan Block
 363:sdk.c         **** 
 364:sdk.c         **** 	//SDK_jetiAscTecExampleRun();
 365:sdk.c         **** 
 366:sdk.c         **** 	//if (wpExampleActive) //this is used to activate the waypoint example via the jeti telemetry disp
 367:sdk.c         **** 	//	SDK_EXAMPLE_gps_waypoint_control();
 368:sdk.c         **** 
 369:sdk.c         **** //#endif
 370:sdk.c         **** }
 371:sdk.c         **** 
 372:sdk.c         **** // Dan Block Add
 373:sdk.c         **** //void filter_ultrasound_z(void) {
 374:sdk.c         **** //	// take finite difference to estimate z velocity
 375:sdk.c         **** //	float dt = ((float)(my_sdkloop_counter - ultrasound_timer))/1000.0;
 376:sdk.c         **** //    float alpha = 0.95;
 377:sdk.c         **** //	ultrasound_z = (float)UsonicData/100.0;
 378:sdk.c         **** //	if (ultrasound_z_prev > 0.0) {
 379:sdk.c         **** //        ultrasound_z = alpha * ultrasound_z + (1-alpha)* ultrasound_z_prev;
 380:sdk.c         **** //		ultrasound_vz = (ultrasound_z - ultrasound_z_prev)/dt;
 381:sdk.c         **** //	}
 382:sdk.c         **** //
 383:sdk.c         **** //	g_state.dZ = ultrasound_z;
 384:sdk.c         **** //	g_state.dVz = ultrasound_vz;
 385:sdk.c         **** //
 386:sdk.c         **** //	ultrasound_z_prev = ultrasound_z;
 387:sdk.c         **** //	ultrasound_timer = my_sdkloop_counter;
 388:sdk.c         **** //}
 389:sdk.c         **** // End Dan Block Add
 390:sdk.c         **** 
 391:sdk.c         **** /*
 392:sdk.c         ****  *
 393:sdk.c         ****  * Sets emergency mode on LowLevel processor. Select one of the EM_ defines as mode option. See EM_
 394:sdk.c         ****  */
 395:sdk.c         **** 
 396:sdk.c         **** void SDK_SetEmergencyMode(unsigned char mode) {
 397:sdk.c         **** 	if ((mode != EM_SAVE_EXTENDED_WAITING_TIME) && (mode != EM_SAVE) && (mode
 398:sdk.c         **** 			!= EM_RETURN_AT_MISSION_SUMMIT) && (mode
 399:sdk.c         **** 			!= EM_RETURN_AT_PREDEFINED_HEIGHT))
 400:sdk.c         **** 		return;
 401:sdk.c         **** 	emergencyMode = mode;
 402:sdk.c         **** 	emergencyModeUpdate = 1;
 403:sdk.c         **** }
 404:sdk.c         **** 
 405:sdk.c         **** /*
 406:sdk.c         ****  * the following example shows the direct motor command usage by mapping the stick directly to the 
 407:sdk.c         ****  */
 414              	oc 1 408 0
 415              		bls	.L43
 416              		cmp	r0, #4
 417              		bxne	lr
 418              	.L43:
 419              		.loc 1 412 0
 420 03b4 FF0000E2 		ldr	r3, .L47
 408:sdk.c         **** rect_individual_motor_commands(void)
 421              	0, [r3, #0]
 422 03b8 013040E2 		.loc 1 413 0
 423 03bc 080050E3 		ldr	r3, .L47+4
 424 03c0 01005313 		mov	r2, #1
 425              		strb	r2, [r3, #0]
 426              		bx	lr
 427              	.L48:
 428 03c4 0100009A 		.align	2
 429 03c8 040050E3 	.L47:
 430 03cc 1EFF2F11 		.word	emergencyMode
 431              		.word	emergencyModeUpdate
 409:sdk.c         **** 
 410:sdk.c         **** 
 411:sdk.c         **** 	WO_SDK.ctrl_mode=0x00;	//0x00: direct individual motor control: individual commands for motors 0..
 412:sdk.c         **** 							//0x01: direct motor control using standard output mapping: commands are interpreted as pitc
 432              	ze	SDK_SetEmergencyMode, .-SDK_SetEmergencyMode
 433 03d0 10309FE5 		.align	2
 434 03d4 0000C3E5 		.global	SDK_EXAMPLE_direct_individual_motor_commands
 413:sdk.c         **** 				//0x02: attitude and throttle control: commands are input for standard attitude controller
 435              	ype	SDK_EXAMPLE_direct_individual_motor_commands, %function
 436 03d8 0C309FE5 	SDK_EXAMPLE_direct_individual_motor_commands:
 437 03dc 0120A0E3 	.LFB6:
 438 03e0 0020C3E5 		.loc 1 420 0
 439 03e4 1EFF2FE1 		@ Function supports interworking.
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 442              		@ link register save eliminated.
 443 03e8 00000000 		.loc 1 435 0
 444 03ec 00000000 		ldr	r0, .L63
 445              		ldr	r2, .L63+4
 446              		ldrh	r3, [r0, #16]
 447              		umull	ip, r1, r2, r3
 448              		rsb	r3, r1, r3
 449              		.loc 1 442 0
 450              		ldrh	ip, [r0, #24]
 451              		.loc 1 435 0
 414:sdk.c         **** 						//0x03: GPS waypoint control
 415:sdk.c         **** 
 416:sdk.c         **** 	WO_SDK.ctrl_enabled=1;  //0: disable control by HL processor
 417:sdk.c         **** 							//1: enable control by HL processor
 418:sdk.c         **** 
 419:sdk.c         **** 	WO_SDK.disable_motor_onoff_by_stick=0;
 420:sdk.c         **** 
 452              	lsr #1
 453              		.loc 1 442 0
 454              		mov	r3, #2496
 455              		.loc 1 435 0
 456              		ldr	r0, .L63+8
 421:sdk.c         **** ed int i;
 422:sdk.c         **** 
 423:sdk.c         **** 	//scale throttle stick to [0..200] and map it to all motors
 424:sdk.c         **** 	WO_Direct_Individual_Motor_Control.motor[0]=RO_ALL_Data.channel[2]/21;
 425:sdk.c         **** 	WO_Direct_Individual_Motor_Control.motor[1]=RO_ALL_Data.channel[2]/21;
 426:sdk.c         **** 	WO_Direct_Individual_Motor_Control.motor[2]=RO_ALL_Data.channel[2]/21;
 427:sdk.c         **** 	WO_Direct_Individual_Motor_Control.motor[3]=RO_ALL_Data.channel[2]/21;
 428:sdk.c         **** 	WO_Direct_Individual_Motor_Control.motor[4]=RO_ALL_Data.channel[2]/21;
 429:sdk.c         **** 	WO_Direct_Individual_Motor_Control.motor[5]=RO_ALL_Data.channel[2]/21;
 430:sdk.c         **** 
 431:sdk.c         **** 	if (RO_ALL_Data.channel[6]>2500)
 432:sdk.c         **** 	{
 433:sdk.c         **** 		WO_Direct_Individual_Motor_Control.motorReverseMask=0x01; //invert motor 0 if AUX switch is enabl
 434:sdk.c         **** 		//limit inverted speed (IMPORTANT! THIS IS NOT DONE AUTOMATICALLY!)
 435:sdk.c         **** 		if (WO_Direct_Individual_Motor_Control.motor[0]>80)
 457              	 1 422 0
 458 03f0 B0009FE5 		ldr	r2, .L63+12
 459 03f4 B0209FE5 		.loc 1 442 0
 460 03f8 B031D0E1 		add	r3, r3, #4
 461 03fc 92C381E0 		.loc 1 435 0
 462 0400 033061E0 		mov	r1, r1, lsr #4
 436:sdk.c         **** dividual_Motor_Control.motor[0]=80;
 437:sdk.c         **** 	}else
 438:sdk.c         **** 		WO_Direct_Individual_Motor_Control.motorReverseMask=0x00;
 439:sdk.c         **** 
 440:sdk.c         **** 
 441:sdk.c         **** 	//make sure commands are never 0 so that motors will always keep spinning
 442:sdk.c         ****     //also make sure that commands stay within range
 463              	1, r1, #255
 464 0404 B8C1D0E1 		.loc 1 442 0
 465              		cmp	ip, r3
 466 0408 A31081E0 		.loc 1 422 0
 467              		mov	r3, #0
 468 040c 273DA0E3 		.loc 1 427 0
 469              		mov	ip, #1
 470 0410 98009FE5 		.loc 1 420 0
 471              		@ lr needed for prologue
 472 0414 98209FE5 		.loc 1 430 0
 473              		strb	r3, [r2, #2]
 474 0418 043083E2 		.loc 1 440 0
 475              		strb	r1, [r0, #5]
 476 041c 2112A0E1 		.loc 1 422 0
 477 0420 FF1001E2 		strb	r3, [r2, #0]
 478              		.loc 1 427 0
 479 0424 03005CE1 		strb	ip, [r2, #1]
 480              		.loc 1 435 0
 481 0428 0030A0E3 		strb	r1, [r0, #0]
 482              		.loc 1 436 0
 483 042c 01C0A0E3 		strb	r1, [r0, #1]
 484              		.loc 1 437 0
 485              		strb	r1, [r0, #2]
 486              		.loc 1 438 0
 487 0430 0230C2E5 		strb	r1, [r0, #3]
 488              		.loc 1 439 0
 489 0434 0510C0E5 		strb	r1, [r0, #4]
 490              		.loc 1 449 0
 491 0438 0030C2E5 		strlsb	r3, [r0, #8]
 492              		.loc 1 442 0
 493 043c 01C0C2E5 		bls	.L52
 494              		.loc 1 446 0
 495 0440 0010C0E5 		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 496              		cmp	r3, #80
 497 0444 0110C0E5 		.loc 1 447 0
 498              		movhi	r3, #80
 499 0448 0210C0E5 		.loc 1 444 0
 500              		strb	ip, [r0, #8]
 501 044c 0310C0E5 		.loc 1 447 0
 502              		strhib	r3, [r0, #0]
 503 0450 0410C0E5 	.L52:
 443:sdk.c         **** (i=0;i<6;i++)
 444:sdk.c         ****     {
 445:sdk.c         ****     	if(!WO_Direct_Individual_Motor_Control.motor[i]) WO_Direct_Individual_Motor_Control.motor[i]=1
 446:sdk.c         ****     	else if (WO_Direct_Individual_Motor_Control.motor[i]>200) WO_Direct_Individual_Motor_Control.m
 447:sdk.c         ****     }
 448:sdk.c         **** }
 449:sdk.c         **** 
 504              	
 505 0454 0830C095 		add	r1, r2, #6
 506              		mvn	ip, #55
 507 0458 0400009A 	.L54:
 508              		.loc 1 456 0
 509 045c 0030D0E5 		ldrb	r3, [r2, #0]	@ zero_extendqisi2
 510 0460 500053E3 		cmp	r3, #0
 511              		streqb	r0, [r2, #0]
 512 0464 5030A083 		beq	.L57
 513              		.loc 1 457 0
 514 0468 08C0C0E5 		cmp	r3, #200
 515              		strhib	ip, [r2, #0]
 516 046c 0030C085 	.L57:
 517              		add	r2, r2, #1
 518              		.loc 1 454 0
 519 0470 38209FE5 		cmp	r2, r1
 520 0474 0100A0E3 		bne	.L54
 521 0478 061082E2 		.loc 1 459 0
 522 047c 37C0E0E3 		bx	lr
 523              	.L64:
 450:sdk.c         **** DK_EXAMPLE_direct_motor_commands_with_standard_output_mapping(void)
 451:sdk.c         **** {
 452:sdk.c         **** 	WO_SDK.ctrl_mode=0x01;	//0x00: direct individual motor control: individual commands for motors 0..
 453:sdk.c         **** 							//0x01: direct motor control using standard output mapping: commands are interpreted as pitc
 454:sdk.c         **** 							//0x02: attitude and throttle control: commands are input for standard attitude controller
 455:sdk.c         **** 							//0x03: GPS waypoint control
 456:sdk.c         **** 
 524              	ord	RO_ALL_Data
 525 0480 0030D2E5 		.word	-2045222521
 526 0484 000053E3 		.word	WO_Direct_Individual_Motor_Control
 527 0488 0000C205 		.word	WO_SDK
 528 048c 0100000A 	.LFE6:
 457:sdk.c         **** .ctrl_enabled=1;  //0: disable control by HL processor
 529              	e	SDK_EXAMPLE_direct_individual_motor_commands, .-SDK_EXAMPLE_direct_individual_motor_commands
 530 0490 C80053E3 		.align	2
 531 0494 00C0C285 		.global	SDK_EXAMPLE_direct_motor_commands_with_standard_output_mapping
 533 0498 012082E2 	SDK_EXAMPLE_direct_motor_commands_with_standard_output_mapping:
 534              	.LFB7:
 535 049c 010052E1 		.loc 1 463 0
 536 04a0 F6FFFF1A 		@ Function supports interworking.
 458:sdk.c         **** 						//1: enable control by HL processor
 459:sdk.c         **** 
 537              	= 0, pretend = 0, frame = 0
 538 04a4 1EFF2FE1 		@ frame_needed = 0, uses_anonymous_args = 0
 539              		.loc 1 476 0
 540              		ldr	r3, .L67
 541              		.loc 1 463 0
 542 04a8 00000000 		stmfd	sp!, {r4, r5, r6, r7, lr}
 543 04ac 87611886 	.LCFI2:
 544 04b0 00000000 		.loc 1 478 0
 545 04b4 00000000 		ldrh	ip, [r3, #16]
 546              		.loc 1 477 0
 547              		ldr	r4, .L67+4
 548              		ldrh	r0, [r3, #14]
 549              		.loc 1 476 0
 550              		ldrh	r6, [r3, #12]
 551              		.loc 1 479 0
 552              		ldrh	r1, [r3, #18]
 460:sdk.c         **** *
 461:sdk.c         **** 	 *  Stick commands directly mapped to motors, NO attitude control! Do NOT try to fly!
 462:sdk.c         **** 	 * */
 463:sdk.c         **** 
 553              	ov	r2, #4080
 554              		.loc 1 478 0
 555              		umull	r3, r5, r4, ip
 556              		.loc 1 476 0
 464:sdk.c         **** Direct_Motor_Control.pitch=(4095-RO_ALL_Data.channel[0])/21;
 465:sdk.c         **** 	WO_Direct_Motor_Control.roll=RO_ALL_Data.channel[1]/21;
 466:sdk.c         **** 	WO_Direct_Motor_Control.thrust=RO_ALL_Data.channel[2]/21;
 467:sdk.c         **** 	WO_Direct_Motor_Control.yaw=(4095-RO_ALL_Data.channel[3])/21;
 468:sdk.c         **** 
 469:sdk.c         **** }
 470:sdk.c         **** 
 471:sdk.c         **** 
 472:sdk.c         **** void SDK_EXAMPLE_attitude_commands(void)
 473:sdk.c         **** {
 474:sdk.c         **** 	WO_SDK.ctrl_mode=0x02;	//0x00: direct individual motor control: individual commands for motors 0..
 475:sdk.c         **** 							//0x01: direct motor control using standard output mapping: commands are interpreted as pitc
 476:sdk.c         **** 							//0x02: attitude and throttle control: commands are input for standard attitude controller
 557              		r3, #817889280
 558 04b8 94309FE5 		.loc 1 477 0
 559              		umull	r7, lr, r4, r0
 560 04bc F0402DE9 		.loc 1 476 0
 561              		add	r2, r2, #15
 477:sdk.c         **** : GPS waypoint control
 478:sdk.c         **** 
 562              	r3, r3, #199680
 563 04c0 B0C1D3E1 		.loc 1 479 0
 564              		rsb	r1, r1, r2
 565 04c4 8C409FE5 		.loc 1 476 0
 566 04c8 BE00D3E1 		add	r3, r3, #49
 567              		rsb	r2, r6, r2
 568 04cc BC60D3E1 		.loc 1 479 0
 479:sdk.c         **** O_SDK.ctrl_enabled=1;  //0: disable control by HL processor
 569              	r4, r6, r3, r1
 570 04d0 B211D3E1 		.loc 1 476 0
 571              		smull	r7, r4, r3, r2
 572 04d4 FF2EA0E3 		.loc 1 477 0
 573              		rsb	r0, lr, r0
 574 04d8 943C85E0 		.loc 1 478 0
 575              		rsb	ip, r5, ip
 576 04dc C335A0E3 		.loc 1 476 0
 577              		ldr	r3, .L67+8
 578 04e0 94708EE0 		.loc 1 477 0
 579              		add	lr, lr, r0, lsr #1
 580 04e4 0F2082E2 		.loc 1 478 0
 581 04e8 C33B83E2 		add	r5, r5, ip, lsr #1
 582              		.loc 1 476 0
 583 04ec 021061E0 		mov	r2, r2, asr #31
 584              		.loc 1 464 0
 585 04f0 313083E2 		ldr	ip, .L67+12
 586 04f4 022066E0 		.loc 1 479 0
 587              		mov	r1, r1, asr #31
 588 04f8 9341C6E0 		.loc 1 464 0
 589              		mov	r0, #1
 590 04fc 9372C4E0 		.loc 1 476 0
 591              		rsb	r2, r2, r4, asr #2
 592 0500 00006EE0 		.loc 1 479 0
 593              		rsb	r1, r1, r6, asr #2
 594 0504 0CC065E0 		.loc 1 477 0
 595              		mov	lr, lr, lsr #4
 596 0508 4C309FE5 		.loc 1 478 0
 597              		mov	r5, r5, lsr #4
 598 050c A0E08EE0 		.loc 1 469 0
 599              		strb	r0, [ip, #1]
 600 0510 AC5085E0 		.loc 1 479 0
 601              		strb	r1, [r3, #2]
 602 0514 C22FA0E1 		.loc 1 476 0
 603              		strb	r2, [r3, #0]
 604 0518 40C09FE5 		.loc 1 477 0
 605              		strb	lr, [r3, #1]
 606 051c C11FA0E1 		.loc 1 478 0
 607              		strb	r5, [r3, #3]
 608 0520 0100A0E3 		.loc 1 464 0
 609              		strb	r0, [ip, #0]
 610 0524 442162E0 		.loc 1 481 0
 611              		ldmfd	sp!, {r4, r5, r6, r7, lr}
 612 0528 461161E0 		bx	lr
 613              	.L68:
 614 052c 2EE2A0E1 		.align	2
 615              	.L67:
 616 0530 2552A0E1 		.word	RO_ALL_Data
 617              		.word	-2045222521
 618 0534 0100CCE5 		.word	WO_Direct_Motor_Control
 619              		.word	WO_SDK
 620 0538 0210C3E5 	.LFE7:
 622 053c 0020C3E5 		.align	2
 623              		.global	SDK_EXAMPLE_attitude_commands
 625              	SDK_EXAMPLE_attitude_commands:
 626 0544 0350C3E5 	.LFB8:
 627              		.loc 1 485 0
 628 0548 0000CCE5 		@ Function supports interworking.
 480:sdk.c         **** 						//1: enable control by HL processor
 481:sdk.c         **** 
 629              	s_anonymous_args = 0
 630 054c F040BDE8 		@ link register save eliminated.
 631 0550 1EFF2FE1 		.loc 1 486 0
 632              		ldr	r1, .L71
 633              		.loc 1 495 0
 634              		ldr	r0, .L71+4
 635 0554 00000000 		.loc 1 491 0
 636 0558 87611886 		mov	r3, #1
 637 055c 00000000 		strb	r3, [r1, #1]
 638 0560 00000000 		.loc 1 498 0
 639              		mov	r3, #400	@ movhi
 640              		.loc 1 486 0
 641              		mov	r2, #2
 642              		.loc 1 498 0
 643              		strh	r3, [r0, #6]	@ movhi
 644              		.loc 1 495 0
 645              		mov	r3, #8	@ movhi
 482:sdk.c         **** /with this example the UAV will go to ~10% throttle when SDK control is activated
 483:sdk.c         **** 	WO_CTRL_Input.ctrl=0x08;	//0x08: enable throttle control by HL. Height control and GPS are deactiv
 484:sdk.c         **** 								//pitch, roll and yaw are still commanded via the remote control
 485:sdk.c         **** 
 646              	lr needed for prologue
 647              		.loc 1 486 0
 648              		strb	r2, [r1, #0]
 649              		.loc 1 495 0
 650              		strh	r3, [r0, #8]	@ movhi
 486:sdk.c         **** CTRL_Input.thrust=400;	//10% throttle command
 651              	 1 501 0
 652 0564 24109FE5 		bx	lr
 487:sdk.c         **** 
 488:sdk.c         **** }
 489:sdk.c         **** 
 490:sdk.c         **** 
 491:sdk.c         **** 
 492:sdk.c         **** /* This function demonstrates a simple waypoint command generation. The switch on Channel 7 is used
 493:sdk.c         ****  * to activate a 15m by 15m square. Therefore a waypoint is calculated from the current position an
 494:sdk.c         ****  * height and is transmitted to the low level processor. The waypoint status is monitored to switch
 495:sdk.c         ****  * the next waypoint after the current one is reached.
 653              	72:
 654 0568 24009FE5 		.align	2
 655              	.L71:
 656 056c 0130A0E3 		.word	WO_SDK
 657 0570 0130C1E5 		.word	WO_CTRL_Input
 496:sdk.c         **** CtrlWpCmd is used to send a command to the low level processor. Different options like waypoint, la
 497:sdk.c         ****  * are available. See LL_HL_comm.h for WP_CMD_* defines
 498:sdk.c         ****  *
 658              	:
 660              		.align	2
 661 0578 0220A0E3 		.global	SDK_EXAMPLE_turn_motors_on
 663 057c B630C0E1 	SDK_EXAMPLE_turn_motors_on:
 664              	.LFB10:
 665 0580 0830A0E3 		.loc 1 782 0
 666              		@ Function supports interworking.
 667              		@ args = 0, pretend = 0, frame = 0
 668              		@ frame_needed = 0, uses_anonymous_args = 0
 669 0584 0020C1E5 		.loc 1 795 0
 670              		ldr	r0, .L80
 671 0588 B830C0E1 		ldr	r3, [r0, #0]
 499:sdk.c         **** wpCtrlWpCmdUpdated has to be set to 1 to send the command. When the cmd is sent it is set back to 0
 500:sdk.c         ****  *
 501:sdk.c         ****  * wpCtrlAckTrigger is set to 1 when the LL accepts the waypoint
 672              		ldr	r2, .L80+4
 673 058c 1EFF2FE1 		.loc 1 795 0
 674              		add	ip, r3, #1
 675              		.loc 1 782 0
 676              		stmfd	sp!, {r4, lr}
 677 0590 00000000 	.LCFI3:
 678 0594 00000000 		.loc 1 790 0
 679              		mov	r1, #1
 680              		.loc 1 793 0
 681              		mov	lr, #0
 682              		.loc 1 795 0
 683              		cmp	ip, #1000
 684              		.loc 1 785 0
 685              		mov	r3, #2
 502:sdk.c         ****  * wpCtrlNavStatus gives you a navigation status. See WP_NAVSTAT_* defines in SDK.h for options
 503:sdk.c         ****  *
 504:sdk.c         ****  * wpCtrlDistToWp gives you the current distance to the current waypoint in dm (= 10 cm)
 505:sdk.c         ****  */
 506:sdk.c         **** void SDK_EXAMPLE_gps_waypoint_control()
 507:sdk.c         **** {
 508:sdk.c         **** 	static unsigned char wpExampleState=0;
 509:sdk.c         **** 	static double originLat,originLon;
 510:sdk.c         **** 
 511:sdk.c         **** 
 512:sdk.c         **** 	WO_SDK.ctrl_mode=0x03;
 513:sdk.c         **** 
 514:sdk.c         **** 	WO_SDK.ctrl_enabled=1;  //0: disable control by HL processor
 515:sdk.c         **** 							//1: enable control by HL processor
 516:sdk.c         **** 
 517:sdk.c         **** 	switch (wpExampleState)
 518:sdk.c         **** 	{
 519:sdk.c         **** 		//prior to start, the lever on channel 7 has to be in "OFF" position
 520:sdk.c         **** 		case 0:
 521:sdk.c         **** 		if ((RO_ALL_Data.channel[6]<1600) || (wpExampleActive))
 522:sdk.c         **** 			wpExampleState=1;
 523:sdk.c         **** 		break;
 524:sdk.c         **** 
 525:sdk.c         **** 		case 1:
 526:sdk.c         **** 		if ((RO_ALL_Data.channel[6]>2400) || (wpExampleActive))
 527:sdk.c         **** 		{
 528:sdk.c         **** 			double lat,lon;
 529:sdk.c         **** 			//lever was set to "ON" state -> calculate and send first waypoint and switch state
 530:sdk.c         **** 
 531:sdk.c         **** 			//fill waypoint structure
 532:sdk.c         **** 			wpToLL.max_speed=100;
 533:sdk.c         **** 			wpToLL.pos_acc=3000; 	//3m accuracy
 534:sdk.c         **** 			wpToLL.time=400; 		//4 seconds waiting time at each waypoint
 535:sdk.c         **** 			wpToLL.wp_activated=1;
 536:sdk.c         **** 
 537:sdk.c         **** 			//see LL_HL_comm.h for WPPROP defines
 538:sdk.c         **** 			wpToLL.properties=WPPROP_ABSCOORDS|WPPROP_AUTOMATICGOTO|WPPROP_HEIGHTENABLED|WPPROP_YAWENABLED;
 539:sdk.c         **** 
 540:sdk.c         **** 			//use current height and yaw
 541:sdk.c         **** 			wpToLL.yaw=RO_ALL_Data.angle_yaw; //use current yaw
 542:sdk.c         **** 			wpToLL.height=RO_ALL_Data.fusion_height; //use current height
 543:sdk.c         **** 
 544:sdk.c         **** 			originLat=(double)GPS_Data.latitude/10000000.0;
 545:sdk.c         **** 			originLon=(double)GPS_Data.longitude/10000000.0;
 546:sdk.c         **** 
 547:sdk.c         **** 			//calculate a position 15m north of us
 548:sdk.c         **** 			xy2latlon(originLat,originLon,0.0,15.0,&lat,&lon);
 549:sdk.c         **** 
 550:sdk.c         **** 			wpToLL.X=lon*10000000;
 551:sdk.c         **** 			wpToLL.Y=lat*10000000;
 552:sdk.c         **** 
 553:sdk.c         **** 			//calc chksum
 554:sdk.c         **** 			wpToLL.chksum = 0xAAAA
 555:sdk.c         **** 									+ wpToLL.yaw
 556:sdk.c         **** 									+ wpToLL.height
 557:sdk.c         **** 									+ wpToLL.time
 558:sdk.c         **** 									+ wpToLL.X
 559:sdk.c         **** 									+ wpToLL.Y
 560:sdk.c         **** 									+ wpToLL.max_speed
 561:sdk.c         **** 									+ wpToLL.pos_acc
 562:sdk.c         **** 									+ wpToLL.properties
 563:sdk.c         **** 									+ wpToLL.wp_activated;
 564:sdk.c         **** 
 565:sdk.c         **** 			//send waypoint
 566:sdk.c         **** 			wpCtrlAckTrigger=0;
 567:sdk.c         **** 			wpCtrlWpCmd=WP_CMD_SINGLE_WP;
 568:sdk.c         **** 			wpCtrlWpCmdUpdated=1;
 569:sdk.c         **** 			wpExampleWpNr=0;
 570:sdk.c         **** 			wpExampleState=2;
 571:sdk.c         **** 
 572:sdk.c         **** 		}
 573:sdk.c         **** 		break;
 574:sdk.c         **** 
 575:sdk.c         **** 		case 2:
 576:sdk.c         **** 			//wait until cmd is processed and sent to LL processor
 577:sdk.c         **** 			if ((wpCtrlWpCmdUpdated==0) && (wpCtrlAckTrigger))
 578:sdk.c         **** 			{
 579:sdk.c         **** 				//check if waypoint was reached and wait time is over
 580:sdk.c         **** 				if (wpCtrlNavStatus&(WP_NAVSTAT_REACHED_POS_TIME))
 581:sdk.c         **** 				{
 582:sdk.c         **** 					//new waypoint
 583:sdk.c         **** 					double lat,lon;
 584:sdk.c         **** 
 585:sdk.c         **** 					//fill waypoint structure
 586:sdk.c         **** 					wpToLL.max_speed=100;
 587:sdk.c         **** 					wpToLL.pos_acc=3000; //3m accuracy
 588:sdk.c         **** 					wpToLL.time=400; //4 seconds wait time
 589:sdk.c         **** 					wpToLL.wp_activated=1;
 590:sdk.c         **** 
 591:sdk.c         **** 					//see LL_HL_comm.h for WPPROP defines
 592:sdk.c         **** 					wpToLL.properties=WPPROP_ABSCOORDS|WPPROP_AUTOMATICGOTO|WPPROP_HEIGHTENABLED|WPPROP_YAWENABLED
 593:sdk.c         **** 
 594:sdk.c         **** 					//use current height and yaw
 595:sdk.c         **** 					wpToLL.yaw=RO_ALL_Data.angle_yaw; //use current yaw
 596:sdk.c         **** 					wpToLL.height=RO_ALL_Data.fusion_height; //use current height
 597:sdk.c         **** 
 598:sdk.c         **** 					//calculate a position 15m north and 15m east of origin
 599:sdk.c         **** 					xy2latlon(originLat,originLon,15.0,15.0,&lat,&lon);
 600:sdk.c         **** 
 601:sdk.c         **** 					wpToLL.X=lon*10000000;
 602:sdk.c         **** 					wpToLL.Y=lat*10000000;
 603:sdk.c         **** 
 604:sdk.c         **** 					//calc chksum
 605:sdk.c         **** 					wpToLL.chksum = 0xAAAA
 606:sdk.c         **** 											+ wpToLL.yaw
 607:sdk.c         **** 											+ wpToLL.height
 608:sdk.c         **** 											+ wpToLL.time
 609:sdk.c         **** 											+ wpToLL.X
 610:sdk.c         **** 											+ wpToLL.Y
 611:sdk.c         **** 											+ wpToLL.max_speed
 612:sdk.c         **** 											+ wpToLL.pos_acc
 613:sdk.c         **** 											+ wpToLL.properties
 614:sdk.c         **** 											+ wpToLL.wp_activated;
 615:sdk.c         **** 					//send waypoint
 616:sdk.c         **** 					wpCtrlAckTrigger=0;
 617:sdk.c         **** 					wpCtrlWpCmd=WP_CMD_SINGLE_WP;
 618:sdk.c         **** 					wpCtrlWpCmdUpdated=1;
 619:sdk.c         **** 					wpExampleWpNr++;
 620:sdk.c         **** 
 621:sdk.c         **** 					wpExampleState=3;
 622:sdk.c         **** 				}
 623:sdk.c         **** 
 624:sdk.c         **** 				if (wpCtrlNavStatus&WP_NAVSTAT_PILOT_ABORT)
 625:sdk.c         **** 				{
 626:sdk.c         **** 					wpExampleActive=0;
 627:sdk.c         **** 					wpExampleState=0;
 628:sdk.c         **** 				}
 629:sdk.c         **** 
 630:sdk.c         **** 
 631:sdk.c         **** 			}
 632:sdk.c         **** 			if ((RO_ALL_Data.channel[6]<1600) && (wpExampleActive==0))
 633:sdk.c         **** 						wpExampleState=0;
 634:sdk.c         **** 		break;
 635:sdk.c         **** 
 636:sdk.c         **** 		case 3:
 637:sdk.c         **** 			//wait until cmd is processed and sent to LL processor
 638:sdk.c         **** 			if ((wpCtrlWpCmdUpdated==0) && (wpCtrlAckTrigger))
 639:sdk.c         **** 			{
 640:sdk.c         **** 				//check if waypoint was reached and wait time is over
 641:sdk.c         **** 				if (wpCtrlNavStatus&(WP_NAVSTAT_REACHED_POS_TIME))
 642:sdk.c         **** 				{
 643:sdk.c         **** 					//new waypoint
 644:sdk.c         **** 					double lat,lon;
 645:sdk.c         **** 
 646:sdk.c         **** 					//fill waypoint structure
 647:sdk.c         **** 					wpToLL.max_speed=100;
 648:sdk.c         **** 					wpToLL.pos_acc=3000; //3m accuracy
 649:sdk.c         **** 					wpToLL.time=400; //4 seconds wait time
 650:sdk.c         **** 					wpToLL.wp_activated=1;
 651:sdk.c         **** 
 652:sdk.c         **** 					//see LL_HL_comm.h for WPPROP defines
 653:sdk.c         **** 					wpToLL.properties=WPPROP_ABSCOORDS|WPPROP_AUTOMATICGOTO|WPPROP_HEIGHTENABLED|WPPROP_YAWENABLED
 654:sdk.c         **** 
 655:sdk.c         **** 					//use current height and yaw
 656:sdk.c         **** 					wpToLL.yaw=RO_ALL_Data.angle_yaw; //use current yaw
 657:sdk.c         **** 					wpToLL.height=RO_ALL_Data.fusion_height; //use current height
 658:sdk.c         **** 
 659:sdk.c         **** 					//calculate a position 15m east of origin
 660:sdk.c         **** 					xy2latlon(originLat,originLon,15.0,0.0,&lat,&lon);
 661:sdk.c         **** 
 662:sdk.c         **** 					wpToLL.X=lon*10000000;
 663:sdk.c         **** 					wpToLL.Y=lat*10000000;
 664:sdk.c         **** 
 665:sdk.c         **** 					//calc chksum
 666:sdk.c         **** 					wpToLL.chksum = 0xAAAA
 667:sdk.c         **** 											+ wpToLL.yaw
 668:sdk.c         **** 											+ wpToLL.height
 669:sdk.c         **** 											+ wpToLL.time
 670:sdk.c         **** 											+ wpToLL.X
 671:sdk.c         **** 											+ wpToLL.Y
 672:sdk.c         **** 											+ wpToLL.max_speed
 673:sdk.c         **** 											+ wpToLL.pos_acc
 674:sdk.c         **** 											+ wpToLL.properties
 675:sdk.c         **** 											+ wpToLL.wp_activated;
 676:sdk.c         **** 
 677:sdk.c         **** 					//send waypoint
 678:sdk.c         **** 					wpCtrlAckTrigger=0;
 679:sdk.c         **** 					wpCtrlWpCmd=WP_CMD_SINGLE_WP;
 680:sdk.c         **** 					wpCtrlWpCmdUpdated=1;
 681:sdk.c         **** 					wpExampleWpNr++;
 682:sdk.c         **** 
 683:sdk.c         **** 					wpExampleState=4;
 684:sdk.c         **** 				}
 685:sdk.c         **** 
 686:sdk.c         **** 				if (wpCtrlNavStatus&WP_NAVSTAT_PILOT_ABORT)
 687:sdk.c         **** 				{
 688:sdk.c         **** 					wpExampleActive=0;
 689:sdk.c         **** 					wpExampleState=0;
 690:sdk.c         **** 				}
 691:sdk.c         **** 
 692:sdk.c         **** 
 693:sdk.c         **** 			}
 694:sdk.c         **** 			if ((RO_ALL_Data.channel[6]<1600) && (wpExampleActive==0))
 695:sdk.c         **** 						wpExampleState=0;
 696:sdk.c         **** 		break;
 697:sdk.c         **** 
 698:sdk.c         **** 		case 4:
 699:sdk.c         **** 			//wait until cmd is processed and sent to LL processor
 700:sdk.c         **** 			if ((wpCtrlWpCmdUpdated==0) && (wpCtrlAckTrigger))
 701:sdk.c         **** 			{
 702:sdk.c         **** 				//check if waypoint was reached and wait time is over
 703:sdk.c         **** 				if (wpCtrlNavStatus&(WP_NAVSTAT_REACHED_POS_TIME))
 704:sdk.c         **** 				{
 705:sdk.c         **** 
 706:sdk.c         **** 					//fill waypoint structure
 707:sdk.c         **** 					wpToLL.max_speed=100;
 708:sdk.c         **** 					wpToLL.pos_acc=3000; //3m accuracy
 709:sdk.c         **** 					wpToLL.time=400; //4 seconds wait time
 710:sdk.c         **** 					wpToLL.wp_activated=1;
 711:sdk.c         **** 
 712:sdk.c         **** 					//see LL_HL_comm.h for WPPROP defines
 713:sdk.c         **** 					wpToLL.properties=WPPROP_ABSCOORDS|WPPROP_AUTOMATICGOTO|WPPROP_HEIGHTENABLED|WPPROP_YAWENABLED
 714:sdk.c         **** 
 715:sdk.c         **** 					//use current height and yaw
 716:sdk.c         **** 					wpToLL.yaw=RO_ALL_Data.angle_yaw; //use current yaw
 717:sdk.c         **** 					wpToLL.height=RO_ALL_Data.fusion_height; //use current height
 718:sdk.c         **** 
 719:sdk.c         **** 					//go to the beginning
 720:sdk.c         **** 
 721:sdk.c         **** 					wpToLL.X=originLon*10000000;
 722:sdk.c         **** 					wpToLL.Y=originLat*10000000;
 723:sdk.c         **** 
 724:sdk.c         **** 					//calc chksum
 725:sdk.c         **** 					wpToLL.chksum = 0xAAAA
 726:sdk.c         **** 											+ wpToLL.yaw
 727:sdk.c         **** 											+ wpToLL.height
 728:sdk.c         **** 											+ wpToLL.time
 729:sdk.c         **** 											+ wpToLL.X
 730:sdk.c         **** 											+ wpToLL.Y
 731:sdk.c         **** 											+ wpToLL.max_speed
 732:sdk.c         **** 											+ wpToLL.pos_acc
 733:sdk.c         **** 											+ wpToLL.properties
 734:sdk.c         **** 											+ wpToLL.wp_activated;
 735:sdk.c         **** 
 736:sdk.c         **** 					//send waypoint
 737:sdk.c         **** 					wpCtrlAckTrigger=0;
 738:sdk.c         **** 					wpCtrlWpCmd=WP_CMD_SINGLE_WP;
 739:sdk.c         **** 					wpCtrlWpCmdUpdated=1;
 740:sdk.c         **** 
 741:sdk.c         **** 					wpExampleWpNr++;
 742:sdk.c         **** 
 743:sdk.c         **** 					wpExampleState=0;
 744:sdk.c         **** 					wpExampleActive=0;
 745:sdk.c         **** 				}
 746:sdk.c         **** 
 747:sdk.c         **** 				if (wpCtrlNavStatus&WP_NAVSTAT_PILOT_ABORT)
 748:sdk.c         **** 				{
 749:sdk.c         **** 					wpExampleActive=0;
 750:sdk.c         **** 					wpExampleState=0;
 751:sdk.c         **** 				}
 752:sdk.c         **** 
 753:sdk.c         **** 
 754:sdk.c         **** 			}
 755:sdk.c         **** 			if ((RO_ALL_Data.channel[6]<1600) && (wpExampleActive==0))
 756:sdk.c         **** 						wpExampleState=0;
 757:sdk.c         **** 		break;
 758:sdk.c         **** 
 759:sdk.c         **** 		default:
 760:sdk.c         **** 			wpExampleState=0;
 761:sdk.c         **** 		break;
 762:sdk.c         **** 	}
 763:sdk.c         **** 
 764:sdk.c         **** }
 765:sdk.c         **** 
 766:sdk.c         **** int SDK_EXAMPLE_turn_motors_on(void) //hold throttle stick down and yaw stick fully left to turn mo
 767:sdk.c         **** {
 768:sdk.c         **** 	static int timeout=0;
 769:sdk.c         **** 
 770:sdk.c         **** 	WO_SDK.ctrl_mode=0x02;	//0x00: direct individual motor control: individual commands for motors 0..
 771:sdk.c         **** 							//0x01: direct motor control using standard output mapping: commands are interpreted as pitc
 772:sdk.c         **** 							//0x02: attitude and throttle control: commands are input for standard attitude controller
 773:sdk.c         **** 							//0x03: GPS waypoint control
 774:sdk.c         **** 
 775:sdk.c         **** 	WO_SDK.ctrl_enabled=1;  //0: disable control by HL processor
 776:sdk.c         **** 							//1: enable control by HL processor
 777:sdk.c         **** 
 778:sdk.c         **** 	WO_SDK.disable_motor_onoff_by_stick=0; //make sure stick command is accepted
 779:sdk.c         **** 
 780:sdk.c         **** 	if(++timeout>=1000)
 781:sdk.c         **** 	{
 782:sdk.c         **** 		timeout=0;
 686              		str	ip, [r0, #0]
 687              		.loc 1 797 0
 688              		mov	r4, r1
 689              		.loc 1 785 0
 783:sdk.c         **** eutral stick command for 500 ms
 784:sdk.c         **** 	{
 785:sdk.c         **** 		WO_CTRL_Input.ctrl=0x0C;	//0x0C: enable throttle control and yaw control
 786:sdk.c         **** 		WO_CTRL_Input.thrust=0;
 787:sdk.c         **** 		WO_CTRL_Input.yaw=0;
 788:sdk.c         **** 		return(0);
 789:sdk.c         **** 	}
 790:sdk.c         **** 	else //hold stick command for 500 ms
 791:sdk.c         **** 	{
 792:sdk.c         **** 		WO_CTRL_Input.ctrl=0x0C;	//0x0C: enable throttle control and yaw control
 793:sdk.c         **** 		WO_CTRL_Input.thrust=0;
 794:sdk.c         **** 		WO_CTRL_Input.yaw=-2047;
 795:sdk.c         **** 		return(0);
 690              	b	r3, [r2, #0]
 691 0598 7C009FE5 		.loc 1 793 0
 692 059c 003090E5 		strb	lr, [r2, #2]
 693              		.loc 1 790 0
 694 05a0 78209FE5 		strb	r1, [r2, #1]
 695              		.loc 1 797 0
 696 05a4 01C083E2 		strge	lr, [r0, #0]
 697              		.loc 1 795 0
 698 05a8 10402DE9 		bge	.L76
 699              		.loc 1 809 0
 700              		ldr	r1, .L80+8
 701 05ac 0110A0E3 		.loc 1 811 0
 702              		mvn	r3, #2032
 703 05b0 00E0A0E3 		.loc 1 800 0
 704              		cmp	ip, #500
 705 05b4 FA0F5CE3 		.loc 1 811 0
 706              		sub	r3, r3, #14
 707 05b8 0230A0E3 		strleh	r3, [r1, #4]	@ movhi
 708              		.loc 1 802 0
 709 05bc 00C080E5 		movgt	r3, #12	@ movhi
 796:sdk.c         **** d yaw control
 797:sdk.c         **** 		WO_CTRL_Input.thrust=0;
 710              		r3, #12	@ movhi
 711 05c0 0140A0E1 		.loc 1 804 0
 712              		strgth	lr, [r1, #4]	@ movhi
 713 05c4 0030C2E5 		.loc 1 802 0
 714              		strgth	r3, [r1, #8]	@ movhi
 715 05c8 02E0C2E5 		.loc 1 803 0
 716              		strgth	lr, [r1, #6]	@ movhi
 717 05cc 0110C2E5 		.loc 1 810 0
 718              		strleh	lr, [r1, #6]	@ movhi
 719 05d0 00E080A5 		.loc 1 809 0
 720              		strleh	r3, [r1, #8]	@ movhi
 721 05d4 0D0000AA 		.loc 1 804 0
 798:sdk.c         **** l=0x0C;	//0x0C: enable throttle control and yaw control
 799:sdk.c         **** 		WO_CTRL_Input.thrust=0;
 800:sdk.c         **** 		WO_CTRL_Input.yaw=-2047;
 801:sdk.c         **** 		return(0);
 802:sdk.c         **** 	}
 803:sdk.c         **** 
 804:sdk.c         **** }
 805:sdk.c         **** 
 806:sdk.c         **** int SDK_EXAMPLE_turn_motors_off(void) //hold throttle stick down and yaw stick fully right to turn 
 807:sdk.c         **** {
 808:sdk.c         **** 	static int timeout=0;
 809:sdk.c         **** 
 722              		.loc 1 811 0
 723 05d8 44109FE5 		movle	r4, lr
 810:sdk.c         ****  and yaw stick fully right to turn motors off
 811:sdk.c         **** {
 724              	76:
 725 05dc 7F3EE0E3 		.loc 1 815 0
 726              		mov	r0, r4
 727 05e0 7D0F5CE3 		ldmfd	sp!, {r4, lr}
 728              		bx	lr
 729 05e4 0E3043E2 	.L81:
 730 05e8 B430C1D1 		.align	2
 731              	.L80:
 732 05ec 0C30A0C3 		.word	timeout.2865
 733              		.word	WO_SDK
 734 05f0 0C30A0D3 		.word	WO_CTRL_Input
 735              	.LFE10:
 737              		.align	2
 738 05f8 B830C1C1 		.global	SDK_EXAMPLE_turn_motors_off
 740 05fc B6E0C1C1 	SDK_EXAMPLE_turn_motors_off:
 741              	.LFB11:
 742 0600 B6E0C1D1 		.loc 1 818 0
 743              		@ Function supports interworking.
 744 0604 B830C1D1 		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746 0608 0E40A0E1 		.loc 1 831 0
 747              		ldr	r0, .L89
 748 060c 0E40A0D1 		ldr	r3, [r0, #0]
 749              		.loc 1 821 0
 812:sdk.c         **** //hold throttle stick down and yaw stick fully right to turn motors off
 813:sdk.c         **** {
 814:sdk.c         **** 	static int timeout=0;
 815:sdk.c         **** 
 750              	1 0
 751 0610 0400A0E1 		add	ip, r3, #1
 752 0614 1040BDE8 		.loc 1 818 0
 753 0618 1EFF2FE1 		stmfd	sp!, {r4, lr}
 754              	.LCFI4:
 755              		.loc 1 826 0
 756              		mov	r1, #1
 757 061c 4C000000 		.loc 1 829 0
 758 0620 00000000 		mov	lr, #0
 759 0624 00000000 		.loc 1 831 0
 760              		cmp	ip, #1000
 761              		.loc 1 821 0
 762              		mov	r3, #2
 763              		.loc 1 831 0
 764              		str	ip, [r0, #0]
 765              		.loc 1 833 0
 766              		mov	r4, r1
 816:sdk.c         ****  and yaw stick fully right to turn motors off
 817:sdk.c         **** {
 818:sdk.c         **** 	static int timeout=0;
 767              	rb	r3, [r2, #0]
 768              		.loc 1 829 0
 769              		strb	lr, [r2, #2]
 770              		.loc 1 826 0
 819:sdk.c         **** wn and yaw stick fully right to turn motors off
 820:sdk.c         **** {
 821:sdk.c         **** 	static int timeout=0;
 822:sdk.c         **** 
 823:sdk.c         **** 	WO_SDK.ctrl_mode=0x02;	//0x00: direct individual motor control: individual commands for motors 0..
 824:sdk.c         **** 							//0x01: direct motor control using standard output mapping: commands are interpreted as pitc
 825:sdk.c         **** 							//0x02: attitude and throttle control: commands are input for standard attitude controller
 826:sdk.c         **** 							//0x03: GPS waypoint control
 827:sdk.c         **** 
 828:sdk.c         **** 	WO_SDK.ctrl_enabled=1;  //0: disable control by HL processor
 829:sdk.c         **** 							//1: enable control by HL processor
 830:sdk.c         **** 
 831:sdk.c         **** 	WO_SDK.disable_motor_onoff_by_stick=0; //make sure stick command is accepted
 771              	b	r1, [r2, #1]
 772 0628 7C009FE5 		.loc 1 833 0
 773 062c 003090E5 		strge	lr, [r0, #0]
 774              		.loc 1 831 0
 775 0630 78209FE5 		bge	.L85
 776              		.loc 1 845 0
 777 0634 01C083E2 		ldr	r2, .L89+8
 778              		.loc 1 836 0
 779 0638 10402DE9 		cmp	ip, #500
 780              		.loc 1 838 0
 781              		mov	r3, r2
 782 063c 0110A0E3 		.loc 1 847 0
 783              		mvnle	r3, #63488
 784 0640 00E0A0E3 		.loc 1 840 0
 785              		strgth	lr, [r2, #4]	@ movhi
 786 0644 FA0F5CE3 		.loc 1 847 0
 787              		strleh	r3, [r2, #4]	@ movhi
 788 0648 0230A0E3 		.loc 1 838 0
 789              		movgt	r2, #12	@ movhi
 790 064c 00C080E5 		.loc 1 845 0
 832:sdk.c         **** _motor_onoff_by_stick=0; //make sure stick command is accepted
 833:sdk.c         **** 
 791              	hi
 792 0650 0140A0E1 		.loc 1 838 0
 793              		strgth	r2, [r3, #8]	@ movhi
 794 0654 0030C2E5 		.loc 1 839 0
 795              		strgth	lr, [r3, #6]	@ movhi
 796 0658 02E0C2E5 		.loc 1 846 0
 797              		strleh	lr, [r2, #6]	@ movhi
 798 065c 0110C2E5 		.loc 1 845 0
 799              		strleh	r3, [r2, #8]	@ movhi
 800 0660 00E080A5 		.loc 1 840 0
 801              		mov	r4, lr
 802 0664 0D0000AA 		.loc 1 847 0
 834:sdk.c         **** otor_onoff_by_stick=0; //make sure stick command is accepted
 835:sdk.c         **** 
 836:sdk.c         **** 	if(++timeout>=1000)
 837:sdk.c         **** 	{
 838:sdk.c         **** 		timeout=0;
 839:sdk.c         **** 		return(1); //1 => stop sequence completed => motors turned off => user can stop calling this func
 840:sdk.c         **** 	}
 841:sdk.c         **** 	else if(timeout>500) //neutral stick command for 500 ms
 842:sdk.c         **** 	{
 843:sdk.c         **** 		WO_CTRL_Input.ctrl=0x0C;	//0x0C: enable throttle control and yaw control
 844:sdk.c         **** 		WO_CTRL_Input.thrust=0;
 845:sdk.c         **** 		WO_CTRL_Input.yaw=0;
 803              	r
 804 0668 44209FE5 	.L85:
 805              		.loc 1 850 0
 806 066c 7D0F5CE3 		mov	r0, r4
 807              		ldmfd	sp!, {r4, lr}
 808 0670 0230A0E1 		bx	lr
 846:sdk.c         **** ol
 847:sdk.c         **** 		WO_CTRL_Input.thrust=0;
 809              		.align	2
 810 0674 3E3BE0D3 	.L89:
 811              		.word	timeout.2872
 812 0678 B4E0C2C1 		.word	WO_SDK
 813              		.word	WO_CTRL_Input
 814 067c B430C2D1 	.LFE11:
 816 0680 0C20A0C3 		.global	__floatsidf
 817              		.global	__divdf3
 818 0684 0C30A0D3 		.global	__muldf3
 819              		.global	__fixdfsi
 820 0688 B820C3C1 		.align	2
 821              		.global	SDK_EXAMPLE_gps_waypoint_control
 823              	SDK_EXAMPLE_gps_waypoint_control:
 824 0690 B6E0C2D1 	.LFB9:
 825              		.loc 1 522 0
 826 0694 B830C2D1 		@ Function supports interworking.
 827              		@ args = 0, pretend = 0, frame = 28
 828 0698 0E40A0E1 		@ frame_needed = 0, uses_anonymous_args = 0
 829              		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 830 069c 0E40A0D1 	.LCFI5:
 831              		.loc 1 532 0
 848:sdk.c         **** le control and yaw control
 849:sdk.c         **** 		WO_CTRL_Input.thrust=0;
 850:sdk.c         **** 		WO_CTRL_Input.yaw=0;
 832              	527 0
 833 06a0 0400A0E1 		ldr	r1, .L143+4
 834 06a4 1040BDE8 		.loc 1 532 0
 835 06a8 1EFF2FE1 		ldrb	r0, [r9, #0]	@ zero_extendqisi2
 836              		.loc 1 529 0
 837              		mov	r3, #1
 838              		.loc 1 527 0
 839 06ac 48000000 		mov	r2, #3
 840 06b0 00000000 		.loc 1 522 0
 841 06b4 00000000 		sub	sp, sp, #52
 842              	.LCFI6:
 843              		.loc 1 529 0
 844              		strb	r3, [r1, #1]
 845              		.loc 1 527 0
 846              		strb	r2, [r1, #0]
 847              		.loc 1 532 0
 848              		cmp	r0, #4
 849              		ldrls	pc, [pc, r0, asl #2]
 850              		b	.L92
 851              		.p2align 2
 852              	.L98:
 853              		.word	.L93
 854              		.word	.L94
 855              		.word	.L95
 856              		.word	.L96
 857 06b8 F04F2DE9 		.word	.L97
 858              	.L92:
 859              		.loc 1 775 0
 860 06bc 64969FE5 		mov	r3, #0
 861              	.LVL1:
 862 06c0 64169FE5 	.L138:
 863              		strb	r3, [r9, #0]
 864 06c4 0000D9E5 	.LVL2:
 865              	.L128:
 866 06c8 0130A0E3 		.loc 1 779 0
 867              		add	sp, sp, #52
 868 06cc 0320A0E3 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 869              		bx	lr
 870 06d0 34D04DE2 	.LVL3:
 871              	.L97:
 872              		.loc 1 715 0
 873 06d4 0130C1E5 		ldr	fp, .L143+8
 874              		ldrb	sl, [fp, #0]	@ zero_extendqisi2
 875 06d8 0020C1E5 		cmp	sl, #0
 876              		bne	.L120
 877 06dc 040050E3 		ldr	r2, .L143+12
 878 06e0 00F19F97 		ldrb	r3, [r2, #0]	@ zero_extendqisi2
 879 06e4 040000EA 		cmp	r3, #0
 880              		beq	.L120
 881              		.loc 1 718 0
 882 06e8 6C0A0000 		ldr	r3, .L143+16
 883 06ec 7C080000 		ldrh	r7, [r3, #0]
 884 06f0 280A0000 		tst	r7, #2
 885 06f4 38080000 		beq	.L123
 886 06f8 10070000 		.loc 1 722 0
 887              		ldr	r5, .L143+20
 888              		.loc 1 731 0
 889 06fc 0030A0E3 		ldr	r3, .L143+24
 890              		.loc 1 722 0
 891              		mov	ip, #100
 892 0700 0030C9E5 		.loc 1 731 0
 893              		ldr	r6, [r3, #36]
 894              		.loc 1 732 0
 895              		ldr	r4, [r3, #132]
 896 0704 34D08DE2 		.loc 1 736 0
 897 0708 F04FBDE8 		ldr	r1, .L143+28
 898 070c 1EFF2FE1 		.loc 1 722 0
 899              		strb	ip, [r5, #5]
 900              		.loc 1 723 0
 901              		mov	lr, #2992
 902 0710 18B69FE5 		.loc 1 728 0
 903 0714 00A0DBE5 		sub	ip, ip, #77
 904 0718 00005AE3 		.loc 1 723 0
 905 071c 4000001A 		add	lr, lr, #8
 906 0720 0C269FE5 		.loc 1 725 0
 907 0724 0030D2E5 		mov	r8, #1
 908 0728 000053E3 		.loc 1 728 0
 909 072c 3C00000A 		strb	ip, [r5, #4]
 910              		.loc 1 724 0
 911 0730 00369FE5 		mov	ip, #400	@ movhi
 912 0734 B070D3E1 		.loc 1 736 0
 913 0738 020017E3 		ldmia	r1, {r2-r3}
 914 073c 3400000A 		.loc 1 724 0
 915              		strh	ip, [r5, #6]	@ movhi
 916 0740 F4559FE5 		.loc 1 723 0
 917              		strh	lr, [r5, #8]	@ movhi
 918 0744 F4359FE5 		.loc 1 731 0
 919              		str	r6, [r5, #20]
 920 0748 64C0A0E3 		.loc 1 732 0
 921              		str	r4, [r5, #24]
 922 074c 246093E5 		.loc 1 736 0
 923              		ldr	r0, .L143+32
 924 0750 844093E5 		mov	r1, #0
 925              		.loc 1 725 0
 926 0754 E8159FE5 		str	r8, [r5, #0]
 927              		.loc 1 736 0
 928 0758 05C0C5E5 		bl	__muldf3
 929              		bl	__fixdfsi
 930 075c BBEEA0E3 		str	r0, [sp, #32]
 931              		ldr	lr, [sp, #32]
 932 0760 4DC04CE2 		.loc 1 737 0
 933              		ldr	r1, .L143+36
 934 0764 08E08EE2 		.loc 1 736 0
 935              		str	lr, [r5, #12]
 936 0768 0180A0E3 		.loc 1 737 0
 937              		ldmia	r1, {r2-r3}
 938 076c 04C0C5E5 		ldr	r0, .L143+32
 939              		mov	r1, #0
 940 0770 19CEA0E3 		bl	__muldf3
 941              		bl	__fixdfsi
 942 0774 0C0091E8 		.loc 1 756 0
 943              		ldr	r2, .L143+40
 944 0778 B6C0C5E1 		ldrb	r3, [r2, #0]	@ zero_extendqisi2
 945              		.loc 1 740 0
 946 077c B8E0C5E1 		add	r6, r6, #400
 947              		ldr	r1, [sp, #32]
 948 0780 146085E5 		.loc 1 756 0
 949              		add	r3, r3, r8
 950 0784 184085E5 		.loc 1 740 0
 951              		add	r4, r4, r6
 952 0788 B8059FE5 		.loc 1 756 0
 953 078c 0010A0E3 		strb	r3, [r2, #0]
 954              		.loc 1 740 0
 955 0790 008085E5 		add	r4, r4, r1
 956              		.loc 1 752 0
 957 0794 FEFFFFEB 		ldr	r2, .L143+12
 958 0798 FEFFFFEB 		.loc 1 740 0
 959 079c 20008DE5 		sub	r4, r4, #18688
 960 07a0 20E09DE5 		sub	r4, r4, #34
 961              		.loc 1 752 0
 962 07a4 A0159FE5 		strb	sl, [r2, #0]
 963              		.loc 1 753 0
 964 07a8 0CE085E5 		ldr	r3, .L143+44
 965              		.loc 1 759 0
 966 07ac 0C0091E8 		ldr	r2, .L143+48
 967 07b0 90059FE5 		.loc 1 740 0
 968 07b4 0010A0E3 		add	r4, r0, r4
 969 07b8 FEFFFFEB 		strh	r4, [r5, #10]	@ movhi
 970 07bc FEFFFFEB 		.loc 1 754 0
 971              		strb	r8, [fp, #0]
 972 07c0 88259FE5 		.loc 1 753 0
 973 07c4 0030D2E5 		strb	r8, [r3, #0]
 974              		.loc 1 759 0
 975 07c8 196E86E2 		strb	sl, [r2, #0]
 976 07cc 20109DE5 		.loc 1 737 0
 977              		str	r0, [r5, #16]
 978 07d0 083083E0 		.loc 1 758 0
 979              		strb	sl, [r9, #0]
 980 07d4 064084E0 	.L123:
 981              		.loc 1 762 0
 982 07d8 0030C2E5 		tst	r7, #8
 983              		.loc 1 764 0
 984 07dc 014084E0 		ldrne	r3, .L143+48
 985              		.loc 1 765 0
 986 07e0 4C259FE5 		strneb	sl, [r9, #0]
 987              		.loc 1 764 0
 988 07e4 494C44E2 		strneb	sl, [r3, #0]
 989 07e8 224044E2 	.L120:
 990              		.loc 1 770 0
 991 07ec 00A0C2E5 		ldr	r4, .L143+24
 992              		ldrh	r3, [r4, #24]
 993 07f0 5C359FE5 		cmp	r3, #1600
 994              		bcc	.L139
 995 07f4 5C259FE5 		b	.L128
 996              	.L96:
 997 07f8 044080E0 		.loc 1 653 0
 998 07fc BA40C5E1 		ldr	sl, .L143+8
 999              		ldrb	r8, [sl, #0]	@ zero_extendqisi2
 1000 0800 0080CBE5 		cmp	r8, #0
 1001              		bne	.L112
 1002 0804 0080C3E5 		ldr	fp, .L143+12
 1003              		ldrb	r3, [fp, #0]	@ zero_extendqisi2
 1004 0808 00A0C2E5 		cmp	r3, #0
 1005              		bne	.L141
 1006 080c 100085E5 	.LVL4:
 1007              	.L112:
 1008 0810 00A0C9E5 		.loc 1 709 0
 1009              		ldr	r1, .L143+24
 1010              		ldrh	r3, [r1, #24]
 1011 0814 080017E3 		cmp	r3, #1600
 1012              		bcs	.L128
 1013 0818 38359F15 	.L139:
 1014              		.loc 1 770 0
 1015 081c 00A0C915 		ldr	r3, .L143+48
 1016              		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1017 0820 00A0C315 		cmp	r3, #0
 1018              		beq	.L138
 1019              		b	.L128
 1020 0824 14459FE5 	.LVL5:
 1021 0828 B831D4E1 	.L94:
 1022 082c 190D53E3 		.loc 1 541 0
 1023 0830 0C00003A 		ldr	r1, .L143+24
 1024 0834 B2FFFFEA 		ldrh	r3, [r1, #24]
 1025              		cmp	r3, #2400
 1026              		bhi	.L102
 1027 0838 F0A49FE5 		ldr	r3, .L143+48
 1028 083c 0080DAE5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1029 0840 000058E3 		cmp	r2, #0
 1030 0844 0300001A 		beq	.L128
 1031 0848 E4B49FE5 	.L102:
 1032 084c 0030DBE5 	.LBB2:
 1033 0850 000053E3 		.loc 1 547 0
 1034 0854 8F00001A 		ldr	r6, .L143+20
 1035              		.loc 1 557 0
 1036              		ldr	ip, [r1, #132]
 1037              		.loc 1 556 0
 1038 0858 E0149FE5 		ldr	r1, [r1, #36]
 1039 085c B831D1E1 		.loc 1 559 0
 1040 0860 190D53E3 		ldr	r4, .L143+52
 1041 0864 A6FFFF2A 		.loc 1 547 0
 1042              		mov	r3, #100
 1043              		.loc 1 548 0
 1044 0868 E8349FE5 		mov	r2, #2992
 1045 086c 0030D3E5 		add	r2, r2, #8
 1046 0870 000053E3 		.loc 1 550 0
 1047 0874 A1FFFF0A 		mov	sl, #1
 1048 0878 A1FFFFEA 		.loc 1 547 0
 1049              		strb	r3, [r6, #5]
 1050              		.loc 1 556 0
 1051              		str	r1, [r6, #20]
 1052 087c BC149FE5 		.loc 1 553 0
 1053 0880 B831D1E1 		sub	r3, r3, #77
 1054 0884 960E53E3 		.loc 1 549 0
 1055 0888 0300008A 		mov	r1, #400	@ movhi
 1056 088c C4349FE5 		.loc 1 559 0
 1057 0890 0020D3E5 		ldr	r0, [r4, #0]
 1058 0894 000052E3 		.loc 1 557 0
 1059 0898 99FFFF0A 		str	ip, [r6, #24]
 1060              		.loc 1 548 0
 1061              		strh	r2, [r6, #8]	@ movhi
 1062              		.loc 1 553 0
 1063 089c 98649FE5 		strb	r3, [r6, #4]
 1064              		.loc 1 549 0
 1065 08a0 84C091E5 		strh	r1, [r6, #6]	@ movhi
 1066              		.loc 1 550 0
 1067 08a4 241091E5 		str	sl, [r6, #0]
 1068              		.loc 1 559 0
 1069 08a8 AC449FE5 		bl	__floatsidf
 1070              		ldr	r2, .L143+32
 1071 08ac 6430A0E3 		mov	r3, #0
 1072              		bl	__divdf3
 1073 08b0 BB2EA0E3 		str	r0, [sp, #24]
 1074 08b4 082082E2 		str	r1, [sp, #28]
 1075              		ldr	r3, .L143+36
 1076 08b8 01A0A0E3 		.loc 1 560 0
 1077              		ldr	r0, [r4, #4]
 1078 08bc 0530C6E5 		.loc 1 559 0
 1079              		add	r4, sp, #24
 1080 08c0 141086E5 		ldmia	r4, {r4-r5}
 1081              		stmia	r3, {r4-r5}
 1082 08c4 4D3043E2 		.loc 1 560 0
 1083              		bl	__floatsidf
 1084 08c8 191EA0E3 		ldr	r2, .L143+32
 1085              		mov	r3, #0
 1086 08cc 000094E5 		bl	__divdf3
 1087              		ldr	ip, .L143+28
 1088 08d0 18C086E5 		mov	r4, r0
 1089              		mov	r5, r1
 1090 08d4 B820C6E1 		stmia	ip, {r4-r5}
 1091              		.loc 1 563 0
 1092 08d8 0430C6E5 		mov	r2, r4
 1093              		mov	r3, r5
 1094 08dc B610C6E1 		mov	r4, #0
 1095              		mov	r5, #0
 1096 08e0 00A086E5 		stmia	sp, {r4-r5}
 1097              		mov	r4, #1073741824
 1098 08e4 FEFFFFEB 		add	ip, sp, #44
 1099 08e8 58249FE5 		add	lr, sp, #36
 1100 08ec 0030A0E3 		add	r0, sp, #24
 1101 08f0 FEFFFFEB 		ldmia	r0, {r0-r1}
 1102 08f4 18008DE5 		add	r4, r4, #3014656
 1103 08f8 1C108DE5 		mov	r5, #0
 1104 08fc 48349FE5 		str	ip, [sp, #20]
 1105              		str	lr, [sp, #16]
 1106 0900 040094E5 		str	r4, [sp, #8]
 1107              		str	r5, [sp, #12]
 1108 0904 18408DE2 		bl	xy2latlon
 1109 0908 300094E8 	.LVL6:
 1110 090c 300083E8 		.loc 1 565 0
 1111              		add	r2, sp, #44
 1112 0910 FEFFFFEB 		ldmia	r2, {r2-r3}
 1113 0914 2C249FE5 		ldr	r0, .L143+32
 1114 0918 0030A0E3 		mov	r1, #0
 1115 091c FEFFFFEB 		bl	__muldf3
 1116 0920 1CC49FE5 		bl	__fixdfsi
 1117 0924 0040A0E1 		mov	r4, r0
 1118 0928 0150A0E1 	.LVL7:
 1119 092c 30008CE8 		.loc 1 566 0
 1120              		add	r2, sp, #36
 1121 0930 0420A0E1 		ldmia	r2, {r2-r3}
 1122 0934 0530A0E1 		ldr	r0, .L143+32
 1123 0938 0040A0E3 		mov	r1, #0
 1124 093c 0050A0E3 		.loc 1 565 0
 1125 0940 30008DE8 		str	r4, [r6, #12]
 1126 0944 0141A0E3 		.loc 1 566 0
 1127 0948 2CC08DE2 		bl	__muldf3
 1128 094c 24E08DE2 		bl	__fixdfsi
 1129 0950 18008DE2 		.loc 1 569 0
 1130 0954 030090E8 		ldrh	r2, [r6, #6]
 1131 0958 2E4884E2 		ldr	r3, [r6, #20]
 1132 095c 0050A0E3 		ldr	r1, [r6, #24]
 1133 0960 14C08DE5 		add	r3, r3, r2
 1134 0964 10E08DE5 		add	r1, r1, r3
 1135 0968 08408DE5 		ldrb	ip, [r6, #5]	@ zero_extendqisi2
 1136 096c 0C508DE5 		add	r1, r1, r4
 1137 0970 FEFFFFEB 		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 1138              		add	ip, ip, r1
 1139              		ldrh	r2, [r6, #8]
 1140 0974 2C208DE2 		ldr	r1, [r6, #0]
 1141 0978 0C0092E8 		add	r3, r3, ip
 1142 097c C4039FE5 		add	r2, r0, r2
 1143 0980 0010A0E3 		sub	r3, r3, #21760
 1144 0984 FEFFFFEB 		add	r2, r2, r1
 1145 0988 FEFFFFEB 		sub	r3, r3, #86
 1146 098c 0040A0E1 		add	r2, r2, r3
 1147              		.loc 1 583 0
 1148              		ldr	r3, .L143+8
 1149 0990 24208DE2 		.loc 1 569 0
 1150 0994 0C0092E8 		strh	r2, [r6, #10]	@ movhi
 1151 0998 A8039FE5 		.loc 1 584 0
 1152 099c 0010A0E3 		ldr	r2, .L143+40
 1153              		.loc 1 581 0
 1154 09a0 0C4086E5 		mov	r1, #0
 1155              		.loc 1 583 0
 1156 09a4 FEFFFFEB 		strb	sl, [r3, #0]
 1157 09a8 FEFFFFEB 		.loc 1 585 0
 1158              		mov	r3, #2
 1159 09ac B620D6E1 		.loc 1 584 0
 1160 09b0 143096E5 		strb	r1, [r2, #0]
 1161 09b4 181096E5 		.loc 1 585 0
 1162 09b8 023083E0 		strb	r3, [r9, #0]
 1163 09bc 031081E0 		.loc 1 581 0
 1164 09c0 05C0D6E5 		ldr	r2, .L143+12
 1165 09c4 041081E0 		.loc 1 582 0
 1166 09c8 0430D6E5 		ldr	r3, .L143+44
 1167 09cc 01C08CE0 		.loc 1 581 0
 1168 09d0 B820D6E1 		strb	r1, [r2, #0]
 1169 09d4 001096E5 		.loc 1 582 0
 1170 09d8 0C3083E0 		strb	sl, [r3, #0]
 1171 09dc 022080E0 		.loc 1 566 0
 1172 09e0 553C43E2 		str	r0, [r6, #16]
 1173 09e4 012082E0 		b	.L128
 1174 09e8 563043E2 	.LVL8:
 1175 09ec 032082E0 	.L95:
 1176              	.LBE2:
 1177 09f0 38339FE5 		.loc 1 592 0
 1178              		ldr	sl, .L143+8
 1179 09f4 BA20C6E1 		ldrb	r8, [sl, #0]	@ zero_extendqisi2
 1180              		cmp	r8, #0
 1181 09f8 50239FE5 		bne	.L112
 1182              		ldr	fp, .L143+12
 1183 09fc 0010A0E3 		ldrb	r3, [fp, #0]	@ zero_extendqisi2
 1184              		cmp	r3, #0
 1185 0a00 00A0C3E5 		beq	.L112
 1186              		.loc 1 595 0
 1187 0a04 0230A0E3 		ldr	r5, .L143+16
 1188              		ldrh	ip, [r5, #0]
 1189 0a08 0010C2E5 		tst	ip, #2
 1190              		bne	.L142
 1191 0a0c 0030C9E5 	.LVL9:
 1192              	.L115:
 1193 0a10 1C239FE5 		.loc 1 701 0
 1194              		tst	ip, #8
 1195 0a14 38339FE5 		.loc 1 703 0
 1196              		ldrne	r3, .L143+48
 1197 0a18 0010C2E5 		.loc 1 704 0
 1198              		strneb	r8, [r9, #0]
 1199 0a1c 00A0C3E5 		.loc 1 703 0
 1200              		strneb	r8, [r3, #0]
 1201 0a20 100086E5 		b	.L112
 1202 0a24 36FFFFEA 	.LVL10:
 1203              	.L93:
 1204              		.loc 1 536 0
 1205              		ldr	r3, .L143+24
 1206              		ldrh	r2, [r3, #24]
 1207 0a28 00A39FE5 		cmp	r2, #1600
 1208 0a2c 0080DAE5 		bcc	.L99
 1209 0a30 000058E3 		ldr	r3, .L143+48
 1210 0a34 87FFFF1A 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1211 0a38 F4B29FE5 		cmp	r2, #0
 1212 0a3c 0030DBE5 		beq	.L128
 1213 0a40 000053E3 	.L99:
 1214 0a44 83FFFF0A 		.loc 1 537 0
 1215              		mov	r3, #1
 1216 0a48 E8529FE5 		strb	r3, [r9, #0]
 1217 0a4c B0C0D5E1 		b	.L128
 1218 0a50 02001CE3 	.L141:
 1219 0a54 6400001A 		.loc 1 656 0
 1220              		ldr	r2, .L143+16
 1221              		ldrh	ip, [r2, #0]
 1222              		tst	ip, #2
 1223 0a58 08001CE3 		beq	.L115
 1224              	.LBB3:
 1225 0a5c F4329F15 		.loc 1 675 0
 1226              		ldr	r3, .L143+36
 1227 0a60 0080C915 		ldr	ip, .L143+28
 1228              		.loc 1 671 0
 1229 0a64 0080C315 		ldr	r6, .L143+24
 1230 0a68 7AFFFFEA 		.loc 1 662 0
 1231              		ldr	r4, .L143+20
 1232              		.loc 1 675 0
 1233              		ldmia	r3, {r0-r1}
 1234 0a6c CC329FE5 		.loc 1 671 0
 1235 0a70 B821D3E1 		ldr	r5, [r6, #36]
 1236 0a74 190D52E3 		.loc 1 675 0
 1237 0a78 0300003A 		ldmia	ip, {r2-r3}
 1238 0a7c D4329FE5 		.loc 1 663 0
 1239 0a80 0020D3E5 		mov	lr, #2992
 1240 0a84 000052E3 		.loc 1 662 0
 1241 0a88 1DFFFF0A 		mov	ip, #100
 1242              		.loc 1 672 0
 1243              		ldr	r6, [r6, #132]
 1244 0a8c 0130A0E3 		.loc 1 662 0
 1245 0a90 0030C9E5 		strb	ip, [r4, #5]
 1246 0a94 1AFFFFEA 		.loc 1 663 0
 1247              		add	lr, lr, #8
 1248              		.loc 1 668 0
 1249 0a98 98229FE5 		sub	ip, ip, #77
 1250 0a9c B0C0D2E1 		.loc 1 663 0
 1251 0aa0 02001CE3 		strh	lr, [r4, #8]	@ movhi
 1252 0aa4 EBFFFF0A 		.loc 1 668 0
 1253              		strb	ip, [r4, #4]
 1254              		.loc 1 671 0
 1255 0aa8 9C329FE5 		str	r5, [r4, #20]
 1256 0aac 90C29FE5 		.loc 1 675 0
 1257              		add	ip, sp, #36
 1258 0ab0 88629FE5 		add	lr, sp, #44
 1259              		mov	r5, #1073741824
 1260 0ab4 80429FE5 		.loc 1 672 0
 1261              		str	r6, [r4, #24]
 1262 0ab8 030093E8 		.loc 1 675 0
 1263              		add	r5, r5, #3014656
 1264 0abc 245096E5 		str	ip, [sp, #16]
 1265              		str	lr, [sp, #20]
 1266 0ac0 0C009CE8 		.loc 1 664 0
 1267              		mov	ip, #400	@ movhi
 1268 0ac4 BBEEA0E3 		.loc 1 665 0
 1269              		mov	lr, #1
 1270 0ac8 64C0A0E3 		.loc 1 675 0
 1271              		mov	r6, #0
 1272 0acc 846096E5 		.loc 1 664 0
 1273              		strh	ip, [r4, #6]	@ movhi
 1274 0ad0 05C0C4E5 		.loc 1 665 0
 1275              		str	lr, [r4, #0]
 1276 0ad4 08E08EE2 		.loc 1 675 0
 1277              		stmia	sp, {r5-r6}
 1278 0ad8 4DC04CE2 		mov	r5, #0
 1279              		mov	r6, #0
 1280 0adc B8E0C4E1 		str	r5, [sp, #8]
 1281              		str	r6, [sp, #12]
 1282 0ae0 04C0C4E5 		bl	xy2latlon
 1283              	.LVL11:
 1284 0ae4 145084E5 		.loc 1 677 0
 1285              		add	r2, sp, #44
 1286 0ae8 24C08DE2 		ldmia	r2, {r2-r3}
 1287 0aec 2CE08DE2 		ldr	r0, .L143+32
 1288 0af0 0151A0E3 		mov	r1, #0
 1289              		bl	__muldf3
 1290 0af4 186084E5 		bl	__fixdfsi
 1291              		mov	r5, r0
 1292 0af8 2E5885E2 	.LVL12:
 1293 0afc 10C08DE5 		.loc 1 678 0
 1294 0b00 14E08DE5 		add	r2, sp, #36
 1295              		ldmia	r2, {r2-r3}
 1296 0b04 19CEA0E3 		.loc 1 677 0
 1297              		str	r5, [r4, #12]
 1298 0b08 01E0A0E3 		.loc 1 678 0
 1299              		ldr	r0, .L143+32
 1300 0b0c 0060A0E3 		mov	r1, #0
 1301              		bl	__muldf3
 1302 0b10 B6C0C4E1 		bl	__fixdfsi
 1303              		.loc 1 681 0
 1304 0b14 00E084E5 		ldrh	r1, [r4, #6]
 1305              		ldr	r3, [r4, #20]
 1306 0b18 60008DE8 		ldr	r2, [r4, #24]
 1307 0b1c 0050A0E3 		add	r3, r3, r1
 1308 0b20 0060A0E3 		add	r2, r2, r3
 1309 0b24 08508DE5 		ldrb	ip, [r4, #5]	@ zero_extendqisi2
 1310 0b28 0C608DE5 		add	r2, r2, r5
 1311 0b2c FEFFFFEB 		ldrb	r1, [r4, #4]	@ zero_extendqisi2
 1312              		add	ip, ip, r2
 1313              		ldrh	r3, [r4, #8]
 1314 0b30 2C208DE2 		.loc 1 696 0
 1315 0b34 0C0092E8 		ldr	r5, .L143+40
 1316 0b38 08029FE5 		.loc 1 681 0
 1317 0b3c 0010A0E3 		add	r1, r1, ip
 1318 0b40 FEFFFFEB 		ldr	lr, [r4, #0]
 1319 0b44 FEFFFFEB 		add	r3, r0, r3
 1320 0b48 0050A0E1 		sub	r1, r1, #21760
 1321              		.loc 1 696 0
 1322              		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 1323 0b4c 24208DE2 		.loc 1 681 0
 1324 0b50 0C0092E8 		add	r3, r3, lr
 1325              		sub	r1, r1, #86
 1326 0b54 0C5084E5 		ldr	r6, .L143+16
 1327              		add	r3, r3, r1
 1328 0b58 E8019FE5 		.loc 1 696 0
 1329 0b5c 0010A0E3 		add	r2, r2, #1
 1330 0b60 FEFFFFEB 		.loc 1 681 0
 1331 0b64 FEFFFFEB 		strh	r3, [r4, #10]	@ movhi
 1332              		ldrh	ip, [r6, #0]
 1333 0b68 B610D4E1 		.loc 1 694 0
 1334 0b6c 143094E5 		ldr	r3, .L143+44
 1335 0b70 182094E5 		.loc 1 695 0
 1336 0b74 013083E0 		mov	lr, #1
 1337 0b78 032082E0 		.loc 1 696 0
 1338 0b7c 05C0D4E5 		strb	r2, [r5, #0]
 1339 0b80 052082E0 		.loc 1 698 0
 1340 0b84 0410D4E5 		mov	r2, #4
 1341 0b88 02C08CE0 		.loc 1 695 0
 1342 0b8c B830D4E1 		strb	lr, [sl, #0]
 1343              		.loc 1 693 0
 1344 0b90 B8519FE5 		strb	r8, [fp, #0]
 1345              		.loc 1 694 0
 1346 0b94 0C1081E0 		strb	lr, [r3, #0]
 1347 0b98 00E094E5 		.loc 1 698 0
 1348 0b9c 033080E0 		strb	r2, [r9, #0]
 1349 0ba0 551C41E2 		.loc 1 678 0
 1350              		str	r0, [r4, #16]
 1351 0ba4 0020D5E5 		b	.L115
 1352              	.LVL13:
 1353 0ba8 0E3083E0 	.L142:
 1354 0bac 561041E2 	.LBE3:
 1355 0bb0 80619FE5 	.LBB4:
 1356 0bb4 013083E0 		.loc 1 614 0
 1357              		ldr	r3, .L143+36
 1358 0bb8 012082E2 		ldr	ip, .L143+28
 1359              		.loc 1 601 0
 1360 0bbc BA30C4E1 		ldr	r4, .L143+20
 1361 0bc0 B0C0D6E1 		.loc 1 610 0
 1362              		ldr	r6, .L143+24
 1363 0bc4 88319FE5 		.loc 1 614 0
 1364              		ldmia	r3, {r0-r1}
 1365 0bc8 01E0A0E3 		.loc 1 602 0
 1366              		mov	lr, #2992
 1367 0bcc 0020C5E5 		.loc 1 614 0
 1368              		ldmia	ip, {r2-r3}
 1369 0bd0 0420A0E3 		.loc 1 601 0
 1370              		mov	ip, #100
 1371 0bd4 00E0CAE5 		.loc 1 610 0
 1372              		ldr	r5, [r6, #36]
 1373 0bd8 0080CBE5 		.loc 1 601 0
 1374              		strb	ip, [r4, #5]
 1375 0bdc 00E0C3E5 		.loc 1 611 0
 1376              		ldr	r6, [r6, #132]
 1377 0be0 0020C9E5 		.loc 1 602 0
 1378              		add	lr, lr, #8
 1379 0be4 100084E5 		.loc 1 607 0
 1380 0be8 9AFFFFEA 		sub	ip, ip, #77
 1381              		.loc 1 602 0
 1382              		strh	lr, [r4, #8]	@ movhi
 1383              		.loc 1 607 0
 1384              		strb	ip, [r4, #4]
 1385              		.loc 1 614 0
 1386 0bec 58319FE5 		add	lr, sp, #36
 1387 0bf0 4CC19FE5 		add	ip, sp, #44
 1388              		.loc 1 610 0
 1389 0bf4 40419FE5 		str	r5, [r4, #20]
 1390              		.loc 1 611 0
 1391 0bf8 40619FE5 		str	r6, [r4, #24]
 1392              		.loc 1 614 0
 1393 0bfc 030093E8 		mov	r5, #1073741824
 1394              		str	ip, [sp, #16]
 1395 0c00 BBEEA0E3 		str	lr, [sp, #20]
 1396              		.loc 1 603 0
 1397 0c04 0C009CE8 		mov	ip, #400	@ movhi
 1398              		.loc 1 604 0
 1399 0c08 64C0A0E3 		mov	lr, #1
 1400              		.loc 1 603 0
 1401 0c0c 245096E5 		strh	ip, [r4, #6]	@ movhi
 1402              		.loc 1 604 0
 1403 0c10 05C0C4E5 		str	lr, [r4, #0]
 1404              		.loc 1 614 0
 1405 0c14 846096E5 		add	r5, r5, #3014656
 1406              		mov	r6, #0
 1407 0c18 08E08EE2 		stmia	sp, {r5-r6}
 1408              		str	r5, [sp, #8]
 1409 0c1c 4DC04CE2 		str	r6, [sp, #12]
 1410              		bl	xy2latlon
 1411 0c20 B8E0C4E1 	.LVL14:
 1412              		.loc 1 616 0
 1413 0c24 04C0C4E5 		add	r2, sp, #36
 1414              		ldmia	r2, {r2-r3}
 1415 0c28 24E08DE2 		ldr	r0, .L143+32
 1416 0c2c 2CC08DE2 		mov	r1, #0
 1417              		bl	__muldf3
 1418 0c30 145084E5 		bl	__fixdfsi
 1419              		mov	r5, r0
 1420 0c34 186084E5 	.LVL15:
 1421              		.loc 1 617 0
 1422 0c38 0151A0E3 		add	r2, sp, #44
 1423 0c3c 10C08DE5 		ldmia	r2, {r2-r3}
 1424 0c40 14E08DE5 		.loc 1 616 0
 1425              		str	r5, [r4, #12]
 1426 0c44 19CEA0E3 		.loc 1 617 0
 1427              		ldr	r0, .L143+32
 1428 0c48 01E0A0E3 		mov	r1, #0
 1429              		bl	__muldf3
 1430 0c4c B6C0C4E1 		bl	__fixdfsi
 1431              		.loc 1 620 0
 1432 0c50 00E084E5 		ldrh	r1, [r4, #6]
 1433              		ldr	r3, [r4, #20]
 1434 0c54 2E5885E2 		ldr	r2, [r4, #24]
 1435 0c58 0060A0E3 		add	r3, r3, r1
 1436 0c5c 60008DE8 		add	r2, r2, r3
 1437 0c60 08508DE5 		ldrb	ip, [r4, #5]	@ zero_extendqisi2
 1438 0c64 0C608DE5 		add	r2, r2, r5
 1439 0c68 FEFFFFEB 		ldrb	r1, [r4, #4]	@ zero_extendqisi2
 1440              		add	ip, ip, r2
 1441              		ldrh	r3, [r4, #8]
 1442 0c6c 24208DE2 		.loc 1 634 0
 1443 0c70 0C0092E8 		ldr	r5, .L143+40
 1444 0c74 CC009FE5 		.loc 1 620 0
 1445 0c78 0010A0E3 		add	r1, r1, ip
 1446 0c7c FEFFFFEB 		ldr	lr, [r4, #0]
 1447 0c80 FEFFFFEB 		add	r3, r0, r3
 1448 0c84 0050A0E1 		sub	r1, r1, #21760
 1449              		.loc 1 634 0
 1450              		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 1451 0c88 2C208DE2 		.loc 1 620 0
 1452 0c8c 0C0092E8 		add	r3, r3, lr
 1453              		sub	r1, r1, #86
 1454 0c90 0C5084E5 		ldr	r6, .L143+16
 1455              		add	r3, r3, r1
 1456 0c94 AC009FE5 		.loc 1 634 0
 1457 0c98 0010A0E3 		add	r2, r2, #1
 1458 0c9c FEFFFFEB 		.loc 1 620 0
 1459 0ca0 FEFFFFEB 		strh	r3, [r4, #10]	@ movhi
 1460              		ldrh	ip, [r6, #0]
 1461 0ca4 B610D4E1 		.loc 1 632 0
 1462 0ca8 143094E5 		ldr	r3, .L143+44
 1463 0cac 182094E5 		.loc 1 633 0
 1464 0cb0 013083E0 		mov	lr, #1
 1465 0cb4 032082E0 		.loc 1 634 0
 1466 0cb8 05C0D4E5 		strb	r2, [r5, #0]
 1467 0cbc 052082E0 		.loc 1 636 0
 1468 0cc0 0410D4E5 		mov	r2, #3
 1469 0cc4 02C08CE0 		.loc 1 633 0
 1470 0cc8 B830D4E1 		strb	lr, [sl, #0]
 1471              		.loc 1 631 0
 1472 0ccc 7C509FE5 		strb	r8, [fp, #0]
 1473              		.loc 1 632 0
 1474 0cd0 0C1081E0 		strb	lr, [r3, #0]
 1475 0cd4 00E094E5 		.loc 1 636 0
 1476 0cd8 033080E0 		strb	r2, [r9, #0]
 1477 0cdc 551C41E2 		.loc 1 617 0
 1478              		str	r0, [r4, #16]
 1479 0ce0 0020D5E5 		b	.L115
 1480              	.L144:
 1481 0ce4 0E3083E0 		.align	2
 1482 0ce8 561041E2 	.L143:
 1483 0cec 44609FE5 		.word	wpExampleState.2772
 1484 0cf0 013083E0 		.word	WO_SDK
 1485              		.word	wpCtrlWpCmdUpdated
 1486 0cf4 012082E2 		.word	wpCtrlAckTrigger
 1487              		.word	wpCtrlNavStatus
 1488 0cf8 BA30C4E1 		.word	wpToLL
 1489 0cfc B0C0D6E1 		.word	RO_ALL_Data
 1490              		.word	originLon.2774
 1491 0d00 4C309FE5 		.word	1097011920
 1492              		.word	originLat.2773
 1493 0d04 01E0A0E3 		.word	wpExampleWpNr
 1494              		.word	wpCtrlWpCmd
 1495 0d08 0020C5E5 		.word	wpExampleActive
 1496              		.word	GPS_Data
 1497 0d0c 0320A0E3 	.LBE4:
 1498              	.LFE9:
 1500              		.global	__floatsisf
 1501 0d14 0080CBE5 		.global	__extendsfdf2
 1502              		.global	__truncdfsf2
 1503 0d18 00E0C3E5 		.global	__ltsf2
 1504              		.align	2
 1505 0d1c 0020C9E5 		.global	SDK_mainloop
 1507 0d20 100084E5 	SDK_mainloop:
 1508 0d24 4BFFFFEA 	.LFB4:
 1509              		.loc 1 258 0
 1510              		@ Function supports interworking.
 1511              		@ args = 0, pretend = 0, frame = 0
 1512 0d28 60000000 		@ frame_needed = 0, uses_anonymous_args = 0
 1513 0d2c 00000000 		stmfd	sp!, {r4, r5, lr}
 1514 0d30 00000000 	.LCFI7:
 1515 0d34 00000000 		.loc 1 267 0
 1516 0d38 00000000 		ldr	r4, .L168+16
 1517 0d3c 00000000 		ldrsh	r0, [r4, #4]
 1518 0d40 00000000 		bl	__floatsisf
 1519 0d44 50000000 		ldr	r5, .L168+20
 1520 0d48 D0126341 		str	r0, [r5, #0]	@ float
 1521 0d4c 58000000 		.loc 1 268 0
 1522 0d50 00000000 		ldr	r0, [r4, #32]
 1523 0d54 00000000 		bl	__floatsisf
 1524 0d58 00000000 		bl	__extendsfdf2
 1525 0d5c 00000000 		mov	r2, #1073741824
 1526              		add	r2, r2, #9371648
 1527              		add	r2, r2, #16384
 1528              		mov	r3, #0
 1529              		bl	__divdf3
 1530              		adr	r2, .L168
 1531              		ldmia	r2, {r2-r3}
 1532              		bl	__muldf3
 1533              		bl	__truncdfsf2
 1534              		str	r0, [r5, #4]	@ float
 1535              		.loc 1 269 0
 1536              		ldr	r0, [r4, #28]
 1537              		bl	__floatsisf
 1538              		bl	__extendsfdf2
 1539              		mov	r2, #1073741824
 1540              		add	r2, r2, #9371648
 1541              		add	r2, r2, #16384
 1542 0d60 30402DE9 		mov	r3, #0
 1543              		bl	__divdf3
 1544              		adr	r2, .L168
 1545 0d64 78429FE5 		ldmia	r2, {r2-r3}
 1546 0d68 F400D4E1 		bl	__muldf3
 1547 0d6c FEFFFFEB 		bl	__truncdfsf2
 1548 0d70 70529FE5 		str	r0, [r5, #8]	@ float
 1549 0d74 000085E5 		.loc 1 270 0
 1550              		ldr	r0, [r4, #36]
 1551 0d78 200094E5 		bl	__floatsisf
 1552 0d7c FEFFFFEB 		bl	__extendsfdf2
 1553 0d80 FEFFFFEB 		mov	r2, #1073741824
 1554 0d84 0121A0E3 		add	r2, r2, #9371648
 1555 0d88 8F2882E2 		add	r2, r2, #16384
 1556 0d8c 012982E2 		mov	r3, #0
 1557 0d90 0030A0E3 		bl	__divdf3
 1558 0d94 FEFFFFEB 		adr	r2, .L168
 1559 0d98 8D2F8FE2 		ldmia	r2, {r2-r3}
 1560 0d9c 0C0092E8 		bl	__muldf3
 1561 0da0 FEFFFFEB 		bl	__truncdfsf2
 1562 0da4 FEFFFFEB 		mov	r1, #0
 1563 0da8 040085E5 		bl	angle_diff
 1564              		.loc 1 271 0
 1565 0dac 1C0094E5 		ldr	r4, .L168+24
 1566 0db0 FEFFFFEB 		.loc 1 270 0
 1567 0db4 FEFFFFEB 		str	r0, [r5, #12]	@ float
 1568 0db8 0121A0E3 		.loc 1 271 0
 1569 0dbc 8F2882E2 		ldr	r0, [r4, #16]
 1570 0dc0 012982E2 		bl	__floatsisf
 1571 0dc4 0030A0E3 		bl	__extendsfdf2
 1572 0dc8 FEFFFFEB 		adr	r2, .L168+8
 1573 0dcc 022C8FE2 		ldmia	r2, {r2-r3}
 1574 0dd0 0C0092E8 		bl	__muldf3
 1575 0dd4 FEFFFFEB 		bl	__truncdfsf2
 1576 0dd8 FEFFFFEB 		str	r0, [r5, #28]	@ float
 1577 0ddc 080085E5 		.loc 1 272 0
 1578              		ldr	r0, [r4, #12]
 1579 0de0 240094E5 		bl	__floatsisf
 1580 0de4 FEFFFFEB 		bl	__extendsfdf2
 1581 0de8 FEFFFFEB 		adr	r2, .L168+8
 1582 0dec 0121A0E3 		ldmia	r2, {r2-r3}
 1583 0df0 8F2882E2 		bl	__muldf3
 1584 0df4 012982E2 		bl	__truncdfsf2
 1585 0df8 0030A0E3 		str	r0, [r5, #32]	@ float
 1586 0dfc FEFFFFEB 		.loc 1 273 0
 1587 0e00 732F8FE2 		ldr	r0, [r4, #20]
 1588 0e04 0C0092E8 		bl	__floatsisf
 1589 0e08 FEFFFFEB 		bl	__extendsfdf2
 1590 0e0c FEFFFFEB 		adr	r2, .L168+8
 1591 0e10 0010A0E3 		ldmia	r2, {r2-r3}
 1592 0e14 FEFFFFEB 		bl	__muldf3
 1593              		bl	__truncdfsf2
 1594 0e18 CC419FE5 		.loc 1 275 0
 1595              		ldr	r4, .L168+28
 1596 0e1c 0C0085E5 		ldr	r3, [r4, #0]
 1597              		cmp	r3, #0
 1598 0e20 100094E5 		.loc 1 273 0
 1599 0e24 FEFFFFEB 		str	r0, [r5, #36]	@ float
 1600 0e28 FEFFFFEB 		.loc 1 275 0
 1601 0e2c 6A2F8FE2 		bne	.L146
 1602 0e30 0C0092E8 		.loc 1 276 0
 1603 0e34 FEFFFFEB 		ldr	r3, .L168+32
 1604 0e38 FEFFFFEB 		mov	r1, #-1090519040
 1605 0e3c 1C0085E5 		ldr	r0, [r3, #16]	@ float
 1606              		bl	__ltsf2
 1607 0e40 0C0094E5 		cmp	r0, #0
 1608 0e44 FEFFFFEB 		.loc 1 277 0
 1609 0e48 FEFFFFEB 		movlt	r3, #1
 1610 0e4c 622F8FE2 		strlt	r3, [r4, #0]
 1611 0e50 0C0092E8 	.L146:
 1612 0e54 FEFFFFEB 		.loc 1 282 0
 1613 0e58 FEFFFFEB 		ldr	r0, .L168+36
 1614 0e5c 200085E5 		ldr	r3, [r0, #0]
 1615              		cmp	r3, #1
 1616 0e60 140094E5 		beq	.L164
 1617 0e64 FEFFFFEB 	.L150:
 1618 0e68 FEFFFFEB 		.loc 1 287 0
 1619 0e6c 5A2F8FE2 		ldr	r0, .L168+40
 1620 0e70 0C0092E8 		ldr	r3, [r0, #0]
 1621 0e74 FEFFFFEB 		cmp	r3, #1
 1622 0e78 FEFFFFEB 		beq	.L165
 1623              	.L152:
 1624 0e7c 6C419FE5 		.loc 1 293 0
 1625 0e80 003094E5 		bl	lab
 1626 0e84 000053E3 		.loc 1 348 0
 1627              		ldr	lr, .L168+44
 1628 0e88 240085E5 		ldr	ip, [lr, #0]
 1629              		cmp	ip, #2000
 1630 0e8c 0600001A 		ble	.L154
 1631              		.loc 1 349 0
 1632 0e90 5C319FE5 		ldr	r3, .L168+48
 1633 0e94 BF14A0E3 		ldr	r2, [r3, #0]
 1634 0e98 100093E5 		cmp	r2, #1
 1635 0e9c FEFFFFEB 		.loc 1 363 0
 1636 0ea0 000050E3 		movne	r1, #-536870912
 1637              		.loc 1 364 0
 1638 0ea4 0130A0B3 		movne	r0, #52224
 1639 0ea8 003084B5 		.loc 1 365 0
 1640              		movne	r2, r1
 1641              		.loc 1 364 0
 1642 0eac 44019FE5 		addne	r0, r0, #3
 1643 0eb0 003090E5 		.loc 1 349 0
 1644 0eb4 010053E3 		beq	.L166
 1645 0eb8 2800000A 	.L163:
 1646              		.loc 1 363 0
 1647              		mov	r3, #128
 1648 0ebc 38019FE5 		add	r1, r1, #163840
 1649 0ec0 003090E5 		str	r3, [r1, #12]
 1650 0ec4 010053E3 		.loc 1 364 0
 1651 0ec8 1B00000A 		ldr	r3, .L168+52
 1652              		.loc 1 365 0
 1653              		add	r2, r2, #131072
 1654 0ecc FEFFFFEB 		str	r0, [r2, #8]
 1655              		.loc 1 364 0
 1656 0ed0 28E19FE5 		str	r0, [r3, #0]
 1657 0ed4 00C09EE5 	.L154:
 1658 0ed8 7D0E5CE3 		.loc 1 371 0
 1659 0edc 0E0000DA 		ldr	r3, .L168+56
 1660              		ldr	r2, [r3, #0]
 1661 0ee0 1C319FE5 		.loc 1 369 0
 1662 0ee4 002093E5 		add	r1, ip, #1
 1663 0ee8 010052E3 		.loc 1 371 0
 1664              		add	r2, r2, #1
 1665 0eec 0E12A013 		.loc 1 369 0
 1666              		str	r1, [lr, #0]
 1667 0ef0 330BA013 		.loc 1 371 0
 1668              		str	r2, [r3, #0]
 1669 0ef4 0120A011 		.loc 1 381 0
 1670              		ldmfd	sp!, {r4, r5, lr}
 1671 0ef8 03008012 		bx	lr
 1672              	.L165:
 1673 0efc 1E00000A 		.loc 1 288 0
 1674              		ldr	r2, .L168+60
 1675              		ldr	r3, [r2, #0]
 1676 0f00 8030A0E3 		ldr	r2, .L168+64
 1677 0f04 0A1981E2 		mvn	r3, r3
 1678 0f08 0C3081E5 		and	r3, r3, #1
 1679              		.loc 1 289 0
 1680 0f0c F4309FE5 		mov	r1, #0
 1681              		.loc 1 288 0
 1682 0f10 022882E2 		str	r3, [r2, #0]
 1683 0f14 080082E5 		.loc 1 289 0
 1684              		str	r1, [r0, #0]
 1685 0f18 000083E5 		b	.L152
 1686              	.L164:
 1687              		.loc 1 283 0
 1688 0f1c E8309FE5 		ldr	r3, .L168+68
 1689 0f20 002093E5 		ldr	r2, .L168+72
 1690              		ldr	r1, [r3, #0]
 1691 0f24 01108CE2 		.loc 1 285 0
 1692              		mov	r3, #0
 1693 0f28 012082E2 		.loc 1 283 0
 1694              		str	r1, [r2, #0]
 1695 0f2c 00108EE5 		.loc 1 285 0
 1696              		str	r3, [r0, #0]
 1697 0f30 002083E5 		b	.L150
 1698              	.L166:
 1699 0f34 3040BDE8 		.loc 1 350 0
 1700 0f38 1EFF2FE1 		ldr	r0, .L168+76
 1701              		.loc 1 351 0
 1702              		ldr	r3, .L168+80
 1703 0f3c CC209FE5 		.loc 1 350 0
 1704 0f40 003092E5 		ldr	r1, [r0, #0]
 1705 0f44 C8209FE5 		.loc 1 351 0
 1706 0f48 0330E0E1 		ldr	r2, [r3, #0]
 1707 0f4c 013003E2 		.loc 1 350 0
 1708              		add	r1, r1, #1
 1709 0f50 0010A0E3 		.loc 1 351 0
 1710              		cmp	r2, #1
 1711 0f54 003082E5 		.loc 1 350 0
 1712              		str	r1, [r0, #0]
 1713 0f58 001080E5 		.loc 1 351 0
 1714 0f5c DAFFFFEA 		beq	.L167
 1715              		.loc 1 357 0
 1716              		cmp	r1, #75
 1717 0f60 B0309FE5 		.loc 1 358 0
 1718 0f64 B0209FE5 		moveq	r1, #-536870912
 1719 0f68 001093E5 		.loc 1 359 0
 1720              		moveq	r0, #52224
 1721 0f6c 0030A0E3 		.loc 1 360 0
 1722              		moveq	r2, r1
 1723 0f70 001082E5 		.loc 1 359 0
 1724              		addeq	r0, r0, #2
 1725 0f74 003080E5 		.loc 1 357 0
 1726 0f78 CFFFFFEA 		bne	.L154
 1727              		b	.L163
 1728              	.L167:
 1729 0f7c 9C009FE5 		.loc 1 352 0
 1730              		cmp	r1, #5
 1731 0f80 9C309FE5 		.loc 1 353 0
 1732              		subeq	r1, r1, #536870917
 1733 0f84 001090E5 		.loc 1 354 0
 1734              		moveq	r0, #52224
 1735 0f88 002093E5 		.loc 1 355 0
 1736              		moveq	r2, r1
 1737 0f8c 011081E2 		.loc 1 354 0
 1738              		addeq	r0, r0, #1
 1739 0f90 010052E3 		.loc 1 352 0
 1740              		bne	.L154
 1741 0f94 001080E5 		b	.L163
 1742              	.L169:
 1743 0f98 0600000A 		.align	2
 1744              	.L168:
 1745 0f9c 4B0051E3 		.word	1066524485
 1746              		.word	-1525816720
 1747 0fa0 0E12A003 		.word	1060216130
 1748              		.word	1248163157
 1749 0fa4 330BA003 		.word	RO_ALL_Data
 1750              		.word	imusensor
 1751 0fa8 0120A001 		.word	IMU_CalcData
 1752              		.word	takeoff2
 1753 0fac 02008002 		.word	real_mocap
 1754              		.word	NewUsonicData
 1755 0fb0 D9FFFF1A 		.word	NewMagnetSwitch
 1756 0fb4 D1FFFFEA 		.word	timer
 1757              		.word	f28027_ready
 1758              		.word	SPI0command
 1759 0fb8 050051E3 		.word	my_sdkloop_counter
 1760              		.word	MagnetSwitch
 1761 0fbc 52124102 		.word	GotMagnet
 1762              		.word	UsonicData
 1763 0fc0 330BA003 		.word	USMaxBot_range1
 1764              		.word	UsonicTimer
 1765 0fc4 0120A001 		.word	firebit
 1766              	.LFE4:
 1768              		.global	wpExampleWpNr
 1769 0fcc D2FFFF1A 		.bss
 1772              	wpExampleWpNr:
 1773              		.space	1
 1774 0fd4 45DF913F 		.global	wpExampleActive
 1777 0fe0 5575654A 	wpExampleActive:
 1778 0fe4 00000000 		.space	1
 1779 0fe8 00000000 		.global	emergencyModeUpdate
 1782 0ff4 00000000 	emergencyModeUpdate:
 1783 0ff8 00000000 		.space	1
 1784 0ffc 00000000 		.global	my_sdkloop_counter
 1785 1000 08000000 		.align	2
 1788 100c 00000000 	my_sdkloop_counter:
 1789 1010 00000000 		.space	4
 1790 1014 00000000 		.global	firebit
 1791 1018 00000000 		.data
 1792 101c 00000000 		.align	2
 1795              	firebit:
 1796              		.word	1
 1797              		.global	UsonicTimer
 1798              		.bss
 1799              		.align	2
 1802 0000 00       	UsonicTimer:
 1803              		.space	4
 1804              		.global	SPI0data
 1805              		.align	2
 1808              	SPI0data:
 1809              		.space	4
 1810              		.global	SPI0command
 1811              		.align	2
 1814 0003 00       	SPI0command:
 1815              		.space	4
 1816              		.global	f28027_ready
 1817              		.align	2
 1820              	f28027_ready:
 1821              		.space	4
 1822              		.global	UsonicData
 1823              		.align	2
 1826              	UsonicData:
 1827              		.space	4
 1828              		.global	NewUsonicData
 1829              		.align	2
 1832 0008 00000000 	NewUsonicData:
 1833              		.space	4
 1834              		.global	USMaxBot_range1
 1835              		.align	2
 1838 000c 00000000 	USMaxBot_range1:
 1839              		.space	4
 1840              		.global	SwitchTimer
 1841              		.align	2
 1844 0010 00000000 	SwitchTimer:
 1845              		.space	4
 1846              		.global	readSwitchbit
 1847              		.align	2
 1850 0014 00000000 	readSwitchbit:
 1851              		.space	4
 1852              		.global	MagnetSwitch
 1853              		.align	2
 1856 0018 00000000 	MagnetSwitch:
 1857              		.space	4
 1858              		.global	NewMagnetSwitch
 1859              		.align	2
 1862 001c 00000000 	NewMagnetSwitch:
 1863              		.space	4
 1864              		.global	GotMagnet
 1865              		.align	2
 1868 0020 00000000 	GotMagnet:
 1869              		.space	4
 1870              		.global	SPItxCount
 1871              		.align	2
 1874 0024 00000000 	SPItxCount:
 1875              		.space	4
 1876              		.global	SPItxSize
 1877              		.align	2
 1880 0028 00000000 	SPItxSize:
 1881              		.space	4
 1882              		.global	SPItxDone
 1883              		.data
 1884              		.align	2
 1887              	SPItxDone:
 1888              		.word	1
 1889              		.global	numMissedTx
 1890              		.bss
 1891              		.align	2
 1894              	numMissedTx:
 1895              		.space	4
 1896              		.global	testcount
 1897              		.align	2
 1900              	testcount:
 1901              		.space	4
 1902              		.align	2
 1903              	timeout.2872:
 1904 0038 00000000 		.space	4
 1905              		.align	2
 1906              	timeout.2865:
 1907              		.space	4
 1908              		.align	2
 1909              	originLon.2774:
 1910 003c 00000000 		.space	8
 1911              		.align	2
 1912              	originLat.2773:
 1913              		.space	8
 1914              	wpExampleState.2772:
 1915              		.space	1
 1916              		.data
 1917 0004 01000000 		.align	2
 1920              	timer:
 1921              		.word	1
 1922              		.comm	GPS_timeout,4,4
 1923              		.comm	SYSTEM_initialized,1,1
 1924 0040 00000000 		.comm	WO_SDK,4,4
 1925              		.comm	RO_ALL_Data,152,4
 1926              		.comm	RO_RC_Data,16,4
 1927              		.comm	WO_Direct_Individual_Motor_Control,12,4
 1928              		.comm	WO_Direct_Motor_Control,4,4
 1929              		.comm	WO_CTRL_Input,12,4
 1930 0044 00000000 		.comm	emergencyMode,1,1
 1931              		.comm	takeoff2,4,4
 1932              		.comm	initialize,4,4
 1933 0048 00000000 		.comm	velocityEstHolder,4,4
 1934              		.comm	VelEstX,4,4
 1935              		.comm	VelEstY,4,4
 1936 004c 00000000 		.comm	VelEstZ,4,4
 1937              		.comm	previousXMeas,4,4
 1938              		.comm	previousYMeas,4,4
 1939 0050 00000000 		.comm	previousZMeas,4,4
 1939      00000000 
 1940              		.comm	errorcum,12,4
 1941              		.comm	IntegralHolder,4,4
 1942 0058 00000000 		.comm	imusensor,68,4
 1942      00000000 
 1943              		.comm	SPItxArray,100,2
 1944 0060 00       		.comm	f2s,4,4
 1945 0061 000000   		.comm	testarray,20,4
 1946              		.section	.debug_frame,"",%progbits
 1947              	.Lframe0:
 1948              		.4byte	.LECIE0-.LSCIE0
 1949              	.LSCIE0:
 1950 0008 01000000 		.4byte	0xffffffff
 1951              		.byte	0x1
 1952              		.ascii	"\000"
 1953              		.uleb128 0x1
 1954              		.sleb128 -4
 1955              		.byte	0xe
 1956              		.byte	0xc
 1957              		.uleb128 0xd
 1958              		.uleb128 0x0
 1959              		.align	2
 1960              	.LECIE0:
 1961              	.LSFDE0:
 1962              		.4byte	.LEFDE0-.LASFDE0
 1963              	.LASFDE0:
 1964              		.4byte	.Lframe0
 1965              		.4byte	.LFB2
 1966              		.4byte	.LFE2-.LFB2
 1967              		.byte	0x4
 1968              		.4byte	.LCFI0-.LFB2
 1969              		.byte	0xe
 1970              		.uleb128 0xc
 1971              		.byte	0x8e
 1972              		.uleb128 0x1
 1973              		.byte	0x85
 1974              		.uleb128 0x2
 2162              		.4byte	.LCFI2-.Ltext0
DEFINED SYMBOLS
                            *ABS*:00000000 sdk.c
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:13     .text:00000000 SPI0Handler
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:20     .text:00000000 $a
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:255    .text:00000260 $d
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1837   .bss:0000000c SPI0data
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1843   .bss:00000010 SPI0command
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1849   .bss:00000014 f28027_ready
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1824   .data:00000000 firebit
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1855   .bss:00000018 UsonicData
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1831   .bss:00000008 UsonicTimer
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1861   .bss:0000001c NewUsonicData
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1879   .bss:00000028 readSwitchbit
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1873   .bss:00000024 SwitchTimer
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1909   .bss:0000003c SPItxSize
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1903   .bss:00000038 SPItxCount
                            *COM*:00000064 SPItxArray
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1916   .data:00000004 SPItxDone
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1885   .bss:0000002c MagnetSwitch
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1891   .bss:00000030 NewMagnetSwitch
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:275    .text:0000029c SDK_Init
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:281    .text:0000029c $a
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:391    .text:00000374 $d
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1817   .bss:00000004 my_sdkloop_counter
                            *COM*:00000004 velocityEstHolder
                            *COM*:00000004 initialize
                            *COM*:00000004 VelEstY
                            *COM*:00000004 VelEstX
                            *COM*:00000004 VelEstZ
                            *COM*:00000004 previousXMeas
                            *COM*:00000004 previousYMeas
                            *COM*:00000004 previousZMeas
                            *COM*:0000000c errorcum
                            *COM*:00000004 IntegralHolder
                            *COM*:00000004 takeoff2
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:412    .text:000003b4 SDK_SetEmergencyMode
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:420    .text:000003b4 $a
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:443    .text:000003e8 $d
                            *COM*:00000001 emergencyMode
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1811   .bss:00000002 emergencyModeUpdate
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:450    .text:000003f0 SDK_EXAMPLE_direct_individual_motor_commands
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:458    .text:000003f0 $a
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:542    .text:000004a8 $d
                            *COM*:00000098 RO_ALL_Data
                            *COM*:0000000c WO_Direct_Individual_Motor_Control
                            *COM*:00000004 WO_SDK
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:551    .text:000004b8 SDK_EXAMPLE_direct_motor_commands_with_standard_output_mapping
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:558    .text:000004b8 $a
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:635    .text:00000554 $d
                            *COM*:00000004 WO_Direct_Motor_Control
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:644    .text:00000564 SDK_EXAMPLE_attitude_commands
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:652    .text:00000564 $a
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:677    .text:00000590 $d
                            *COM*:0000000c WO_CTRL_Input
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:684    .text:00000598 SDK_EXAMPLE_turn_motors_on
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:691    .text:00000598 $a
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:757    .text:0000061c $d
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1935   .bss:0000004c timeout.2865
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:765    .text:00000628 SDK_EXAMPLE_turn_motors_off
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:772    .text:00000628 $a
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:839    .text:000006ac $d
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1932   .bss:00000048 timeout.2872
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:851    .text:000006b8 SDK_EXAMPLE_gps_waypoint_control
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:857    .text:000006b8 $a
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:882    .text:000006e8 $d
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:889    .text:000006fc $a
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1512   .text:00000d28 $d
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1943   .bss:00000060 wpExampleState.2772
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1938   .bss:00000050 originLon.2774
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1941   .bss:00000058 originLat.2773
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1801   .bss:00000000 wpExampleWpNr
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1806   .bss:00000001 wpExampleActive
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1536   .text:00000d60 SDK_mainloop
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1542   .text:00000d60 $a
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1774   .text:00000fd4 $d
                            *COM*:00000044 imusensor
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1949   .data:00000008 timer
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1897   .bss:00000034 GotMagnet
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1867   .bss:00000020 USMaxBot_range1
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1825   .data:00000000 $d
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1923   .bss:00000040 numMissedTx
C:\Users\bkuo\AppData\Local\Temp/ccm8oaaa.s:1929   .bss:00000044 testcount
                            *COM*:00000004 GPS_timeout
                            *COM*:00000001 SYSTEM_initialized
                            *COM*:00000010 RO_RC_Data
                            *COM*:00000004 f2s
                            *COM*:00000014 testarray

UNDEFINED SYMBOLS
u
real_mocap
mocap
__floatsidf
__divdf3
__muldf3
__fixdfsi
xy2latlon
wpCtrlWpCmdUpdated
wpCtrlAckTrigger
wpCtrlNavStatus
wpToLL
wpCtrlWpCmd
GPS_Data
__floatsisf
__extendsfdf2
__truncdfsf2
__ltsf2
angle_diff
lab
IMU_CalcData
