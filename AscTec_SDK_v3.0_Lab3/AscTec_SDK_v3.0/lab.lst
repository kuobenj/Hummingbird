   1              		.file	"lab.c"
   9              	.Ltext0:
  10              		.global	mass
  11              		.data
  12              		.align	2
  15              	mass:
  16 0000 0000C03F 		.word	1069547520
  17              		.global	kF
  18              		.align	2
  21              	kF:
  22 0004 10CE8637 		.word	931581456
  23              		.global	kM
  24              		.align	2
  27              	kM:
  28 0008 4D59AE34 		.word	883841357
  29              		.global	l
  30              		.align	2
  33              	l:
  34 000c F6285C3E 		.word	1046227190
  35              		.global	MAXPHI2
  36              		.align	2
  39              	MAXPHI2:
  40 0010 7B5E1449 		.word	1226071675
  41              		.global	MINPHI2
  42              		.align	2
  45              	MINPHI2:
  46 0014 747A4646 		.word	1179023988
  47              		.global	g
  48              		.align	2
  51              	g:
  52 0018 0AE81C41 		.word	1092413450
  53              		.global	Ben_thrust
  54              		.bss
  55              		.align	1
  58              	Ben_thrust:
  59 0000 0000     		.space	2
  60              		.text
  61              		.align	2
  62              		.global	lab
  64              	lab:
  65              	.LFB2:
  66              		.file 1 "lab.c"
   1:lab.c         **** /*
   2:lab.c         ****  * lab.c
   3:lab.c         ****  *
   4:lab.c         ****  *  Created on: Jan 26, 2015
   5:lab.c         ****  *      Author: hanley6
   6:lab.c         ****  */
   7:lab.c         **** 
   8:lab.c         **** /*----------------------------------------------------------------------*/
   9:lab.c         **** /*------------------------------ Preamble ------------------------------*/
  10:lab.c         **** /*----------------------------------------------------------------------*/
  11:lab.c         **** 
  12:lab.c         **** /*--------------- Includes ---------------*/
  13:lab.c         **** #include "lab.h"
  14:lab.c         **** #include "math.h"
  15:lab.c         **** /*------------- End Includes -------------*/
  16:lab.c         **** 
  17:lab.c         **** /*---------- Function Prototypes ---------*/
  18:lab.c         **** void lab2(void);
  19:lab.c         **** void lab3(void);
  20:lab.c         **** void Command(void);
  21:lab.c         **** void VelocityEst(void); 
  22:lab.c         **** /*-------- End Function Prototypes -------*/
  23:lab.c         **** 
  24:lab.c         **** /*--------------- Globals ----------------*/
  25:lab.c         **** struct imuSensor imusensor;
  26:lab.c         **** struct U u;
  27:lab.c         **** struct realMOCAP real_mocap;
  28:lab.c         **** struct MOCAP mocap;
  29:lab.c         **** 
  30:lab.c         **** /////////// HUMMINGBIRD PARAMETERS /////////////
  31:lab.c         **** float mass = 1.5;  	// TO BE ENTERED!			
  32:lab.c         **** float kF = 1.607e-5; 	// TO BE ENTERED!		
  33:lab.c         **** float kM = 3.2475e-7; 	// TO BE ENTERED!		
  34:lab.c         **** float l = 0.215;    	// TO BE ENTERED!		
  35:lab.c         **** float MAXPHI2 = powf(779.5638,2.0);	// TO BE ENTERED!
  36:lab.c         **** float MINPHI2 = powf(112.705875,2.0);	// TO BE ENTERED!
  37:lab.c         **** ////////////////////////////////////////////
  38:lab.c         **** 
  39:lab.c         **** // Other Declarations
  40:lab.c         **** float Winv[4*4];
  41:lab.c         **** float cnt_u[4];
  42:lab.c         **** float omega_cmd2[4];
  43:lab.c         **** float omega_cmd[4];
  44:lab.c         **** float cmd[4];
  45:lab.c         **** float roll_desired;
  46:lab.c         **** float pitch_desired;
  47:lab.c         **** float yaw_desired;
  48:lab.c         **** float x_nom[4];
  49:lab.c         **** float g = 9.80665;	// Standard Gravity m/s^2
  50:lab.c         **** float z[3];		// Sensor measurement for Kalman Filter
  51:lab.c         **** float dt;
  52:lab.c         **** 
  53:lab.c         **** //Benjamin Kuo Additions for Usonics
  54:lab.c         **** extern int USMaxBot_range1;
  55:lab.c         **** int USMaxBot_range1_old;
  56:lab.c         **** short Ben_thrust = 0;
  57:lab.c         **** 
  58:lab.c         **** //End Benjamin Kuo Additions
  59:lab.c         **** /*------------- End Globals --------------*/
  60:lab.c         **** 
  61:lab.c         **** /*----------------------------------------------------------------------*/
  62:lab.c         **** /*---------------------------- End Preamble ----------------------------*/
  63:lab.c         **** /*----------------------------------------------------------------------*/
  64:lab.c         **** 
  65:lab.c         **** 
  66:lab.c         **** /*----------------------------------------------------------------------*/
  67:lab.c         **** /*------------------ Main Loop (called at 1 kHz) -----------------------*/
  68:lab.c         **** /*----------------------------------------------------------------------*/
  69:lab.c         **** void lab(void)
  70:lab.c         **** {
  67              	nd = 0, frame = 0
  68              		@ frame_needed = 1, uses_anonymous_args = 0
  69              		mov	ip, sp
  70              	.LCFI0:
  71 0000 0DC0A0E1 		stmfd	sp!, {fp, ip, lr, pc}
  72              	.LCFI1:
  73 0004 00D82DE9 		sub	fp, ip, #4
  74              	.LCFI2:
  75 0008 04B04CE2 		.loc 1 72 0
  76              		ldr	r2, .L3
  71:lab.c         **** 		// y/East (m)
  72:lab.c         **** 	//x_nom[2] = -1.0;	// z/Down (m)
  77              	L3+4	@ float
  78 000c 40209FE5 		str	r3, [r2, #0]	@ float
  79 0010 40309FE5 		.loc 1 73 0
  80 0014 003082E5 		ldr	r2, .L3
  73:lab.c         **** //new hight scale is based on inches
  81              		r3, .L3+4	@ float
  82 0018 34209FE5 		str	r3, [r2, #4]	@ float
  83 001c 34309FE5 		.loc 1 77 0
  84 0020 043082E5 		ldr	r2, .L3
  74:lab.c         **** x_nom[2] = 36;
  75:lab.c         **** 
  76:lab.c         **** 	x_nom[3] = 0.0;		// yaw (rad)
  77:lab.c         **** 
  85              		r3, .L3+8	@ float
  86 0024 28209FE5 		str	r3, [r2, #8]	@ float
  87 0028 2C309FE5 		.loc 1 79 0
  88 002c 083082E5 		ldr	r2, .L3
  78:lab.c         **** Velocity Estimation	
  79:lab.c         **** 	VelocityEst();
  89              		r3, .L3+4	@ float
  90 0030 1C209FE5 		str	r3, [r2, #12]	@ float
  91 0034 1C309FE5 		.loc 1 82 0
  92 0038 0C3082E5 		bl	VelocityEst
  80:lab.c         **** // Lab 3
  81:lab.c         **** 	//lab3();
  82:lab.c         **** 
  93              	c 1 92 0
  94 003c FEFFFFEB 		bl	Bens_Control_Law
  83:lab.c         ****  Lab 2
  84:lab.c         **** 	//lab2();
  85:lab.c         **** 
  86:lab.c         **** 	// Convert Controller Outputs to Motor Inputs
  87:lab.c         **** 	//Command();
  88:lab.c         **** 	Bens_Control_Law();
  89:lab.c         **** 	Bens_Command();
  90:lab.c         **** 	
  91:lab.c         **** }
  92:lab.c         **** /*----------------------------------------------------------------------*/
  95              	loc 1 93 0
  96 0040 FEFFFFEB 		bl	Bens_Command
  93:lab.c         **** -------- End Main Loop (called at 1 kHz) ---------------------*/
  97              	loc 1 95 0
  98 0044 FEFFFFEB 		sub	sp, fp, #12
  94:lab.c         **** *----------------------------------------------------------------------*/
  95:lab.c         **** 
  99              	dmfd	sp, {fp, sp, lr}
 100 0048 0CD04BE2 		bx	lr
 101 004c 00689DE8 	.L4:
 102 0050 1EFF2FE1 		.align	2
 103              	.L3:
 104              		.word	x_nom
 105              		.word	0
 106 0054 00000000 		.word	1108344832
 107 0058 00000000 	.LFE2:
 109              		.global	__nesf2
 110              		.global	__subsf3
 111              		.global	__extendsfdf2
 112              		.global	__divdf3
 113              		.global	__truncdfsf2
 114              		.global	__mulsf3
 115              		.global	__subdf3
 116              		.global	__muldf3
 117              		.global	__adddf3
 118              		.align	2
 119              		.global	VelocityEst
 121              	VelocityEst:
 122              	.LFB3:
 123              		.loc 1 104 0
 124              		@ Function supports interworking.
  96:lab.c         **** ----------------------------------------------------------------------*/
  97:lab.c         **** /*------------------------------ Helpers -------------------------------*/
  98:lab.c         **** /*----------------------------------------------------------------------*/
  99:lab.c         **** /*---------- Velocity Estimator ----------*/
 100:lab.c         **** void VelocityEst() {
 101:lab.c         **** 
 102:lab.c         **** 	// Velocity Estimation
 103:lab.c         **** 	if (initialize == 0)
 104:lab.c         **** 	{
 125              	frame = 4
 126              		@ frame_needed = 1, uses_anonymous_args = 0
 127              		mov	ip, sp
 128              	.LCFI3:
 129 0060 0DC0A0E1 		stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}
 130              	.LCFI4:
 131 0064 F0D92DE9 		sub	fp, ip, #4
 132              	.LCFI5:
 133 0068 04B04CE2 		sub	sp, sp, #4
 134              	.LCFI6:
 135 006c 04D04DE2 		.loc 1 107 0
 136              		ldr	r3, .L16
 105:lab.c         **** ialization
 106:lab.c         **** 		mocap.dX = real_mocap.dX;
 107:lab.c         **** 		mocap.dY = real_mocap.dY;
 137              	, #0]
 138 0070 90309FE5 		cmp	r3, #0
 139 0074 003093E5 		bne	.L6
 140 0078 000053E3 		.loc 1 110 0
 141 007c 2F00001A 		ldr	r3, .L16+36
 108:lab.c         **** ocap.dZ = real_mocap.dZ;
 109:lab.c         **** 		mocap.dVx = 0.0;
 110:lab.c         **** 		mocap.dVy = 0.0;
 142              	r2, [r3, #8]	@ float
 143 0080 A4309FE5 		ldr	r3, .L16+40
 144 0084 082093E5 		str	r2, [r3, #8]	@ float
 145 0088 A0309FE5 		.loc 1 111 0
 146 008c 082083E5 		ldr	r3, .L16+36
 111:lab.c         **** ocap.dVz = 0.0;
 147              	r2, [r3, #12]	@ float
 148 0090 94309FE5 		ldr	r3, .L16+40
 149 0094 0C2093E5 		str	r2, [r3, #12]	@ float
 150 0098 90309FE5 		.loc 1 112 0
 151 009c 0C2083E5 		ldr	r3, .L16+36
 112:lab.c         **** 		// End Initialization if first packet from MoCap received
 152              	r2, [r3, #16]	@ float
 153 00a0 84309FE5 		ldr	r3, .L16+40
 154 00a4 102093E5 		str	r2, [r3, #16]	@ float
 155 00a8 80309FE5 		.loc 1 113 0
 156 00ac 102083E5 		ldr	r2, .L16+40
 113:lab.c         **** 	if (real_mocap.dX != 0.0)
 157              	r3, .L16+4	@ float
 158 00b0 78209FE5 		str	r3, [r2, #20]	@ float
 159 00b4 50309FE5 		.loc 1 114 0
 160 00b8 143082E5 		ldr	r2, .L16+40
 114:lab.c         **** 	{		
 161              		r3, .L16+4	@ float
 162 00bc 6C209FE5 		str	r3, [r2, #24]	@ float
 163 00c0 44309FE5 		.loc 1 115 0
 164 00c4 183082E5 		ldr	r2, .L16+40
 115:lab.c         **** 		initialize = 1;
 165              		r3, .L16+4	@ float
 166 00c8 60209FE5 		str	r3, [r2, #28]	@ float
 167 00cc 38309FE5 		.loc 1 118 0
 168 00d0 1C3082E5 		ldr	r3, .L16+36
 116:lab.c         **** 	}
 117:lab.c         **** 	}
 118:lab.c         **** 	else 
 169              		r3, [r3, #8]	@ float
 170 00d4 50309FE5 		mov	r0, r3
 171 00d8 083093E5 		ldr	r1, .L16+4	@ float
 172 00dc 0300A0E1 		bl	__nesf2
 173 00e0 24109FE5 		mov	r3, r0
 174 00e4 FEFFFFEB 		cmp	r3, #0
 175 00e8 0030A0E1 		bne	.L10
 176 00ec 000053E3 		b	.L15
 177 00f0 0000001A 	.L10:
 178 00f4 1C0100EA 		.loc 1 120 0
 179              		ldr	r2, .L16
 119:lab.c         **** 		// Update velocity estimate at 100 Hz
 120:lab.c         **** 		if (velocityEstHolder == 0)
 180              	
 181 00f8 08209FE5 		str	r3, [r2, #0]
 182 00fc 0130A0E3 		b	.L15
 183 0100 003082E5 	.L17:
 184 0104 180100EA 		.align	2
 185              	.L16:
 186              		.word	initialize
 187              		.word	0
 188 0108 00000000 		.word	1045220557
 189 010c 00000000 		.word	previousXMeas
 190 0110 CDCC4C3E 		.word	previousYMeas
 191 0114 00000000 		.word	previousZMeas
 192 0118 00000000 		.word	VelEstX
 193 011c 00000000 		.word	VelEstY
 194 0120 00000000 		.word	VelEstZ
 195 0124 00000000 		.word	real_mocap
 196 0128 00000000 		.word	mocap
 197 012c 00000000 		.word	velocityEstHolder
 198 0130 00000000 		.word	1065646817
 199 0134 00000000 		.word	1202590843
 200 0138 E17A843F 	.L6:
 201 013c 7B14AE47 		.loc 1 126 0
 202              		ldr	r3, .L16+44
 121:lab.c         **** {			
 122:lab.c         **** 			/*----- Low Pass Filtering -----*/
 123:lab.c         **** 			// Low Pass Filter Gain
 124:lab.c         **** 			float alpha = 0.2;
 125:lab.c         **** 
 126:lab.c         **** 			// Finite Difference Velocity Estimation
 203              		r3, #0
 204 0140 14301FE5 		bne	.L12
 205 0144 003093E5 	.LBB2:
 206 0148 000053E3 		.loc 1 130 0
 207 014c FA00001A 		ldr	r3, .L16+8	@ float
 208              		str	r3, [fp, #-36]	@ float
 127:lab.c         **** EstX = (real_mocap.dX - previousXMeas)/0.01;
 128:lab.c         **** 			VelEstY = (real_mocap.dY - previousYMeas)/0.01;
 129:lab.c         **** 			VelEstZ = (real_mocap.dZ - previousZMeas)/0.01;
 130:lab.c         **** 
 209              	1 133 0
 210 0150 48301FE5 		ldr	r3, .L16+36
 211 0154 24300BE5 		ldr	r2, [r3, #8]	@ float
 131:lab.c         **** / Save Current MoCap Measurement as Previous Measurement
 132:lab.c         **** 			previousXMeas = real_mocap.dX;
 133:lab.c         **** 			previousYMeas = real_mocap.dY;			
 212              	r	r3, .L16+12
 213 0158 34301FE5 		ldr	r3, [r3, #0]	@ float
 214 015c 082093E5 		mov	r0, r2
 215 0160 54301FE5 		mov	r1, r3
 216 0164 003093E5 		bl	__subsf3
 217 0168 0200A0E1 		mov	r3, r0
 218 016c 0310A0E1 		mov	r0, r3
 219 0170 FEFFFFEB 		bl	__extendsfdf2
 220 0174 0030A0E1 		mov	r3, r0
 221 0178 0300A0E1 		mov	r4, r1
 222 017c FEFFFFEB 		mov	r0, r3
 223 0180 0030A0E1 		mov	r1, r4
 224 0184 0140A0E1 		adr	r2, .L16+48
 225 0188 0300A0E1 		ldmia	r2, {r2-r3}
 226 018c 0410A0E1 		bl	__divdf3
 227 0190 60204FE2 		mov	r3, r0
 228 0194 0C0092E8 		mov	r4, r1
 229 0198 FEFFFFEB 		mov	r0, r3
 230 019c 0030A0E1 		mov	r1, r4
 231 01a0 0140A0E1 		bl	__truncdfsf2
 232 01a4 0300A0E1 		mov	r2, r0
 233 01a8 0410A0E1 		ldr	r3, .L16+24
 234 01ac FEFFFFEB 		str	r2, [r3, #0]	@ float
 235 01b0 0020A0E1 		.loc 1 134 0
 236 01b4 9C301FE5 		ldr	r3, .L16+36
 237 01b8 002083E5 		ldr	r2, [r3, #12]	@ float
 134:lab.c         **** previousZMeas = real_mocap.dZ;
 238              	[r3, #0]	@ float
 239 01bc 98301FE5 		mov	r0, r2
 240 01c0 0C2093E5 		mov	r1, r3
 241 01c4 B4301FE5 		bl	__subsf3
 242 01c8 003093E5 		mov	r3, r0
 243 01cc 0200A0E1 		mov	r0, r3
 244 01d0 0310A0E1 		bl	__extendsfdf2
 245 01d4 FEFFFFEB 		mov	r3, r0
 246 01d8 0030A0E1 		mov	r4, r1
 247 01dc 0300A0E1 		mov	r0, r3
 248 01e0 FEFFFFEB 		mov	r1, r4
 249 01e4 0030A0E1 		adr	r2, .L16+48
 250 01e8 0140A0E1 		ldmia	r2, {r2-r3}
 251 01ec 0300A0E1 		bl	__divdf3
 252 01f0 0410A0E1 		mov	r3, r0
 253 01f4 C4204FE2 		mov	r4, r1
 254 01f8 0C0092E8 		mov	r0, r3
 255 01fc FEFFFFEB 		mov	r1, r4
 256 0200 0030A0E1 		bl	__truncdfsf2
 257 0204 0140A0E1 		mov	r2, r0
 258 0208 0300A0E1 		ldr	r3, .L16+28
 259 020c 0410A0E1 		str	r2, [r3, #0]	@ float
 260 0210 FEFFFFEB 		.loc 1 135 0
 261 0214 0020A0E1 		ldr	r3, .L16+36
 262 0218 FC301FE5 		ldr	r2, [r3, #16]	@ float
 263 021c 002083E5 		ldr	r3, .L16+20
 135:lab.c         **** 			// Low Pass Filter
 264              		mov	r0, r2
 265 0220 FC301FE5 		mov	r1, r3
 266 0224 102093E5 		bl	__subsf3
 267 0228 14311FE5 		mov	r3, r0
 268 022c 003093E5 		mov	r0, r3
 269 0230 0200A0E1 		bl	__extendsfdf2
 270 0234 0310A0E1 		mov	r3, r0
 271 0238 FEFFFFEB 		mov	r4, r1
 272 023c 0030A0E1 		mov	r0, r3
 273 0240 0300A0E1 		mov	r1, r4
 274 0244 FEFFFFEB 		adr	r2, .L16+48
 275 0248 0030A0E1 		ldmia	r2, {r2-r3}
 276 024c 0140A0E1 		bl	__divdf3
 277 0250 0300A0E1 		mov	r3, r0
 278 0254 0410A0E1 		mov	r4, r1
 279 0258 4A2F4FE2 		mov	r0, r3
 280 025c 0C0092E8 		mov	r1, r4
 281 0260 FEFFFFEB 		bl	__truncdfsf2
 282 0264 0030A0E1 		mov	r2, r0
 283 0268 0140A0E1 		ldr	r3, .L16+32
 284 026c 0300A0E1 		str	r2, [r3, #0]	@ float
 285 0270 0410A0E1 		.loc 1 138 0
 286 0274 FEFFFFEB 		ldr	r3, .L16+36
 287 0278 0020A0E1 		ldr	r2, [r3, #8]	@ float
 288 027c 5C311FE5 		ldr	r3, .L16+12
 289 0280 002083E5 		str	r2, [r3, #0]	@ float
 136:lab.c         **** 		mocap.dVx = alpha*VelEstX+(1.0-alpha)*mocap.dVx;
 137:lab.c         **** 			mocap.dVy = alpha*VelEstY+(1.0-alpha)*mocap.dVy;
 138:lab.c         **** 			mocap.dVz = alpha*VelEstZ+(1.0-alpha)*mocap.dVz;
 290              	6+36
 291 0284 60311FE5 		ldr	r2, [r3, #12]	@ float
 292 0288 082093E5 		ldr	r3, .L16+16
 293 028c 80311FE5 		str	r2, [r3, #0]	@ float
 294 0290 002083E5 		.loc 1 140 0
 139:lab.c         **** 	// Set Position
 295              	r3, .L16+36
 296 0294 70311FE5 		ldr	r2, [r3, #16]	@ float
 297 0298 0C2093E5 		ldr	r3, .L16+20
 298 029c 8C311FE5 		str	r2, [r3, #0]	@ float
 299 02a0 002083E5 		.loc 1 143 0
 140:lab.c         **** 		mocap.dX = real_mocap.dX;
 300              	r3, .L16+24
 301 02a4 80311FE5 		ldr	r3, [r3, #0]	@ float
 302 02a8 102093E5 		mov	r0, r3
 303 02ac 98311FE5 		ldr	r1, [fp, #-36]	@ float
 304 02b0 002083E5 		bl	__mulsf3
 141:lab.c         **** 		mocap.dY = real_mocap.dY;
 142:lab.c         **** 			mocap.dZ = real_mocap.dZ;
 143:lab.c         **** 			
 305              	r3, r0
 306 02b4 9C311FE5 		mov	r0, r3
 307 02b8 003093E5 		bl	__extendsfdf2
 308 02bc 0300A0E1 		mov	r7, r0
 309 02c0 24101BE5 		mov	r8, r1
 310 02c4 FEFFFFEB 		ldr	r0, [fp, #-36]	@ float
 311 02c8 0030A0E1 		bl	__extendsfdf2
 312 02cc 0300A0E1 		mov	r3, r0
 313 02d0 FEFFFFEB 		mov	r4, r1
 314 02d4 0070A0E1 		mov	r0, #1069547520
 315 02d8 0180A0E1 		add	r0, r0, #3145728
 316 02dc 24001BE5 		mov	r1, #0
 317 02e0 FEFFFFEB 		mov	r2, r3
 318 02e4 0030A0E1 		mov	r3, r4
 319 02e8 0140A0E1 		bl	__subdf3
 320 02ec FF05A0E3 		mov	r3, r0
 321 02f0 030680E2 		mov	r4, r1
 322 02f4 0010A0E3 		mov	r5, r3
 323 02f8 0320A0E1 		mov	r6, r4
 324 02fc 0430A0E1 		ldr	r3, .L16+40
 325 0300 FEFFFFEB 		ldr	r3, [r3, #20]	@ float
 326 0304 0030A0E1 		mov	r0, r3
 327 0308 0140A0E1 		bl	__extendsfdf2
 328 030c 0350A0E1 		mov	r3, r0
 329 0310 0460A0E1 		mov	r4, r1
 330 0314 EC311FE5 		mov	r0, r5
 331 0318 143093E5 		mov	r1, r6
 332 031c 0300A0E1 		mov	r2, r3
 333 0320 FEFFFFEB 		mov	r3, r4
 334 0324 0030A0E1 		bl	__muldf3
 335 0328 0140A0E1 		mov	r3, r0
 336 032c 0500A0E1 		mov	r4, r1
 337 0330 0610A0E1 		mov	r0, r7
 338 0334 0320A0E1 		mov	r1, r8
 339 0338 0430A0E1 		mov	r2, r3
 340 033c FEFFFFEB 		mov	r3, r4
 341 0340 0030A0E1 		bl	__adddf3
 342 0344 0140A0E1 		mov	r3, r0
 343 0348 0700A0E1 		mov	r4, r1
 344 034c 0810A0E1 		mov	r0, r3
 345 0350 0320A0E1 		mov	r1, r4
 346 0354 0430A0E1 		bl	__truncdfsf2
 347 0358 FEFFFFEB 		mov	r2, r0
 348 035c 0030A0E1 		ldr	r3, .L16+40
 349 0360 0140A0E1 		str	r2, [r3, #20]	@ float
 350 0364 0300A0E1 		.loc 1 144 0
 351 0368 0410A0E1 		ldr	r3, .L16+28
 352 036c FEFFFFEB 		ldr	r3, [r3, #0]	@ float
 353 0370 0020A0E1 		mov	r0, r3
 354 0374 4C321FE5 		ldr	r1, [fp, #-36]	@ float
 355 0378 142083E5 		bl	__mulsf3
 144:lab.c         **** /*--- End Low Pass Filtering ---*/
 356              	r0
 357 037c 60321FE5 		mov	r8, r1
 358 0380 003093E5 		ldr	r0, [fp, #-36]	@ float
 359 0384 0300A0E1 		bl	__extendsfdf2
 360 0388 24101BE5 		mov	r3, r0
 361 038c FEFFFFEB 		mov	r4, r1
 362 0390 0030A0E1 		mov	r0, #1069547520
 363 0394 0300A0E1 		add	r0, r0, #3145728
 364 0398 FEFFFFEB 		mov	r1, #0
 365 039c 0070A0E1 		mov	r2, r3
 366 03a0 0180A0E1 		mov	r3, r4
 367 03a4 24001BE5 		bl	__subdf3
 368 03a8 FEFFFFEB 		mov	r3, r0
 369 03ac 0030A0E1 		mov	r4, r1
 370 03b0 0140A0E1 		mov	r5, r3
 371 03b4 FF05A0E3 		mov	r6, r4
 372 03b8 030680E2 		ldr	r3, .L16+40
 373 03bc 0010A0E3 		ldr	r3, [r3, #24]	@ float
 374 03c0 0320A0E1 		mov	r0, r3
 375 03c4 0430A0E1 		bl	__extendsfdf2
 376 03c8 FEFFFFEB 		mov	r3, r0
 377 03cc 0030A0E1 		mov	r4, r1
 378 03d0 0140A0E1 		mov	r0, r5
 379 03d4 0350A0E1 		mov	r1, r6
 380 03d8 0460A0E1 		mov	r2, r3
 381 03dc B4321FE5 		mov	r3, r4
 382 03e0 183093E5 		bl	__muldf3
 383 03e4 0300A0E1 		mov	r3, r0
 384 03e8 FEFFFFEB 		mov	r4, r1
 385 03ec 0030A0E1 		mov	r0, r7
 386 03f0 0140A0E1 		mov	r1, r8
 387 03f4 0500A0E1 		mov	r2, r3
 388 03f8 0610A0E1 		mov	r3, r4
 389 03fc 0320A0E1 		bl	__adddf3
 390 0400 0430A0E1 		mov	r3, r0
 391 0404 FEFFFFEB 		mov	r4, r1
 392 0408 0030A0E1 		mov	r0, r3
 393 040c 0140A0E1 		mov	r1, r4
 394 0410 0700A0E1 		bl	__truncdfsf2
 395 0414 0810A0E1 		mov	r2, r0
 396 0418 0320A0E1 		ldr	r3, .L16+40
 397 041c 0430A0E1 		str	r2, [r3, #24]	@ float
 398 0420 FEFFFFEB 		.loc 1 145 0
 399 0424 0030A0E1 		ldr	r3, .L16+32
 400 0428 0140A0E1 		ldr	r3, [r3, #0]	@ float
 401 042c 0300A0E1 		mov	r0, r3
 402 0430 0410A0E1 		ldr	r1, [fp, #-36]	@ float
 403 0434 FEFFFFEB 		bl	__mulsf3
 404 0438 0020A0E1 		mov	r3, r0
 405 043c 14331FE5 		mov	r0, r3
 406 0440 182083E5 		bl	__extendsfdf2
 145:lab.c         **** 	}
 407              	
 408 0444 24331FE5 		bl	__extendsfdf2
 409 0448 003093E5 		mov	r3, r0
 410 044c 0300A0E1 		mov	r4, r1
 411 0450 24101BE5 		mov	r0, #1069547520
 412 0454 FEFFFFEB 		add	r0, r0, #3145728
 413 0458 0030A0E1 		mov	r1, #0
 414 045c 0300A0E1 		mov	r2, r3
 415 0460 FEFFFFEB 		mov	r3, r4
 416 0464 0070A0E1 		bl	__subdf3
 417 0468 0180A0E1 		mov	r3, r0
 418 046c 24001BE5 		mov	r4, r1
 419 0470 FEFFFFEB 		mov	r5, r3
 420 0474 0030A0E1 		mov	r6, r4
 421 0478 0140A0E1 		ldr	r3, .L16+40
 422 047c FF05A0E3 		ldr	r3, [r3, #28]	@ float
 423 0480 030680E2 		mov	r0, r3
 424 0484 0010A0E3 		bl	__extendsfdf2
 425 0488 0320A0E1 		mov	r3, r0
 426 048c 0430A0E1 		mov	r4, r1
 427 0490 FEFFFFEB 		mov	r0, r5
 428 0494 0030A0E1 		mov	r1, r6
 429 0498 0140A0E1 		mov	r2, r3
 430 049c 0350A0E1 		mov	r3, r4
 431 04a0 0460A0E1 		bl	__muldf3
 432 04a4 7C331FE5 		mov	r3, r0
 433 04a8 1C3093E5 		mov	r4, r1
 434 04ac 0300A0E1 		mov	r0, r7
 435 04b0 FEFFFFEB 		mov	r1, r8
 436 04b4 0030A0E1 		mov	r2, r3
 437 04b8 0140A0E1 		mov	r3, r4
 438 04bc 0500A0E1 		bl	__adddf3
 439 04c0 0610A0E1 		mov	r3, r0
 440 04c4 0320A0E1 		mov	r4, r1
 441 04c8 0430A0E1 		mov	r0, r3
 442 04cc FEFFFFEB 		mov	r1, r4
 443 04d0 0030A0E1 		bl	__truncdfsf2
 444 04d4 0140A0E1 		mov	r2, r0
 445 04d8 0700A0E1 		ldr	r3, .L16+40
 446 04dc 0810A0E1 		str	r2, [r3, #28]	@ float
 447 04e0 0320A0E1 		.loc 1 148 0
 448 04e4 0430A0E1 		ldr	r3, .L16+36
 449 04e8 FEFFFFEB 		ldr	r2, [r3, #8]	@ float
 450 04ec 0030A0E1 		ldr	r3, .L16+40
 451 04f0 0140A0E1 		str	r2, [r3, #8]	@ float
 452 04f4 0300A0E1 		.loc 1 149 0
 453 04f8 0410A0E1 		ldr	r3, .L16+36
 454 04fc FEFFFFEB 		ldr	r2, [r3, #12]	@ float
 455 0500 0020A0E1 		ldr	r3, .L16+40
 456 0504 DC331FE5 		str	r2, [r3, #12]	@ float
 457 0508 1C2083E5 		.loc 1 150 0
 146:lab.c         **** 	
 147:lab.c         **** 		// Handling to update velocity estimate at 100 Hz
 148:lab.c         **** 		velocityEstHolder++;
 458              	3, .L16+40
 459 050c E8331FE5 		str	r2, [r3, #16]	@ float
 460 0510 082093E5 	.L12:
 461 0514 EC331FE5 	.LBE2:
 462 0518 082083E5 		.loc 1 156 0
 149:lab.c         **** f (velocityEstHolder == 10)
 463              	r3, .L16+44
 464 051c F8331FE5 		ldr	r3, [r3, #0]
 465 0520 0C2093E5 		add	r2, r3, #1
 466 0524 FC331FE5 		ldr	r3, .L16+44
 467 0528 0C2083E5 		str	r2, [r3, #0]
 150:lab.c         **** 	{
 468              	 1 157 0
 469 052c 08341FE5 		ldr	r3, .L16+44
 470 0530 102093E5 		ldr	r3, [r3, #0]
 471 0534 0C341FE5 		cmp	r3, #10
 472 0538 102083E5 		bne	.L15
 473              		.loc 1 159 0
 474              		ldr	r2, .L16+44
 151:lab.c         **** 		velocityEstHolder = 0;
 152:lab.c         **** 		}
 153:lab.c         **** 	}
 154:lab.c         **** }
 155:lab.c         **** /*-------- End Velocity Estimator --------*/
 156:lab.c         **** 
 475              	, #0
 476 053c 10341FE5 		str	r3, [r2, #0]
 477 0540 003093E5 	.L15:
 478 0544 012083E2 		.loc 1 162 0
 479 0548 1C341FE5 		sub	sp, fp, #32
 480 054c 002083E5 		ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, lr}
 157:lab.c         **** BEEN EDITTED BUT NO LONGER USING THIS
 481              	
 482 0550 24341FE5 	.LFE3:
 484 0558 0A0053E3 		.global	__addsf3
 485 055c 0200001A 		.global	__floatsisf
 158:lab.c         **** *-------------- Controller --------------*/
 159:lab.c         **** /*-------------- Lab 3 --------------*/
 486              	obal	__gtsf2
 487 0560 34241FE5 		.global	__ltsf2
 488 0564 0030A0E3 		.align	2
 489 0568 003082E5 		.global	lab3
 160:lab.c         **** id lab3() {
 161:lab.c         **** 	
 162:lab.c         **** 	// Error Update (for integral control)	
 491              	
 492 056c 20D04BE2 	.LFB4:
 493 0570 F0699DE8 		.loc 1 168 0
 494 0574 1EFF2FE1 		@ Function supports interworking.
 495              		@ args = 0, pretend = 0, frame = 80
 496              		@ frame_needed = 1, uses_anonymous_args = 0
 497              		mov	ip, sp
 498              	.LCFI7:
 499              		stmfd	sp!, {r4, r5, r6, fp, ip, lr, pc}
 500              	.LCFI8:
 501              		sub	fp, ip, #4
 502              	.LCFI9:
 503              		sub	sp, sp, #80
 504              	.LCFI10:
 505              		.loc 1 171 0
 163:lab.c         ****  (takeoff2 == 1) {
 164:lab.c         **** 		if (IntegralHolder == 0) {
 165:lab.c         **** 			errorcum[0] = (x_nom[0]-mocap.dX)*0.02 + errorcum[0];
 166:lab.c         **** 			errorcum[1] = (x_nom[1]-mocap.dY)*0.02 + errorcum[1];
 167:lab.c         **** 			errorcum[2] = (x_nom[2]-mocap.dZ)*0.02 + errorcum[2];
 168:lab.c         **** 		}
 506              	8
 507              		ldr	r3, [r3, #0]
 508              		cmp	r3, #1
 509              		bne	.L19
 510 0578 0DC0A0E1 		.loc 1 172 0
 511              		ldr	r3, .L43+12
 512 057c 70D82DE9 		ldr	r3, [r3, #0]
 513              		cmp	r3, #0
 514 0580 04B04CE2 		bne	.L21
 515              		.loc 1 173 0
 516 0584 50D04DE2 		ldr	r3, .L43+16
 517              		ldr	r2, [r3, #0]	@ float
 169:lab.c         **** egralHolder++;
 170:lab.c         **** 		if (IntegralHolder == 10) {
 171:lab.c         **** 			IntegralHolder = 0;
 518              	3+20
 519 0588 54349FE5 		ldr	r3, [r3, #8]	@ float
 520 058c 003093E5 		mov	r0, r2
 521 0590 010053E3 		mov	r1, r3
 522 0594 8700001A 		bl	__subsf3
 172:lab.c         **** 
 523              	r3, r0
 524 0598 48349FE5 		mov	r0, r3
 525 059c 003093E5 		bl	__extendsfdf2
 526 05a0 000053E3 		mov	r3, r0
 527 05a4 7700001A 		mov	r4, r1
 173:lab.c         **** 	}
 528              	r0, r3
 529 05a8 3C349FE5 		mov	r1, r4
 530 05ac 002093E5 		adr	r2, .L43
 531 05b0 38349FE5 		ldmia	r2, {r2-r3}
 532 05b4 083093E5 		bl	__muldf3
 533 05b8 0200A0E1 		mov	r3, r0
 534 05bc 0310A0E1 		mov	r4, r1
 535 05c0 FEFFFFEB 		mov	r5, r3
 536 05c4 0030A0E1 		mov	r6, r4
 537 05c8 0300A0E1 		ldr	r3, .L43+120
 538 05cc FEFFFFEB 		ldr	r3, [r3, #0]	@ float
 539 05d0 0030A0E1 		mov	r0, r3
 540 05d4 0140A0E1 		bl	__extendsfdf2
 541 05d8 0300A0E1 		mov	r3, r0
 542 05dc 0410A0E1 		mov	r4, r1
 543 05e0 FD2F8FE2 		mov	r0, r5
 544 05e4 0C0092E8 		mov	r1, r6
 545 05e8 FEFFFFEB 		mov	r2, r3
 546 05ec 0030A0E1 		mov	r3, r4
 547 05f0 0140A0E1 		bl	__adddf3
 548 05f4 0350A0E1 		mov	r3, r0
 549 05f8 0460A0E1 		mov	r4, r1
 550 05fc 50349FE5 		mov	r0, r3
 551 0600 003093E5 		mov	r1, r4
 552 0604 0300A0E1 		bl	__truncdfsf2
 553 0608 FEFFFFEB 		mov	r2, r0
 554 060c 0030A0E1 		ldr	r3, .L43+120
 555 0610 0140A0E1 		str	r2, [r3, #0]	@ float
 556 0614 0500A0E1 		.loc 1 174 0
 557 0618 0610A0E1 		ldr	r3, .L43+16
 558 061c 0320A0E1 		ldr	r2, [r3, #4]	@ float
 559 0620 0430A0E1 		ldr	r3, .L43+20
 560 0624 FEFFFFEB 		ldr	r3, [r3, #12]	@ float
 561 0628 0030A0E1 		mov	r0, r2
 562 062c 0140A0E1 		mov	r1, r3
 563 0630 0300A0E1 		bl	__subsf3
 564 0634 0410A0E1 		mov	r3, r0
 565 0638 FEFFFFEB 		mov	r0, r3
 566 063c 0020A0E1 		bl	__extendsfdf2
 567 0640 0C349FE5 		mov	r3, r0
 568 0644 002083E5 		mov	r4, r1
 174:lab.c         **** 
 569              	mia	r2, {r2-r3}
 570 0648 9C339FE5 		bl	__muldf3
 571 064c 042093E5 		mov	r3, r0
 572 0650 98339FE5 		mov	r4, r1
 573 0654 0C3093E5 		mov	r5, r3
 574 0658 0200A0E1 		mov	r6, r4
 575 065c 0310A0E1 		ldr	r3, .L43+120
 576 0660 FEFFFFEB 		ldr	r3, [r3, #4]	@ float
 577 0664 0030A0E1 		mov	r0, r3
 578 0668 0300A0E1 		bl	__extendsfdf2
 579 066c FEFFFFEB 		mov	r3, r0
 580 0670 0030A0E1 		mov	r4, r1
 581 0674 0140A0E1 		mov	r0, r5
 582 0678 0300A0E1 		mov	r1, r6
 583 067c 0410A0E1 		mov	r2, r3
 584 0680 D52F8FE2 		mov	r3, r4
 585 0684 0C0092E8 		bl	__adddf3
 586 0688 FEFFFFEB 		mov	r3, r0
 587 068c 0030A0E1 		mov	r4, r1
 588 0690 0140A0E1 		mov	r0, r3
 589 0694 0350A0E1 		mov	r1, r4
 590 0698 0460A0E1 		bl	__truncdfsf2
 591 069c B0339FE5 		mov	r2, r0
 592 06a0 043093E5 		ldr	r3, .L43+120
 593 06a4 0300A0E1 		str	r2, [r3, #4]	@ float
 594 06a8 FEFFFFEB 		.loc 1 175 0
 595 06ac 0030A0E1 		ldr	r3, .L43+16
 596 06b0 0140A0E1 		ldr	r2, [r3, #8]	@ float
 597 06b4 0500A0E1 		ldr	r3, .L43+20
 598 06b8 0610A0E1 		ldr	r3, [r3, #16]	@ float
 599 06bc 0320A0E1 		mov	r0, r2
 600 06c0 0430A0E1 		mov	r1, r3
 601 06c4 FEFFFFEB 		bl	__subsf3
 602 06c8 0030A0E1 		mov	r3, r0
 603 06cc 0140A0E1 		mov	r0, r3
 604 06d0 0300A0E1 		bl	__extendsfdf2
 605 06d4 0410A0E1 		mov	r3, r0
 606 06d8 FEFFFFEB 		mov	r4, r1
 607 06dc 0020A0E1 		mov	r0, r3
 608 06e0 6C339FE5 		mov	r1, r4
 609 06e4 042083E5 		adr	r2, .L43
 175:lab.c         **** 	// OUTER LOOP
 610              	r0
 611 06e8 FC329FE5 		mov	r4, r1
 612 06ec 082093E5 		mov	r5, r3
 613 06f0 F8329FE5 		mov	r6, r4
 614 06f4 103093E5 		ldr	r3, .L43+120
 615 06f8 0200A0E1 		ldr	r3, [r3, #8]	@ float
 616 06fc 0310A0E1 		mov	r0, r3
 617 0700 FEFFFFEB 		bl	__extendsfdf2
 618 0704 0030A0E1 		mov	r3, r0
 619 0708 0300A0E1 		mov	r4, r1
 620 070c FEFFFFEB 		mov	r0, r5
 621 0710 0030A0E1 		mov	r1, r6
 622 0714 0140A0E1 		mov	r2, r3
 623 0718 0300A0E1 		mov	r3, r4
 624 071c 0410A0E1 		bl	__adddf3
 625 0720 AD2F8FE2 		mov	r3, r0
 626 0724 0C0092E8 		mov	r4, r1
 627 0728 FEFFFFEB 		mov	r0, r3
 628 072c 0030A0E1 		mov	r1, r4
 629 0730 0140A0E1 		bl	__truncdfsf2
 630 0734 0350A0E1 		mov	r2, r0
 631 0738 0460A0E1 		ldr	r3, .L43+120
 632 073c 10339FE5 		str	r2, [r3, #8]	@ float
 633 0740 083093E5 	.L21:
 634 0744 0300A0E1 		.loc 1 178 0
 635 0748 FEFFFFEB 		ldr	r3, .L43+12
 636 074c 0030A0E1 		ldr	r3, [r3, #0]
 637 0750 0140A0E1 		add	r2, r3, #1
 638 0754 0500A0E1 		ldr	r3, .L43+12
 639 0758 0610A0E1 		str	r2, [r3, #0]
 640 075c 0320A0E1 		.loc 1 179 0
 641 0760 0430A0E1 		ldr	r3, .L43+12
 642 0764 FEFFFFEB 		ldr	r3, [r3, #0]
 643 0768 0030A0E1 		cmp	r3, #10
 644 076c 0140A0E1 		bne	.L19
 645 0770 0300A0E1 		.loc 1 180 0
 646 0774 0410A0E1 		ldr	r2, .L43+12
 647 0778 FEFFFFEB 		mov	r3, #0
 648 077c 0020A0E1 		str	r3, [r2, #0]
 649 0780 CC329FE5 	.L19:
 650 0784 082083E5 		.loc 1 188 0
 651              		ldr	r3, .L43+24	@ float
 176:lab.c         **** 	// Hummingbird
 177:lab.c         **** 	
 178:lab.c         **** 	float Kp_x = -0.1952;
 652              	
 653 0788 58329FE5 		ldr	r3, .L43+28	@ float
 654 078c 003093E5 		str	r3, [fp, #-100]	@ float
 655 0790 012083E2 		.loc 1 190 0
 656 0794 4C329FE5 		ldr	r3, .L43+32	@ float
 657 0798 002083E5 		str	r3, [fp, #-96]	@ float
 179:lab.c         **** oat Kd_x = -0.2446;
 658              	 1 191 0
 659 079c 44329FE5 		ldr	r3, .L43+36	@ float
 660 07a0 003093E5 		str	r3, [fp, #-92]	@ float
 661 07a4 0A0053E3 		.loc 1 192 0
 662 07a8 0200001A 		ldr	r3, .L43+40	@ float
 180:lab.c         **** float Ki_x = 0.0;
 663              	r3, [fp, #-88]	@ float
 664 07ac 34229FE5 		.loc 1 193 0
 665 07b0 0030A0E3 		ldr	r3, .L43+32	@ float
 666 07b4 003082E5 		str	r3, [fp, #-84]	@ float
 667              		.loc 1 194 0
 181:lab.c         **** float Kp_y = 0.1952;
 182:lab.c         **** 	float Kd_y = 0.2446;
 183:lab.c         **** 	float Ki_y = 0.0;
 184:lab.c         **** 	float Kp_z = -4.3112;
 185:lab.c         **** 	float Kd_z = -2.4473;
 186:lab.c         **** 	float Ki_z = 0.0;
 187:lab.c         **** 
 188:lab.c         **** 	//USonic Gains
 668              	r3, .L43+44	@ float
 669 07b8 34329FE5 		str	r3, [fp, #-80]	@ float
 670 07bc 68300BE5 		.loc 1 195 0
 189:lab.c         **** _Kp_z = -4.3112;
 671              	r	r3, .L43+48	@ float
 672 07c0 30329FE5 		str	r3, [fp, #-76]	@ float
 673 07c4 64300BE5 		.loc 1 196 0
 190:lab.c         **** float U_Kd_z = 0.0;//-2.4473;
 674              	r	r3, .L43+32	@ float
 675 07c8 2C329FE5 		str	r3, [fp, #-72]	@ float
 676 07cc 60300BE5 		.loc 1 199 0
 191:lab.c         **** float U_Ki_z = 0.0;
 677              	r	r3, .L43+44	@ float
 678 07d0 28329FE5 		str	r3, [fp, #-68]	@ float
 679 07d4 5C300BE5 		.loc 1 200 0
 192:lab.c         **** 	// Outer Loop PD
 680              	r	r3, .L43+32	@ float
 681 07d8 24329FE5 		str	r3, [fp, #-64]	@ float
 682 07dc 58300BE5 		.loc 1 201 0
 193:lab.c         **** float a_x;
 683              	r	r3, .L43+32	@ float
 684 07e0 14329FE5 		str	r3, [fp, #-60]	@ float
 685 07e4 54300BE5 		.loc 1 206 0
 194:lab.c         **** float a_y;
 686              	r	r3, .L43+16
 687 07e8 18329FE5 		ldr	r2, [r3, #0]	@ float
 688 07ec 50300BE5 		ldr	r3, .L43+20
 195:lab.c         **** a_x = Kp_x*(x_nom[0]-mocap.dX)-Kd_x*mocap.dVx+Ki_x*errorcum[0];
 689              	r	r3, [r3, #8]	@ float
 690 07f0 14329FE5 		mov	r0, r2
 691 07f4 4C300BE5 		mov	r1, r3
 196:lab.c         **** a_y = Kp_y*(x_nom[1]-mocap.dY)-Kd_y*mocap.dVy+Ki_y*errorcum[1];
 692              		__subsf3
 693 07f8 FC319FE5 		mov	r3, r0
 694 07fc 48300BE5 		mov	r0, r3
 197:lab.c         **** pitch_desired = 0;//a_x*cos(real_mocap.dThetaz)-a_y*sin(real_mocap.dThetaz);
 198:lab.c         **** 	roll_desired = 0;//a_x*sin(real_mocap.dThetaz)+a_y*cos(real_mocap.dThetaz);
 199:lab.c         **** 	yaw_desired = 0;//x_nom[3];
 695              	r	r1, [fp, #-104]	@ float
 696 0800 00329FE5 		bl	__mulsf3
 697 0804 44300BE5 		mov	r3, r0
 200:lab.c         **** t_u[3] = U_Kp_z*(x_nom[2]-USMaxBot_range1)-U_Kd_z*(USMaxBot_range1 - USMaxBot_range1_old)*1000+mass
 698              	v	r4, r3
 699 0808 EC319FE5 		ldr	r3, .L43+20
 700 080c 40300BE5 		ldr	r3, [r3, #20]	@ float
 201:lab.c         **** USMaxBot_range1_old = USMaxBot_range1;
 701              	v	r0, r3
 702 0810 E4319FE5 		ldr	r1, [fp, #-100]	@ float
 703 0814 3C300BE5 		bl	__mulsf3
 202:lab.c         **** // INNER LOOP
 203:lab.c         **** 		// Hummingbird
 204:lab.c         **** 	float Ktx_P = 1.0;
 205:lab.c         **** 	float Ktx_D = 0.3;
 206:lab.c         **** 	float Kty_P = 1.0;	
 704              	v	r3, r0
 705 0818 CC319FE5 		mov	r0, r4
 706 081c 002093E5 		mov	r1, r3
 707 0820 C8319FE5 		bl	__subsf3
 708 0824 083093E5 		mov	r3, r0
 709 0828 0200A0E1 		mov	r4, r3
 710 082c 0310A0E1 		ldr	r3, .L43+120
 711 0830 FEFFFFEB 		ldr	r3, [r3, #0]	@ float
 712 0834 0030A0E1 		mov	r0, r3
 713 0838 0300A0E1 		ldr	r1, [fp, #-96]	@ float
 714 083c 68101BE5 		bl	__mulsf3
 715 0840 FEFFFFEB 		mov	r3, r0
 716 0844 0030A0E1 		mov	r0, r4
 717 0848 0340A0E1 		mov	r1, r3
 718 084c 9C319FE5 		bl	__addsf3
 719 0850 143093E5 		mov	r3, r0
 720 0854 0300A0E1 		str	r3, [fp, #-56]	@ float
 721 0858 64101BE5 		.loc 1 207 0
 722 085c FEFFFFEB 		ldr	r3, .L43+16
 723 0860 0030A0E1 		ldr	r2, [r3, #4]	@ float
 724 0864 0400A0E1 		ldr	r3, .L43+20
 725 0868 0310A0E1 		ldr	r3, [r3, #12]	@ float
 726 086c FEFFFFEB 		mov	r0, r2
 727 0870 0030A0E1 		mov	r1, r3
 728 0874 0340A0E1 		bl	__subsf3
 729 0878 D4319FE5 		mov	r3, r0
 730 087c 003093E5 		mov	r0, r3
 731 0880 0300A0E1 		ldr	r1, [fp, #-92]	@ float
 732 0884 60101BE5 		bl	__mulsf3
 733 0888 FEFFFFEB 		mov	r3, r0
 734 088c 0030A0E1 		mov	r4, r3
 735 0890 0400A0E1 		ldr	r3, .L43+20
 736 0894 0310A0E1 		ldr	r3, [r3, #24]	@ float
 737 0898 FEFFFFEB 		mov	r0, r3
 738 089c 0030A0E1 		ldr	r1, [fp, #-88]	@ float
 739 08a0 38300BE5 		bl	__mulsf3
 207:lab.c         **** t Kty_D = 0.3;	
 740              		bl	__subsf3
 741 08a4 40319FE5 		mov	r3, r0
 742 08a8 042093E5 		mov	r4, r3
 743 08ac 3C319FE5 		ldr	r3, .L43+120
 744 08b0 0C3093E5 		ldr	r3, [r3, #4]	@ float
 745 08b4 0200A0E1 		mov	r0, r3
 746 08b8 0310A0E1 		ldr	r1, [fp, #-84]	@ float
 747 08bc FEFFFFEB 		bl	__mulsf3
 748 08c0 0030A0E1 		mov	r3, r0
 749 08c4 0300A0E1 		mov	r0, r4
 750 08c8 5C101BE5 		mov	r1, r3
 751 08cc FEFFFFEB 		bl	__addsf3
 752 08d0 0030A0E1 		mov	r3, r0
 753 08d4 0340A0E1 		str	r3, [fp, #-52]	@ float
 754 08d8 10319FE5 		.loc 1 208 0
 755 08dc 183093E5 		ldr	r2, .L43+88
 756 08e0 0300A0E1 		ldr	r3, .L43+32	@ float
 757 08e4 58101BE5 		str	r3, [r2, #0]	@ float
 758 08e8 FEFFFFEB 		.loc 1 209 0
 759 08ec 0030A0E1 		ldr	r2, .L43+84
 760 08f0 0400A0E1 		ldr	r3, .L43+32	@ float
 761 08f4 0310A0E1 		str	r3, [r2, #0]	@ float
 762 08f8 FEFFFFEB 		.loc 1 210 0
 763 08fc 0030A0E1 		ldr	r2, .L43+92
 764 0900 0340A0E1 		ldr	r3, .L43+32	@ float
 765 0904 48319FE5 		str	r3, [r2, #0]	@ float
 766 0908 043093E5 		.loc 1 211 0
 767 090c 0300A0E1 		ldr	r3, .L43+16
 768 0910 54101BE5 		ldr	r4, [r3, #8]	@ float
 769 0914 FEFFFFEB 		ldr	r3, .L43+60
 770 0918 0030A0E1 		ldr	r3, [r3, #0]
 771 091c 0400A0E1 		mov	r0, r3
 772 0920 0310A0E1 		bl	__floatsisf
 773 0924 FEFFFFEB 		mov	r3, r0
 774 0928 0030A0E1 		mov	r0, r4
 775 092c 34300BE5 		mov	r1, r3
 208:lab.c         **** float Ktz_P = 0.08;	
 776              	
 777 0930 FC209FE5 		ldr	r1, [fp, #-68]	@ float
 778 0934 C0309FE5 		bl	__mulsf3
 779 0938 003082E5 		mov	r3, r0
 209:lab.c         **** float Ktz_D = 0.04;
 780              	v	r4, r3
 781 093c EC209FE5 		ldr	r3, .L43+60
 782 0940 B4309FE5 		ldr	r2, [r3, #0]
 783 0944 003082E5 		ldr	r3, .L43+64
 210:lab.c         **** 	
 784              		r3, [r3, #0]
 785 0948 E8209FE5 		rsb	r3, r3, r2
 786 094c A8309FE5 		mov	r0, r3
 787 0950 003082E5 		bl	__floatsisf
 211:lab.c         **** 
 788              		r3, r0
 789 0954 90309FE5 		mov	r0, r3
 790 0958 084093E5 		ldr	r1, [fp, #-64]	@ float
 791 095c B4309FE5 		bl	__mulsf3
 792 0960 003093E5 		mov	r3, r0
 793 0964 0300A0E1 		mov	r0, r3
 794 0968 FEFFFFEB 		ldr	r1, .L43+52	@ float
 795 096c 0030A0E1 		bl	__mulsf3
 796 0970 0400A0E1 		mov	r3, r0
 797 0974 0310A0E1 		mov	r0, r4
 798 0978 FEFFFFEB 		b	.L44
 799 097c 0030A0E1 	.L45:
 800 0980 0300A0E1 		.align	2
 801 0984 44101BE5 	.L43:
 802 0988 FEFFFFEB 		.word	1066695393
 803 098c 0030A0E1 		.word	1202590843
 804 0990 0340A0E1 		.word	takeoff2
 805 0994 7C309FE5 		.word	IntegralHolder
 806 0998 002093E5 		.word	x_nom
 807 099c 78309FE5 		.word	mocap
 808 09a0 003093E5 		.word	-1102585214
 809 09a4 023063E0 		.word	-1099270036
 810 09a8 0300A0E1 		.word	0
 811 09ac FEFFFFEB 		.word	1044898434
 812 09b0 0030A0E1 		.word	1048213612
 813 09b4 0300A0E1 		.word	-1064700582
 814 09b8 40101BE5 		.word	-1071865712
 815 09bc FEFFFFEB 		.word	-998637568
 816 09c0 0030A0E1 		.word	mass
 817 09c4 0300A0E1 		.word	USMaxBot_range1
 818 09c8 40109FE5 		.word	USMaxBot_range1_old
 819 09cc FEFFFFEB 		.word	1065353216
 820 09d0 0030A0E1 		.word	1050253722
 821 09d4 0400A0E1 		.word	1034147594
 822 09d8 210000EA 		.word	1025758986
 823              		.word	roll_desired
 824              		.word	pitch_desired
 825              		.word	yaw_desired
 826 09dc E17A943F 		.word	imusensor
 827 09e0 7B14AE47 		.word	cnt_u
 828 09e4 00000000 		.word	u
 829 09e8 00000000 		.word	1063256064
 830 09ec 00000000 		.word	-1084227584
 831 09f0 00000000 		.word	1075838976
 832 09f4 82E247BE 		.word	errorcum
 833 09f8 6C787ABE 		.word	-1071644672
 834 09fc 00000000 		.word	1076076216
 835 0a00 82E2473E 		.word	1374389535
 836 0a04 6C787A3E 	.L44:
 837 0a08 5AF589C0 		mov	r1, r3
 838 0a0c 90A01CC0 		bl	__addsf3
 839 0a10 00007AC4 		mov	r3, r0
 840 0a14 00000000 		mov	r0, r3
 841 0a18 00000000 		bl	__extendsfdf2
 842 0a1c 00000000 		mov	r5, r0
 843 0a20 0000803F 		mov	r6, r1
 844 0a24 9A99993E 		ldr	r3, .L43+56
 845 0a28 0AD7A33D 		ldr	r3, [r3, #0]	@ float
 846 0a2c 0AD7233D 		mov	r0, r3
 847 0a30 00000000 		bl	__extendsfdf2
 848 0a34 00000000 		mov	r3, r0
 849 0a38 00000000 		mov	r4, r1
 850 0a3c 00000000 		mov	r0, r3
 851 0a40 00000000 		mov	r1, r4
 852 0a44 00000000 		adr	r2, .L43+128
 853 0a48 0000603F 		ldmia	r2, {r2-r3}
 854 0a4c 000060BF 		bl	__muldf3
 855 0a50 00002040 		mov	r3, r0
 856 0a54 00000000 		mov	r4, r1
 857 0a58 000020C0 		mov	r0, r5
 858 0a5c B89E2340 		mov	r1, r6
 859 0a60 1F85EB51 		mov	r2, r3
 860              		mov	r3, r4
 861 0a64 0310A0E1 		bl	__adddf3
 862 0a68 FEFFFFEB 		mov	r3, r0
 863 0a6c 0030A0E1 		mov	r4, r1
 864 0a70 0300A0E1 		mov	r5, r3
 865 0a74 FEFFFFEB 		mov	r6, r4
 866 0a78 0050A0E1 		ldr	r3, .L43+120
 867 0a7c 0160A0E1 		ldr	r3, [r3, #8]	@ float
 868 0a80 74301FE5 		mov	r0, r3
 869 0a84 003093E5 		ldr	r1, [fp, #-60]	@ float
 870 0a88 0300A0E1 		bl	__mulsf3
 871 0a8c FEFFFFEB 		mov	r3, r0
 872 0a90 0030A0E1 		mov	r0, r3
 873 0a94 0140A0E1 		bl	__extendsfdf2
 874 0a98 0300A0E1 		mov	r3, r0
 875 0a9c 0410A0E1 		mov	r4, r1
 876 0aa0 4C204FE2 		mov	r0, r5
 877 0aa4 0C0092E8 		mov	r1, r6
 878 0aa8 FEFFFFEB 		mov	r2, r3
 879 0aac 0030A0E1 		mov	r3, r4
 880 0ab0 0140A0E1 		bl	__adddf3
 881 0ab4 0500A0E1 		mov	r3, r0
 882 0ab8 0610A0E1 		mov	r4, r1
 883 0abc 0320A0E1 		mov	r0, r3
 884 0ac0 0430A0E1 		mov	r1, r4
 885 0ac4 FEFFFFEB 		bl	__truncdfsf2
 886 0ac8 0030A0E1 		mov	r2, r0
 887 0acc 0140A0E1 		ldr	r3, .L43+100
 888 0ad0 0350A0E1 		str	r2, [r3, #12]	@ float
 889 0ad4 0460A0E1 		.loc 1 212 0
 890 0ad8 8C301FE5 		ldr	r3, .L43+60
 891 0adc 083093E5 		ldr	r2, [r3, #0]
 892 0ae0 0300A0E1 		ldr	r3, .L43+64
 893 0ae4 3C101BE5 		str	r2, [r3, #0]
 894 0ae8 FEFFFFEB 		.loc 1 215 0
 895 0aec 0030A0E1 		ldr	r3, .L43+68	@ float
 896 0af0 0300A0E1 		str	r3, [fp, #-48]	@ float
 897 0af4 FEFFFFEB 		.loc 1 216 0
 898 0af8 0030A0E1 		ldr	r3, .L43+72	@ float
 899 0afc 0140A0E1 		str	r3, [fp, #-44]	@ float
 900 0b00 0500A0E1 		.loc 1 217 0
 901 0b04 0610A0E1 		ldr	r3, .L43+68	@ float
 902 0b08 0320A0E1 		str	r3, [fp, #-40]	@ float
 903 0b0c 0430A0E1 		.loc 1 218 0
 904 0b10 FEFFFFEB 		ldr	r3, .L43+72	@ float
 905 0b14 0030A0E1 		str	r3, [fp, #-36]	@ float
 906 0b18 0140A0E1 		.loc 1 219 0
 907 0b1c 0300A0E1 		ldr	r3, .L43+76	@ float
 908 0b20 0410A0E1 		str	r3, [fp, #-32]	@ float
 909 0b24 FEFFFFEB 		.loc 1 220 0
 910 0b28 0020A0E1 		ldr	r3, .L43+80	@ float
 911 0b2c F4301FE5 		str	r3, [fp, #-28]	@ float
 912 0b30 0C2083E5 		.loc 1 225 0
 212:lab.c         **** 	// Inner Loop PD
 913              	ov	r3, r0
 914 0b34 24311FE5 		mov	r0, r3
 915 0b38 002093E5 		ldr	r1, [fp, #-48]	@ float
 916 0b3c 28311FE5 		bl	__mulsf3
 917 0b40 002083E5 		mov	r3, r0
 213:lab.c         **** cnt_u[0] = Ktx_P*(roll_desired-imusensor.dThetax)-Ktx_D*(imusensor.dOmegax);
 214:lab.c         **** 	cnt_u[1] = Kty_P*(pitch_desired-imusensor.dThetay)-Kty_D*(imusensor.dOmegay);
 215:lab.c         **** 		// Yaw Control with out Compass/MoCap correction
 918              	r4, r3
 919 0b44 2C311FE5 		ldr	r3, .L43+96
 920 0b48 30300BE5 		ldr	r3, [r3, #28]	@ float
 216:lab.c         **** t_u[2] = Ktz_P*(yaw_desired-imusensor.dThetaz)-Ktz_D*(imusensor.dOmegaz);
 921              	v	r0, r3
 922 0b4c 30311FE5 		ldr	r1, [fp, #-44]	@ float
 923 0b50 2C300BE5 		bl	__mulsf3
 217:lab.c         **** 	// For Keeping data
 924              	v	r3, r0
 925 0b54 3C311FE5 		mov	r0, r4
 926 0b58 28300BE5 		mov	r1, r3
 218:lab.c         **** u.u1 = cnt_u[0];
 927              		__subsf3
 928 0b5c 40311FE5 		mov	r3, r0
 929 0b60 24300BE5 		mov	r2, r3
 219:lab.c         **** u.u2 = cnt_u[1];
 930              	r	r3, .L43+100
 931 0b64 44311FE5 		str	r2, [r3, #0]	@ float
 932 0b68 20300BE5 		.loc 1 226 0
 220:lab.c         **** u.u3 = cnt_u[2];
 933              	r	r3, .L43+88
 934 0b6c 48311FE5 		ldr	r2, [r3, #0]	@ float
 935 0b70 1C300BE5 		ldr	r3, .L43+96
 221:lab.c         **** u.u4 = cnt_u[3];
 222:lab.c         **** 
 223:lab.c         **** 	// Integral anti-windup
 224:lab.c         **** 		// x-position anti-windup
 225:lab.c         **** 	if (errorcum[0] > 0.875) {
 936              	r	r3, [r3, #8]	@ float
 937 0b74 4C311FE5 		mov	r0, r2
 938 0b78 002093E5 		mov	r1, r3
 939 0b7c 48311FE5 		bl	__subsf3
 940 0b80 043093E5 		mov	r3, r0
 941 0b84 0200A0E1 		mov	r0, r3
 942 0b88 0310A0E1 		ldr	r1, [fp, #-40]	@ float
 943 0b8c FEFFFFEB 		bl	__mulsf3
 944 0b90 0030A0E1 		mov	r3, r0
 945 0b94 0300A0E1 		mov	r4, r3
 946 0b98 30101BE5 		ldr	r3, .L43+96
 947 0b9c FEFFFFEB 		ldr	r3, [r3, #32]	@ float
 948 0ba0 0030A0E1 		mov	r0, r3
 949 0ba4 0340A0E1 		ldr	r1, [fp, #-36]	@ float
 950 0ba8 74311FE5 		bl	__mulsf3
 951 0bac 1C3093E5 		mov	r3, r0
 952 0bb0 0300A0E1 		mov	r0, r4
 953 0bb4 2C101BE5 		mov	r1, r3
 954 0bb8 FEFFFFEB 		bl	__subsf3
 955 0bbc 0030A0E1 		mov	r3, r0
 956 0bc0 0400A0E1 		mov	r2, r3
 957 0bc4 0310A0E1 		ldr	r3, .L43+100
 958 0bc8 FEFFFFEB 		str	r2, [r3, #4]	@ float
 959 0bcc 0030A0E1 		.loc 1 228 0
 960 0bd0 0320A0E1 		ldr	r3, .L43+92
 961 0bd4 9C311FE5 		ldr	r2, [r3, #0]	@ float
 962 0bd8 002083E5 		ldr	r3, .L43+96
 226:lab.c         **** orcum[0] = 0.875;
 963              		mov	r0, r2
 964 0bdc B0311FE5 		mov	r1, r3
 965 0be0 002093E5 		bl	__subsf3
 966 0be4 B0311FE5 		mov	r3, r0
 967 0be8 083093E5 		mov	r0, r3
 968 0bec 0200A0E1 		ldr	r1, [fp, #-32]	@ float
 969 0bf0 0310A0E1 		bl	__mulsf3
 970 0bf4 FEFFFFEB 		mov	r3, r0
 971 0bf8 0030A0E1 		mov	r4, r3
 972 0bfc 0300A0E1 		ldr	r3, .L43+96
 973 0c00 28101BE5 		ldr	r3, [r3, #36]	@ float
 974 0c04 FEFFFFEB 		mov	r0, r3
 975 0c08 0030A0E1 		ldr	r1, [fp, #-28]	@ float
 976 0c0c 0340A0E1 		bl	__mulsf3
 977 0c10 DC311FE5 		mov	r3, r0
 978 0c14 203093E5 		mov	r0, r4
 979 0c18 0300A0E1 		mov	r1, r3
 980 0c1c 24101BE5 		bl	__subsf3
 981 0c20 FEFFFFEB 		mov	r3, r0
 982 0c24 0030A0E1 		mov	r2, r3
 983 0c28 0400A0E1 		ldr	r3, .L43+100
 984 0c2c 0310A0E1 		str	r2, [r3, #8]	@ float
 985 0c30 FEFFFFEB 		.loc 1 231 0
 986 0c34 0030A0E1 		ldr	r3, .L43+100
 987 0c38 0320A0E1 		ldr	r2, [r3, #0]	@ float
 988 0c3c 04321FE5 		ldr	r3, .L43+104
 989 0c40 042083E5 		str	r2, [r3, #0]	@ float
 227:lab.c         **** }	
 228:lab.c         **** 	else if (errorcum[0] < -0.875) {
 990              	+100
 991 0c44 14321FE5 		ldr	r2, [r3, #4]	@ float
 992 0c48 002093E5 		ldr	r3, .L43+104
 993 0c4c 18321FE5 		str	r2, [r3, #4]	@ float
 994 0c50 0C3093E5 		.loc 1 233 0
 995 0c54 0200A0E1 		ldr	r3, .L43+100
 996 0c58 0310A0E1 		ldr	r2, [r3, #8]	@ float
 997 0c5c FEFFFFEB 		ldr	r3, .L43+104
 998 0c60 0030A0E1 		str	r2, [r3, #8]	@ float
 999 0c64 0300A0E1 		.loc 1 234 0
 1000 0c68 20101BE5 		ldr	r3, .L43+100
 1001 0c6c FEFFFFEB 		ldr	r2, [r3, #12]	@ float
 1002 0c70 0030A0E1 		ldr	r3, .L43+104
 1003 0c74 0340A0E1 		str	r2, [r3, #12]	@ float
 1004 0c78 44321FE5 		.loc 1 238 0
 1005 0c7c 243093E5 		ldr	r3, .L43+120
 1006 0c80 0300A0E1 		ldr	r3, [r3, #0]	@ float
 1007 0c84 1C101BE5 		mov	r0, r3
 1008 0c88 FEFFFFEB 		ldr	r1, .L43+108	@ float
 1009 0c8c 0030A0E1 		bl	__gtsf2
 1010 0c90 0400A0E1 		mov	r3, r0
 1011 0c94 0310A0E1 		cmp	r3, #0
 1012 0c98 FEFFFFEB 		bgt	.L26
 1013 0c9c 0030A0E1 		b	.L24
 1014 0ca0 0320A0E1 	.L26:
 1015 0ca4 6C321FE5 		.loc 1 239 0
 1016 0ca8 082083E5 		ldr	r2, .L43+120
 229:lab.c         **** errorcum[0] = -0.875;
 230:lab.c         **** 	}
 231:lab.c         **** 
 1017              	str	r3, [r2, #0]	@ float
 1018 0cac 74321FE5 		b	.L27
 1019 0cb0 002093E5 	.L24:
 1020 0cb4 78321FE5 		.loc 1 241 0
 1021 0cb8 002083E5 		ldr	r3, .L43+120
 232:lab.c         **** / y-position anti-windup
 1022              	r3, [r3, #0]	@ float
 1023 0cbc 84321FE5 		mov	r0, r3
 1024 0cc0 042093E5 		ldr	r1, .L43+112	@ float
 1025 0cc4 88321FE5 		bl	__ltsf2
 1026 0cc8 042083E5 		mov	r3, r0
 233:lab.c         **** if (errorcum[1] > 0.875) {
 1027              	r3, #0
 1028 0ccc 94321FE5 		blt	.L29
 1029 0cd0 082093E5 		b	.L27
 1030 0cd4 98321FE5 	.L29:
 1031 0cd8 082083E5 		.loc 1 242 0
 234:lab.c         **** 	errorcum[1] = 0.875;
 1032              	r2, .L43+120
 1033 0cdc A4321FE5 		ldr	r3, .L43+112	@ float
 1034 0ce0 0C2093E5 		str	r3, [r2, #0]	@ float
 1035 0ce4 A8321FE5 	.L27:
 1036 0ce8 0C2083E5 		.loc 1 246 0
 235:lab.c         **** }
 236:lab.c         **** 	else if (errorcum[1] < -0.875) {
 237:lab.c         **** 		errorcum[1] = -0.875;
 238:lab.c         **** 	}
 1037              	r3, .L43+120
 1038 0cec A0321FE5 		ldr	r3, [r3, #4]	@ float
 1039 0cf0 003093E5 		mov	r0, r3
 1040 0cf4 0300A0E1 		ldr	r1, .L43+108	@ float
 1041 0cf8 B8121FE5 		bl	__gtsf2
 1042 0cfc FEFFFFEB 		mov	r3, r0
 1043 0d00 0030A0E1 		cmp	r3, #0
 1044 0d04 000053E3 		bgt	.L32
 1045 0d08 000000CA 		b	.L30
 1046 0d0c 030000EA 	.L32:
 1047              		.loc 1 247 0
 239:lab.c         **** / z-position anti-windup
 1048              	43+120
 1049 0d10 C4221FE5 		ldr	r3, .L43+108	@ float
 1050 0d14 D4321FE5 		str	r3, [r2, #4]	@ float
 1051 0d18 003082E5 		b	.L33
 1052 0d1c 0B0000EA 	.L30:
 1053              		.loc 1 249 0
 240:lab.c         **** if (errorcum[2] > 2.5) {
 241:lab.c         **** 		errorcum[2] = 2.5;
 1054              	3, .L43+120
 1055 0d20 D4321FE5 		ldr	r3, [r3, #4]	@ float
 1056 0d24 003093E5 		mov	r0, r3
 1057 0d28 0300A0E1 		ldr	r1, .L43+112	@ float
 1058 0d2c E8121FE5 		bl	__ltsf2
 1059 0d30 FEFFFFEB 		mov	r3, r0
 1060 0d34 0030A0E1 		cmp	r3, #0
 1061 0d38 000053E3 		blt	.L35
 1062 0d3c 000000BA 		b	.L33
 1063 0d40 020000EA 	.L35:
 1064              		.loc 1 250 0
 242:lab.c         **** 
 1065              	43+120
 1066 0d44 F8221FE5 		ldr	r3, .L43+112	@ float
 1067 0d48 04331FE5 		str	r3, [r2, #4]	@ float
 1068 0d4c 003082E5 	.L33:
 1069              		.loc 1 254 0
 243:lab.c         **** 	else if (errorcum[2] < -2.5) {
 244:lab.c         **** 		errorcum[2] = -2.5;
 245:lab.c         **** 	}
 246:lab.c         **** }	
 1070              	r3, .L43+120
 1071 0d50 04331FE5 		ldr	r3, [r3, #8]	@ float
 1072 0d54 043093E5 		mov	r0, r3
 1073 0d58 0300A0E1 		ldr	r1, .L43+116	@ float
 1074 0d5c 1C131FE5 		bl	__gtsf2
 1075 0d60 FEFFFFEB 		mov	r3, r0
 1076 0d64 0030A0E1 		cmp	r3, #0
 1077 0d68 000053E3 		bgt	.L38
 1078 0d6c 000000CA 		b	.L36
 1079 0d70 030000EA 	.L38:
 1080              		.loc 1 255 0
 247:lab.c         **** ---------- End Lab 3 ------------*/
 1081              	43+120
 1082 0d74 28231FE5 		ldr	r3, .L43+116	@ float
 1083 0d78 38331FE5 		str	r3, [r2, #8]	@ float
 1084 0d7c 043082E5 		b	.L42
 1085 0d80 0B0000EA 	.L36:
 1086              		.loc 1 257 0
 248:lab.c         **** /*-------------- Lab 2 --------------*/
 249:lab.c         **** void lab2() {
 1087              	3, .L43+120
 1088 0d84 38331FE5 		ldr	r3, [r3, #8]	@ float
 1089 0d88 043093E5 		mov	r0, r3
 1090 0d8c 0300A0E1 		ldr	r1, .L43+124	@ float
 1091 0d90 4C131FE5 		bl	__ltsf2
 1092 0d94 FEFFFFEB 		mov	r3, r0
 1093 0d98 0030A0E1 		cmp	r3, #0
 1094 0d9c 000053E3 		blt	.L41
 1095 0da0 000000BA 		b	.L42
 1096 0da4 020000EA 	.L41:
 1097              		.loc 1 258 0
 250:lab.c         **** 	// Desired	
 1098              	43+120
 1099 0da8 5C231FE5 		ldr	r3, .L43+124	@ float
 1100 0dac 68331FE5 		str	r3, [r2, #8]	@ float
 1101 0db0 043082E5 	.L42:
 1102              		.loc 1 260 0
 251:lab.c         **** pitch_desired = 0.0;
 252:lab.c         **** 	
 253:lab.c         **** 	// INNER LOOP
 254:lab.c         **** 		// Hummingbird
 1103              	sp, fp, #24
 1104 0db4 68331FE5 		ldmfd	sp, {r4, r5, r6, fp, sp, lr}
 1105 0db8 083093E5 		bx	lr
 1106 0dbc 0300A0E1 	.LFE4:
 1108 0dc4 FEFFFFEB 		.align	2
 1109 0dc8 0030A0E1 		.global	lab2
 1111 0dd0 000000CA 	lab2:
 1112 0dd4 030000EA 	.LFB5:
 1113              		.loc 1 264 0
 255:lab.c         **** at Ktx_P = 1.0;	// Proportional Roll
 1114              	 supports interworking.
 1115 0dd8 8C231FE5 		@ args = 0, pretend = 0, frame = 24
 1116 0ddc 94331FE5 		@ frame_needed = 1, uses_anonymous_args = 0
 1117 0de0 083082E5 		mov	ip, sp
 1118 0de4 0B0000EA 	.LCFI11:
 1119              		stmfd	sp!, {r4, fp, ip, lr, pc}
 256:lab.c         **** float Ktx_D = 0.3;	// Derivative Roll
 257:lab.c         **** 	float Kty_P = 1.0;	// Proportional Pitch
 1120              	2:
 1121 0de8 9C331FE5 		sub	fp, ip, #4
 1122 0dec 083093E5 	.LCFI13:
 1123 0df0 0300A0E1 		sub	sp, sp, #24
 1124 0df4 A4131FE5 	.LCFI14:
 1125 0df8 FEFFFFEB 		.loc 1 267 0
 1126 0dfc 0030A0E1 		ldr	r2, .L48
 1127 0e00 000053E3 		ldr	r3, .L48+4	@ float
 1128 0e04 000000BA 		str	r3, [r2, #0]	@ float
 1129 0e08 020000EA 		.loc 1 271 0
 1130              		ldr	r3, .L48+8	@ float
 258:lab.c         **** loat Kty_D = 0.3;	// Derivative Pitch
 1131              	p, #-40]	@ float
 1132 0e0c C0231FE5 		.loc 1 272 0
 1133 0e10 C0331FE5 		ldr	r3, .L48+12	@ float
 1134 0e14 083082E5 		str	r3, [fp, #-36]	@ float
 1135              		.loc 1 273 0
 259:lab.c         **** float Ktz_P = 0.08;	// Proportional Yaw
 260:lab.c         **** 	float Ktz_D = 0.04;	// Derivative Yaw
 1136              	r3, .L48+8	@ float
 1137 0e18 18D04BE2 		str	r3, [fp, #-32]	@ float
 1138 0e1c 70689DE8 		.loc 1 274 0
 1139 0e20 1EFF2FE1 		ldr	r3, .L48+12	@ float
 1140              		str	r3, [fp, #-28]	@ float
 1141              		.loc 1 275 0
 1142              		ldr	r3, .L48+16	@ float
 1143              		str	r3, [fp, #-24]	@ float
 1144              		.loc 1 276 0
 1145              		ldr	r3, .L48+20	@ float
 1146              		str	r3, [fp, #-20]	@ float
 261:lab.c         **** 
 262:lab.c         **** 	// Inner Loop PD 
 263:lab.c         **** 	// Note: Lab 2 only tests Pitch control. Do not uncomment roll and yaw lines.
 264:lab.c         **** 	cnt_u[0] = 0.0; // Ktx_P*(roll_desired-imusensor.dThetax)-Ktx_D*(imusensor.dOmegax);
 1147              	 0
 1148              		ldr	r2, .L48+24
 1149              		ldr	r3, .L48+4	@ float
 1150              		str	r3, [r2, #0]	@ float
 1151 0e24 0DC0A0E1 		.loc 1 281 0
 1152              		ldr	r3, .L48
 1153 0e28 10D82DE9 		ldr	r2, [r3, #0]	@ float
 1154              		ldr	r3, .L48+28
 1155 0e2c 04B04CE2 		ldr	r3, [r3, #8]	@ float
 1156              		mov	r0, r2
 1157 0e30 18D04DE2 		mov	r1, r3
 1158              		bl	__subsf3
 265:lab.c         **** t_u[1] = Kty_P*(pitch_desired-imusensor.dThetay)-Kty_D*(imusensor.dOmegay);
 266:lab.c         **** 	cnt_u[2] = 0.0;//Ktz_P*(yaw_desired-imusensor.dThetaz)-Ktz_D*(imusensor.dOmegaz);
 267:lab.c         **** 
 1159              		mov	r0, r3
 1160 0e34 00219FE5 		ldr	r1, [fp, #-32]	@ float
 1161 0e38 00319FE5 		bl	__mulsf3
 1162 0e3c 003082E5 		mov	r3, r0
 268:lab.c         ****  For Keeping data
 269:lab.c         **** 	u.u1 = cnt_u[0];
 270:lab.c         **** 	u.u2 = cnt_u[1];
 271:lab.c         **** 	u.u3 = cnt_u[2];
 1163              		r4, r3
 1164 0e40 FC309FE5 		ldr	r3, .L48+28
 1165 0e44 28300BE5 		ldr	r3, [r3, #32]	@ float
 272:lab.c         **** 4 = cnt_u[3];
 1166              	v	r0, r3
 1167 0e48 F8309FE5 		ldr	r1, [fp, #-28]	@ float
 1168 0e4c 24300BE5 		bl	__mulsf3
 273:lab.c         **** nsor.dOmegaz);
 1169              	v	r3, r0
 1170 0e50 EC309FE5 		mov	r0, r4
 1171 0e54 20300BE5 		mov	r1, r3
 274:lab.c         **** 	// For Keeping data
 1172              		__subsf3
 1173 0e58 E8309FE5 		mov	r3, r0
 1174 0e5c 1C300BE5 		mov	r2, r3
 275:lab.c         **** u.u1 = cnt_u[0];
 1175              	r	r3, .L48+24
 1176 0e60 E4309FE5 		str	r2, [r3, #4]	@ float
 1177 0e64 18300BE5 		.loc 1 282 0
 276:lab.c         **** u.u2 = cnt_u[1];
 1178              	r	r2, .L48+24
 1179 0e68 E0309FE5 		ldr	r3, .L48+4	@ float
 1180 0e6c 14300BE5 		str	r3, [r2, #8]	@ float
 277:lab.c         **** esired-imusensor.dThetaz)-Ktz_D*(imusensor.dOmegaz);
 278:lab.c         **** 
 279:lab.c         **** 	// For Keeping data
 280:lab.c         **** 	u.u1 = cnt_u[0];
 1181              	oc 1 285 0
 1182 0e70 DC209FE5 		ldr	r3, .L48+24
 1183 0e74 C4309FE5 		ldr	r2, [r3, #0]	@ float
 1184 0e78 003082E5 		ldr	r3, .L48+32
 281:lab.c         **** 2 = cnt_u[1];
 1185              		r2, [r3, #0]	@ float
 1186 0e7c B8309FE5 		.loc 1 286 0
 1187 0e80 002093E5 		ldr	r3, .L48+24
 1188 0e84 CC309FE5 		ldr	r2, [r3, #4]	@ float
 1189 0e88 083093E5 		ldr	r3, .L48+32
 1190 0e8c 0200A0E1 		str	r2, [r3, #4]	@ float
 1191 0e90 0310A0E1 		.loc 1 287 0
 1192 0e94 FEFFFFEB 		ldr	r3, .L48+24
 1193 0e98 0030A0E1 		ldr	r2, [r3, #8]	@ float
 1194 0e9c 0300A0E1 		ldr	r3, .L48+32
 1195 0ea0 20101BE5 		str	r2, [r3, #8]	@ float
 1196 0ea4 FEFFFFEB 		.loc 1 288 0
 1197 0ea8 0030A0E1 		ldr	r3, .L48+24
 1198 0eac 0340A0E1 		ldr	r2, [r3, #12]	@ float
 1199 0eb0 A0309FE5 		ldr	r3, .L48+32
 1200 0eb4 203093E5 		str	r2, [r3, #12]	@ float
 1201 0eb8 0300A0E1 		.loc 1 289 0
 1202 0ebc 1C101BE5 		sub	sp, fp, #16
 1203 0ec0 FEFFFFEB 		ldmfd	sp, {r4, fp, sp, lr}
 1204 0ec4 0030A0E1 		bx	lr
 1205 0ec8 0400A0E1 	.L49:
 1206 0ecc 0310A0E1 		.align	2
 1207 0ed0 FEFFFFEB 	.L48:
 1208 0ed4 0030A0E1 		.word	pitch_desired
 1209 0ed8 0320A0E1 		.word	0
 1210 0edc 70309FE5 		.word	1065353216
 1211 0ee0 042083E5 		.word	1050253722
 282:lab.c         **** esired-imusensor.dThetaz)-Ktz_D*(imusensor.dOmegaz);
 1212              	25758986
 1213 0ee4 68209FE5 		.word	cnt_u
 1214 0ee8 50309FE5 		.word	imusensor
 1215 0eec 083082E5 		.word	u
 283:lab.c         **** 	// For Keeping data
 284:lab.c         **** 	u.u1 = cnt_u[0];
 285:lab.c         **** 	u.u2 = cnt_u[1];
 1216              	5:
 1218 0ef4 002093E5 		.global	__fixunssfsi
 1219 0ef8 5C309FE5 		.align	2
 1220 0efc 002083E5 		.global	Command
 286:lab.c         **** u3 = cnt_u[2];
 1221              	e	Command, %function
 1222 0f00 4C309FE5 	Command:
 1223 0f04 042093E5 	.LFB6:
 1224 0f08 4C309FE5 		.loc 1 294 0
 1225 0f0c 042083E5 		@ Function supports interworking.
 287:lab.c         **** hetaz)-Ktz_D*(imusensor.dOmegaz);
 1226              	gs = 0, pretend = 0, frame = 16
 1227 0f10 3C309FE5 		@ frame_needed = 1, uses_anonymous_args = 0
 1228 0f14 082093E5 		mov	ip, sp
 1229 0f18 3C309FE5 	.LCFI15:
 1230 0f1c 082083E5 		stmfd	sp!, {r4, r5, r6, fp, ip, lr, pc}
 288:lab.c         **** 	// For Keeping data
 1231              	16:
 1232 0f20 2C309FE5 		sub	fp, ip, #4
 1233 0f24 0C2093E5 	.LCFI17:
 1234 0f28 2C309FE5 		sub	sp, sp, #24
 1235 0f2c 0C2083E5 	.LCFI18:
 289:lab.c         **** u.u1 = cnt_u[0];
 1236              	 1 296 0
 1237 0f30 10D04BE2 		ldr	r2, .L67+16
 1238 0f34 10689DE8 		mov	r3, #0
 1239 0f38 1EFF2FE1 		strb	r3, [r2, #0]
 1240              		.loc 1 302 0
 1241              		ldr	r2, .L67+16
 1242              		mov	r3, #1
 1243 0f3c 00000000 		strb	r3, [r2, #1]
 1244 0f40 00000000 		.loc 1 308 0
 1245 0f44 0000803F 		ldr	r3, .L67+20
 1246 0f48 9A99993E 		ldr	r3, [r3, #0]	@ float
 1247 0f4c 0AD7A33D 		mov	r0, r3
 1248 0f50 0AD7233D 		bl	__extendsfdf2
 1249 0f54 00000000 		mov	r3, r0
 1250 0f58 00000000 		mov	r4, r1
 1251 0f5c 00000000 		mov	r0, r3
 1252              		mov	r1, r4
 1253              		mov	r2, r3
 1254              		mov	r3, r4
 1255              		bl	__adddf3
 1256              		mov	r3, r0
 1257              		mov	r4, r1
 1258              		mov	r5, r3
 1259              		mov	r6, r4
 290:lab.c         **** u.u2 = cnt_u[1];
 291:lab.c         **** 	u.u3 = cnt_u[2];
 292:lab.c         **** 	u.u4 = cnt_u[3];
 293:lab.c         **** }
 294:lab.c         **** /*------------ End Lab 2 ------------*/
 1260              	, [r3, #0]	@ float
 1261              		mov	r0, r3
 1262              		bl	__extendsfdf2
 1263              		mov	r3, r0
 1264 0f60 0DC0A0E1 		mov	r4, r1
 1265              		mov	r0, r5
 1266 0f64 70D82DE9 		mov	r1, r6
 1267              		mov	r2, r3
 1268 0f68 04B04CE2 		mov	r3, r4
 1269              		bl	__muldf3
 1270 0f6c 18D04DE2 		mov	r3, r0
 1271              		mov	r4, r1
 295:lab.c         ****  cnt_u[0];
 296:lab.c         **** 	u.u2 = cnt_u[1];
 1272              	69547520
 1273 0f70 FC249FE5 		add	r0, r0, #3145728
 1274 0f74 0030A0E3 		mov	r1, #0
 1275 0f78 0030C2E5 		mov	r2, r3
 297:lab.c         **** esired-imusensor.dThetaz)-Ktz_D*(imusensor.dOmegaz);
 298:lab.c         **** 
 299:lab.c         **** 	// For Keeping data
 300:lab.c         **** 	u.u1 = cnt_u[0];
 301:lab.c         **** 	u.u2 = cnt_u[1];
 302:lab.c         **** 	u.u3 = cnt_u[2];
 1276              		r3, r4
 1277 0f7c F0249FE5 		bl	__divdf3
 1278 0f80 0130A0E3 		mov	r3, r0
 1279 0f84 0130C2E5 		mov	r4, r1
 303:lab.c         **** = cnt_u[3];
 304:lab.c         **** }
 305:lab.c         **** /*------------ End Lab 2 ------------*/
 306:lab.c         **** /*------------ End Controller ------------*/
 307:lab.c         **** 
 308:lab.c         **** /*---------------- Command ---------------*/
 1280              		r0, r3
 1281 0f88 E8349FE5 		mov	r1, r4
 1282 0f8c 003093E5 		bl	__truncdfsf2
 1283 0f90 0300A0E1 		mov	r3, r0
 1284 0f94 FEFFFFEB 		str	r3, [fp, #-40]	@ float
 1285 0f98 0030A0E1 		.loc 1 309 0
 1286 0f9c 0140A0E1 		ldr	r3, .L67+24
 1287 0fa0 0300A0E1 		ldr	r3, [r3, #0]	@ float
 1288 0fa4 0410A0E1 		mov	r0, r3
 1289 0fa8 0320A0E1 		bl	__extendsfdf2
 1290 0fac 0430A0E1 		mov	r3, r0
 1291 0fb0 FEFFFFEB 		mov	r4, r1
 1292 0fb4 0030A0E1 		mov	r0, r3
 1293 0fb8 0140A0E1 		mov	r1, r4
 1294 0fbc 0350A0E1 		mov	r2, #1073741824
 1295 0fc0 0460A0E1 		add	r2, r2, #1048576
 1296 0fc4 B0349FE5 		mov	r3, #0
 1297 0fc8 003093E5 		bl	__muldf3
 1298 0fcc 0300A0E1 		mov	r3, r0
 1299 0fd0 FEFFFFEB 		mov	r4, r1
 1300 0fd4 0030A0E1 		mov	r0, #1069547520
 1301 0fd8 0140A0E1 		add	r0, r0, #3145728
 1302 0fdc 0500A0E1 		mov	r1, #0
 1303 0fe0 0610A0E1 		mov	r2, r3
 1304 0fe4 0320A0E1 		mov	r3, r4
 1305 0fe8 0430A0E1 		bl	__divdf3
 1306 0fec FEFFFFEB 		mov	r3, r0
 1307 0ff0 0030A0E1 		mov	r4, r1
 1308 0ff4 0140A0E1 		mov	r0, r3
 1309 0ff8 FF05A0E3 		mov	r1, r4
 1310 0ffc 030680E2 		bl	__truncdfsf2
 1311 1000 0010A0E3 		mov	r3, r0
 1312 1004 0320A0E1 		str	r3, [fp, #-36]	@ float
 1313 1008 0430A0E1 		.loc 1 310 0
 1314 100c FEFFFFEB 		ldr	r3, .L67+28
 1315 1010 0030A0E1 		ldr	r3, [r3, #0]	@ float
 1316 1014 0140A0E1 		mov	r0, r3
 1317 1018 0300A0E1 		bl	__extendsfdf2
 1318 101c 0410A0E1 		mov	r3, r0
 1319 1020 FEFFFFEB 		mov	r4, r1
 1320 1024 0030A0E1 		mov	r0, r3
 1321 1028 28300BE5 		mov	r1, r4
 309:lab.c         **** ----------*/
 1322              	
 1323 102c 48349FE5 		mov	r3, #0
 1324 1030 003093E5 		bl	__muldf3
 1325 1034 0300A0E1 		mov	r3, r0
 1326 1038 FEFFFFEB 		mov	r4, r1
 1327 103c 0030A0E1 		mov	r0, #1069547520
 1328 1040 0140A0E1 		add	r0, r0, #3145728
 1329 1044 0300A0E1 		mov	r1, #0
 1330 1048 0410A0E1 		mov	r2, r3
 1331 104c 0121A0E3 		mov	r3, r4
 1332 1050 012682E2 		bl	__divdf3
 1333 1054 0030A0E3 		mov	r3, r0
 1334 1058 FEFFFFEB 		mov	r4, r1
 1335 105c 0030A0E1 		mov	r0, r3
 1336 1060 0140A0E1 		mov	r1, r4
 1337 1064 FF05A0E3 		bl	__truncdfsf2
 1338 1068 030680E2 		mov	r3, r0
 1339 106c 0010A0E3 		str	r3, [fp, #-32]	@ float
 1340 1070 0320A0E1 		.loc 1 312 0
 1341 1074 0430A0E1 		ldr	r2, .L67+32
 1342 1078 FEFFFFEB 		ldr	r3, .L67+36	@ float
 1343 107c 0030A0E1 		str	r3, [r2, #0]	@ float
 1344 1080 0140A0E1 		.loc 1 313 0
 1345 1084 0300A0E1 		ldr	r2, .L67+32
 1346 1088 0410A0E1 		ldr	r3, [fp, #-40]	@ float
 1347 108c FEFFFFEB 		str	r3, [r2, #4]	@ float
 1348 1090 0030A0E1 		.loc 1 314 0
 1349 1094 24300BE5 		ldr	r3, [fp, #-32]
 310:lab.c         ****  cnt_u[0];
 1350              	ldr	r3, .L67+32
 1351 1098 E0339FE5 		str	r2, [r3, #8]	@ float
 1352 109c 003093E5 		.loc 1 315 0
 1353 10a0 0300A0E1 		ldr	r2, .L67+32
 1354 10a4 FEFFFFEB 		ldr	r3, [fp, #-36]	@ float
 1355 10a8 0030A0E1 		str	r3, [r2, #12]	@ float
 1356 10ac 0140A0E1 		.loc 1 316 0
 1357 10b0 0300A0E1 		ldr	r3, [fp, #-40]
 1358 10b4 0410A0E1 		eor	r2, r3, #-2147483648
 1359 10b8 0121A0E3 		ldr	r3, .L67+32
 1360 10bc 012682E2 		str	r2, [r3, #16]	@ float
 1361 10c0 0030A0E3 		.loc 1 317 0
 1362 10c4 FEFFFFEB 		ldr	r2, .L67+32
 1363 10c8 0030A0E1 		ldr	r3, .L67+36	@ float
 1364 10cc 0140A0E1 		str	r3, [r2, #20]	@ float
 1365 10d0 FF05A0E3 		.loc 1 318 0
 1366 10d4 030680E2 		ldr	r2, .L67+32
 1367 10d8 0010A0E3 		ldr	r3, [fp, #-32]	@ float
 1368 10dc 0320A0E1 		str	r3, [r2, #24]	@ float
 1369 10e0 0430A0E1 		.loc 1 319 0
 1370 10e4 FEFFFFEB 		ldr	r2, .L67+32
 1371 10e8 0030A0E1 		ldr	r3, [fp, #-36]	@ float
 1372 10ec 0140A0E1 		str	r3, [r2, #28]	@ float
 1373 10f0 0300A0E1 		.loc 1 320 0
 1374 10f4 0410A0E1 		ldr	r2, .L67+32
 1375 10f8 FEFFFFEB 		ldr	r3, .L67+36	@ float
 1376 10fc 0030A0E1 		str	r3, [r2, #32]	@ float
 1377 1100 20300BE5 		.loc 1 321 0
 311:lab.c         ****  0.0;//Ktz_P*(yaw_desired-imusensor.dThetaz)-Ktz_D*(imusensor.dOmegaz);
 312:lab.c         **** 
 1378              	 r3, #-2147483648
 1379 1104 78239FE5 		ldr	r3, .L67+32
 1380 1108 78339FE5 		str	r2, [r3, #36]	@ float
 1381 110c 003082E5 		.loc 1 322 0
 313:lab.c         **** / For Keeping data
 1382              		r3, [fp, #-32]
 1383 1110 6C239FE5 		eor	r2, r3, #-2147483648
 1384 1114 28301BE5 		ldr	r3, .L67+32
 1385 1118 043082E5 		str	r2, [r3, #40]	@ float
 314:lab.c         **** u.u1 = cnt_u[0];
 1386              	c 1 323 0
 1387 111c 20301BE5 		ldr	r2, .L67+32
 1388 1120 022123E2 		ldr	r3, [fp, #-36]	@ float
 1389 1124 58339FE5 		str	r3, [r2, #44]	@ float
 1390 1128 082083E5 		.loc 1 324 0
 315:lab.c         **** u.u2 = cnt_u[1];
 1391              	r2, .L67+32
 1392 112c 50239FE5 		ldr	r3, [fp, #-40]	@ float
 1393 1130 24301BE5 		str	r3, [r2, #48]	@ float
 1394 1134 0C3082E5 		.loc 1 325 0
 316:lab.c         **** esired-imusensor.dThetaz)-Ktz_D*(imusensor.dOmegaz);
 1395              		r2, .L67+32
 1396 1138 28301BE5 		ldr	r3, .L67+36	@ float
 1397 113c 022123E2 		str	r3, [r2, #52]	@ float
 1398 1140 3C339FE5 		.loc 1 326 0
 1399 1144 102083E5 		ldr	r2, .L67+32
 317:lab.c         **** 	// For Keeping data
 1400              	r3, [fp, #-32]	@ float
 1401 1148 34239FE5 		str	r3, [r2, #56]	@ float
 1402 114c 34339FE5 		.loc 1 327 0
 1403 1150 143082E5 		ldr	r2, .L67+32
 318:lab.c         **** u.u1 = cnt_u[0];
 1404              		r3, [fp, #-36]	@ float
 1405 1154 28239FE5 		str	r3, [r2, #60]	@ float
 1406 1158 20301BE5 		.loc 1 329 0
 1407 115c 183082E5 		ldr	r3, .L67+40
 319:lab.c         **** u.u2 = cnt_u[1];
 1408              		r3, [sp, #0]
 1409 1160 1C239FE5 		ldr	r3, .L67+44
 1410 1164 24301BE5 		str	r3, [sp, #4]
 1411 1168 1C3082E5 		mov	r0, #4
 320:lab.c         **** esired-imusensor.dThetaz)-Ktz_D*(imusensor.dOmegaz);
 1412              		r1, #4
 1413 116c 10239FE5 		mov	r2, #1
 1414 1170 10339FE5 		ldr	r3, .L67+32
 1415 1174 203082E5 		bl	matrix_multiply
 321:lab.c         **** 	// For Keeping data
 1416              	c 1 332 0
 1417 1178 28301BE5 		mov	r3, #0
 1418 117c 022123E2 		str	r3, [fp, #-28]
 1419 1180 FC329FE5 		b	.L51
 1420 1184 242083E5 	.L52:
 322:lab.c         **** u.u1 = cnt_u[0];
 1421              	 1 333 0
 1422 1188 20301BE5 		ldr	r2, [fp, #-28]
 1423 118c 022123E2 		ldr	r3, .L67+44
 1424 1190 EC329FE5 		ldr	r2, [r3, r2, asl #2]	@ float
 1425 1194 282083E5 		ldr	r3, .L67+48
 323:lab.c         **** u.u2 = cnt_u[1];
 1426              	r3, [r3, #0]	@ float
 1427 1198 E4229FE5 		mov	r0, r2
 1428 119c 24301BE5 		mov	r1, r3
 1429 11a0 2C3082E5 		bl	__gtsf2
 324:lab.c         **** esired-imusensor.dThetaz)-Ktz_D*(imusensor.dOmegaz);
 1430              		r3, r0
 1431 11a4 D8229FE5 		cmp	r3, #0
 1432 11a8 28301BE5 		bgt	.L55
 1433 11ac 303082E5 		b	.L53
 325:lab.c         **** 	// For Keeping data
 1434              	:
 1435 11b0 CC229FE5 		.loc 1 334 0
 1436 11b4 CC329FE5 		ldr	r1, [fp, #-28]
 1437 11b8 343082E5 		ldr	r3, .L67+48
 326:lab.c         **** u.u1 = cnt_u[0];
 1438              		r2, [r3, #0]	@ float
 1439 11bc C0229FE5 		ldr	r3, .L67+44
 1440 11c0 20301BE5 		str	r2, [r3, r1, asl #2]	@ float
 1441 11c4 383082E5 		b	.L56
 327:lab.c         **** u.u2 = cnt_u[1];
 1442              	:
 1443 11c8 B4229FE5 		.loc 1 336 0
 1444 11cc 24301BE5 		ldr	r2, [fp, #-28]
 1445 11d0 3C3082E5 		ldr	r3, .L67+44
 328:lab.c         **** esired-imusensor.dThetaz)-Ktz_D*(imusensor.dOmegaz);
 329:lab.c         **** 
 1446              		r2, [r3, r2, asl #2]	@ float
 1447 11d4 B0329FE5 		ldr	r3, .L67+52
 1448 11d8 00308DE5 		ldr	r3, [r3, #0]	@ float
 1449 11dc AC329FE5 		mov	r0, r2
 1450 11e0 04308DE5 		mov	r1, r3
 1451 11e4 0400A0E3 		bl	__ltsf2
 1452 11e8 0410A0E3 		mov	r3, r0
 1453 11ec 0120A0E3 		cmp	r3, #0
 1454 11f0 8C329FE5 		blt	.L58
 1455 11f4 FEFFFFEB 		b	.L56
 330:lab.c         **** / For Keeping data
 331:lab.c         **** 	u.u1 = cnt_u[0];
 332:lab.c         **** 	u.u2 = cnt_u[1];
 1456              	c 1 337 0
 1457 11f8 0030A0E3 		ldr	r1, [fp, #-28]
 1458 11fc 1C300BE5 		ldr	r3, .L67+52
 1459 1200 710000EA 		ldr	r2, [r3, #0]	@ float
 1460              		ldr	r3, .L67+44
 333:lab.c         **** u3 = cnt_u[2];
 1461              	r2, [r3, r1, asl #2]	@ float
 1462 1204 1C201BE5 	.L56:
 1463 1208 80329FE5 		.loc 1 339 0
 1464 120c 022193E7 		ldr	r5, [fp, #-28]
 1465 1210 7C329FE5 		ldr	r2, [fp, #-28]
 1466 1214 003093E5 		ldr	r3, .L67+44
 1467 1218 0200A0E1 		ldr	r3, [r3, r2, asl #2]	@ float
 1468 121c 0310A0E1 		mov	r0, r3
 1469 1220 FEFFFFEB 		bl	__extendsfdf2
 1470 1224 0030A0E1 		mov	r3, r0
 1471 1228 000053E3 		mov	r4, r1
 1472 122c 000000CA 		mov	r0, r3
 1473 1230 050000EA 		mov	r1, r4
 1474              		bl	sqrt
 334:lab.c         **** hetaz)-Ktz_D*(imusensor.dOmegaz);
 1475              	ov	r4, r1
 1476 1234 1C101BE5 		mov	r0, r3
 1477 1238 54329FE5 		mov	r1, r4
 1478 123c 002093E5 		bl	__truncdfsf2
 1479 1240 48329FE5 		mov	r2, r0
 1480 1244 012183E7 		ldr	r3, .L67+56
 1481 1248 100000EA 		str	r2, [r3, r5, asl #2]	@ float
 1482              		.loc 1 342 0
 335:lab.c         **** 	// For Keeping data
 336:lab.c         **** 	u.u1 = cnt_u[0];
 1483              	 [fp, #-28]
 1484 124c 1C201BE5 		ldr	r2, [fp, #-28]
 1485 1250 38329FE5 		ldr	r3, .L67+56
 1486 1254 022193E7 		ldr	r3, [r3, r2, asl #2]	@ float
 1487 1258 38329FE5 		mov	r0, r3
 1488 125c 003093E5 		bl	__extendsfdf2
 1489 1260 0200A0E1 		mov	r3, r0
 1490 1264 0310A0E1 		mov	r4, r1
 1491 1268 FEFFFFEB 		mov	r0, r3
 1492 126c 0030A0E1 		mov	r1, r4
 1493 1270 000053E3 		adr	r2, .L67
 1494 1274 000000BA 		ldmia	r2, {r2-r3}
 1495 1278 040000EA 		bl	__muldf3
 1496              		mov	r3, r0
 337:lab.c         **** .u2 = cnt_u[1];
 1497              	ov	r0, r3
 1498 127c 1C101BE5 		mov	r1, r4
 1499 1280 10329FE5 		adr	r2, .L67+8
 1500 1284 002093E5 		ldmia	r2, {r2-r3}
 1501 1288 00329FE5 		bl	__subdf3
 1502 128c 012183E7 		mov	r3, r0
 1503              		mov	r4, r1
 338:lab.c         **** esired-imusensor.dThetaz)-Ktz_D*(imusensor.dOmegaz);
 339:lab.c         **** 
 1504              	, r3
 1505 1290 1C501BE5 		mov	r1, r4
 1506 1294 1C201BE5 		bl	__truncdfsf2
 1507 1298 F0319FE5 		mov	r2, r0
 1508 129c 023193E7 		ldr	r3, .L67+60
 1509 12a0 0300A0E1 		str	r2, [r3, r5, asl #2]	@ float
 1510 12a4 FEFFFFEB 		.loc 1 349 0
 1511 12a8 0030A0E1 		ldr	r2, [fp, #-28]
 1512 12ac 0140A0E1 		ldr	r3, .L67+60
 1513 12b0 0300A0E1 		ldr	r3, [r3, r2, asl #2]	@ float
 1514 12b4 0410A0E1 		mov	r0, r3
 1515 12b8 FEFFFFEB 		ldr	r1, .L67+64	@ float
 1516 12bc 0030A0E1 		bl	__ltsf2
 1517 12c0 0140A0E1 		mov	r3, r0
 1518 12c4 0300A0E1 		cmp	r3, #0
 1519 12c8 0410A0E1 		blt	.L61
 1520 12cc FEFFFFEB 		b	.L59
 1521 12d0 0020A0E1 	.L61:
 1522 12d4 C0319FE5 		.loc 1 350 0
 1523 12d8 052183E7 		ldr	r1, [fp, #-28]
 340:lab.c         **** / For Keeping data
 341:lab.c         **** 	u.u1 = cnt_u[0];
 342:lab.c         **** 	u.u2 = cnt_u[1];
 1524              	r	r3, .L67+64	@ float
 1525 12dc 1C501BE5 		str	r3, [r2, r1, asl #2]	@ float
 1526 12e0 1C201BE5 		b	.L62
 1527 12e4 B0319FE5 	.L59:
 1528 12e8 023193E7 		.loc 1 352 0
 1529 12ec 0300A0E1 		ldr	r2, [fp, #-28]
 1530 12f0 FEFFFFEB 		ldr	r3, .L67+60
 1531 12f4 0030A0E1 		ldr	r3, [r3, r2, asl #2]	@ float
 1532 12f8 0140A0E1 		mov	r0, r3
 1533 12fc 0300A0E1 		ldr	r1, .L67+68	@ float
 1534 1300 0410A0E1 		bl	__gtsf2
 1535 1304 562F8FE2 		mov	r3, r0
 1536 1308 0C0092E8 		cmp	r3, #0
 1537 130c FEFFFFEB 		bgt	.L64
 1538 1310 0030A0E1 		b	.L62
 1539 1314 0140A0E1 	.L64:
 1540 1318 0300A0E1 		.loc 1 353 0
 1541 131c 0410A0E1 		ldr	r1, [fp, #-28]
 1542 1320 512F8FE2 		ldr	r2, .L67+60
 1543 1324 0C0092E8 		ldr	r3, .L67+68	@ float
 1544 1328 FEFFFFEB 		str	r3, [r2, r1, asl #2]	@ float
 1545 132c 0030A0E1 	.L62:
 1546 1330 0140A0E1 		.loc 1 332 0
 1547 1334 0300A0E1 		ldr	r3, [fp, #-28]
 1548 1338 0410A0E1 		add	r3, r3, #1
 1549 133c FEFFFFEB 		str	r3, [fp, #-28]
 1550 1340 0020A0E1 	.L51:
 1551 1344 54319FE5 		ldr	r3, [fp, #-28]
 1552 1348 052183E7 		cmp	r3, #3
 343:lab.c         **** u3 = cnt_u[2];
 344:lab.c         **** 	u.u4 = cnt_u[3];
 345:lab.c         **** }
 346:lab.c         **** /*------------ End Lab 2 ------------*/
 347:lab.c         **** /*------------ End Controller ------------*/
 348:lab.c         **** 
 349:lab.c         **** /*---------------- Command ---------------*/
 1553              	r3, .L67+60
 1554 134c 1C201BE5 		ldr	r3, [r3, #0]	@ float
 1555 1350 48319FE5 		mov	r0, r3
 1556 1354 023193E7 		bl	__fixunssfsi
 1557 1358 0300A0E1 		mov	r3, r0
 1558 135c 40119FE5 		and	r3, r3, #255
 1559 1360 FEFFFFEB 		ldr	r2, .L67+72
 1560 1364 0030A0E1 		strb	r3, [r2, #0]
 1561 1368 000053E3 		.loc 1 360 0
 1562 136c 000000BA 		ldr	r3, .L67+60
 1563 1370 040000EA 		ldr	r3, [r3, #4]	@ float
 1564              		mov	r0, r3
 350:lab.c         **** ----------*/
 1565              	sfsi
 1566 1374 1C101BE5 		mov	r3, r0
 1567 1378 20219FE5 		and	r3, r3, #255
 1568 137c 20319FE5 		ldr	r2, .L67+72
 1569 1380 013182E7 		strb	r3, [r2, #3]
 1570 1384 0D0000EA 		.loc 1 361 0
 1571              		ldr	r3, .L67+60
 351:lab.c         ****  cnt_u[0];
 352:lab.c         **** 	u.u2 = cnt_u[1];
 1572              	, [r3, #8]	@ float
 1573 1388 1C201BE5 		mov	r0, r3
 1574 138c 0C319FE5 		bl	__fixunssfsi
 1575 1390 023193E7 		mov	r3, r0
 1576 1394 0300A0E1 		and	r3, r3, #255
 1577 1398 08119FE5 		ldr	r2, .L67+72
 1578 139c FEFFFFEB 		strb	r3, [r2, #1]
 1579 13a0 0030A0E1 		.loc 1 362 0
 1580 13a4 000053E3 		ldr	r3, .L67+60
 1581 13a8 000000CA 		ldr	r3, [r3, #12]	@ float
 1582 13ac 030000EA 		mov	r0, r3
 1583              		bl	__fixunssfsi
 353:lab.c         **** esired-imusensor.dThetaz)-Ktz_D*(imusensor.dOmegaz);
 1584              		and	r3, r3, #255
 1585 13b0 1C101BE5 		ldr	r2, .L67+72
 1586 13b4 E4209FE5 		strb	r3, [r2, #2]
 1587 13b8 E8309FE5 		.loc 1 364 0
 1588 13bc 013182E7 		sub	sp, fp, #24
 1589              		ldmfd	sp, {r4, r5, r6, fp, sp, lr}
 1590              		bx	lr
 1591 13c0 1C301BE5 	.L68:
 1592 13c4 013083E2 		.align	2
 1593 13c8 1C300BE5 	.L67:
 1594              		.word	1070499056
 1595 13cc 1C301BE5 		.word	-1792478831
 1596 13d0 030053E3 		.word	1077534565
 1597 13d4 8AFFFFDA 		.word	2001935796
 354:lab.c         **** 	// For Keeping data
 355:lab.c         **** 	u.u1 = cnt_u[0];
 356:lab.c         **** 	u.u2 = cnt_u[1];
 357:lab.c         **** 	u.u3 = cnt_u[2];
 358:lab.c         **** 	u.u4 = cnt_u[3];
 359:lab.c         **** }
 1598              		.word	l
 1599 13d8 C0309FE5 		.word	kF
 1600 13dc 003093E5 		.word	kM
 1601 13e0 0300A0E1 		.word	Winv
 1602 13e4 FEFFFFEB 		.word	0
 1603 13e8 0030A0E1 		.word	cnt_u
 1604 13ec FF3003E2 		.word	omega_cmd2
 1605 13f0 B4209FE5 		.word	MAXPHI2
 1606 13f4 0030C2E5 		.word	MINPHI2
 360:lab.c         **** -------- End Lab 2 ------------*/
 1607              	ega_cmd
 1608 13f8 A0309FE5 		.word	cmd
 1609 13fc 043093E5 		.word	1065353216
 1610 1400 0300A0E1 		.word	1128792064
 1611 1404 FEFFFFEB 		.word	WO_Direct_Individual_Motor_Control
 1612 1408 0030A0E1 	.LFE6:
 1614 1410 94209FE5 		.align	2
 1615 1414 0330C2E5 		.global	Bens_Control_Law
 361:lab.c         ****  cnt_u[0];
 1616              	ns_Control_Law, %function
 1617 1418 80309FE5 	Bens_Control_Law:
 1618 141c 083093E5 	.LFB7:
 1619 1420 0300A0E1 		.loc 1 368 0
 1620 1424 FEFFFFEB 		@ Function supports interworking.
 1621 1428 0030A0E1 		@ args = 0, pretend = 0, frame = 0
 1622 142c FF3003E2 		@ frame_needed = 1, uses_anonymous_args = 0
 1623 1430 74209FE5 		mov	ip, sp
 1624 1434 0130C2E5 	.LCFI19:
 362:lab.c         ****  0.0;//Ktz_P*(yaw_desired-imusensor.dThetaz)-Ktz_D*(imusensor.dOmegaz);
 1625              	!, {fp, ip, lr, pc}
 1626 1438 60309FE5 	.LCFI20:
 1627 143c 0C3093E5 		sub	fp, ip, #4
 1628 1440 0300A0E1 	.LCFI21:
 1629 1444 FEFFFFEB 		.loc 1 370 0
 1630 1448 0030A0E1 		sub	sp, fp, #12
 1631 144c FF3003E2 		ldmfd	sp, {fp, sp, lr}
 1632 1450 54209FE5 		bx	lr
 1633 1454 0230C2E5 	.LFE7:
 363:lab.c         **** 	// For Keeping data
 364:lab.c         **** 	u.u1 = cnt_u[0];
 1634              	ns_Control_Law, .-Bens_Control_Law
 1635 1458 18D04BE2 		.align	2
 1636 145c 70689DE8 		.global	Bens_Command
 1638              	Bens_Command:
 1639              	.LFB8:
 1640              		.loc 1 374 0
 1641 1464 F084CE3F 		@ Function supports interworking.
 1642 1468 91F12895 		@ args = 0, pretend = 0, frame = 0
 1643 146c 65DF3940 		@ frame_needed = 1, uses_anonymous_args = 0
 1644 1470 B41D5377 		mov	ip, sp
 1645 1474 00000000 	.LCFI22:
 1646 1478 00000000 		stmfd	sp!, {fp, ip, lr, pc}
 1647 147c 00000000 	.LCFI23:
 1648 1480 00000000 		sub	fp, ip, #4
 1649 1484 00000000 	.LCFI24:
 1650 1488 00000000 		.loc 1 376 0
 1651 148c 00000000 		ldr	r2, .L73
 1652 1490 00000000 		mov	r3, #2
 1653 1494 00000000 		strb	r3, [r2, #0]
 1654 1498 00000000 		.loc 1 382 0
 1655 149c 00000000 		ldr	r2, .L73
 1656 14a0 00000000 		mov	r3, #1
 1657 14a4 0000803F 		strb	r3, [r2, #1]
 1658 14a8 00004843 		.loc 1 387 0
 1659 14ac 00000000 		ldr	r2, .L73+4
 1660              		mov	r3, #8
 1661              		strh	r3, [r2, #8]	@ movhi
 1662              		.loc 1 390 0
 1663              		ldr	r3, .L73+8
 1664              		ldrh	r2, [r3, #0]
 1665              		ldr	r3, .L73+4
 1666              		strh	r2, [r3, #6]	@ movhi
 365:lab.c         **** .u2 = cnt_u[1];
 366:lab.c         **** 	u.u3 = cnt_u[2];
 367:lab.c         **** 	u.u4 = cnt_u[3];
 368:lab.c         **** }
 1667              	dmfd	sp, {fp, sp, lr}
 1668              		bx	lr
 1669              	.L74:
 1670              		.align	2
 1671 14b0 0DC0A0E1 	.L73:
 1672              		.word	WO_SDK
 1673 14b4 00D82DE9 		.word	WO_CTRL_Input
 1674              		.word	Ben_thrust
 1675 14b8 04B04CE2 	.LFE8:
 369:lab.c         **** r.dOmegaz);
 370:lab.c         **** 
 1677              	_timeout,4,4
 1678 14bc 0CD04BE2 		.comm	SYSTEM_initialized,1,1
 1679 14c0 00689DE8 		.comm	takeoff2,4,4
 1680 14c4 1EFF2FE1 		.comm	initialize,4,4
 1681              		.comm	velocityEstHolder,4,4
 1682              		.comm	VelEstX,4,4
 1683              		.comm	VelEstY,4,4
 1684              		.comm	VelEstZ,4,4
 1685              		.comm	previousXMeas,4,4
 1686              		.comm	previousYMeas,4,4
 1687              		.comm	previousZMeas,4,4
 371:lab.c         **** / For Keeping data
 372:lab.c         **** 	u.u1 = cnt_u[0];
 373:lab.c         **** 	u.u2 = cnt_u[1];
 374:lab.c         **** 	u.u3 = cnt_u[2];
 1688              	rcum,12,4
 1689              		.comm	IntegralHolder,4,4
 1690              		.comm	imusensor,68,4
 1691              		.comm	real_mocap,32,4
 1692 14c8 0DC0A0E1 		.comm	mocap,32,4
 1693              		.comm	u,16,4
 1694 14cc 00D82DE9 		.comm	Winv,64,4
 1695              		.comm	cnt_u,16,4
 1696 14d0 04B04CE2 		.comm	omega_cmd2,16,4
 1697              		.comm	omega_cmd,16,4
 375:lab.c         **** 4 = cnt_u[3];
 376:lab.c         **** }
 1698              	,16,4
 1699 14d4 38209FE5 		.comm	roll_desired,4,4
 1700 14d8 0230A0E3 		.comm	pitch_desired,4,4
 1701 14dc 0030C2E5 		.comm	yaw_desired,4,4
 377:lab.c         **** r.dOmegaz);
 378:lab.c         **** 
 379:lab.c         **** 	// For Keeping data
 380:lab.c         **** 	u.u1 = cnt_u[0];
 381:lab.c         **** 	u.u2 = cnt_u[1];
 382:lab.c         **** 	u.u3 = cnt_u[2];
 1702              	mm	x_nom,16,4
 1703 14e0 2C209FE5 		.comm	z,12,4
 1704 14e4 0130A0E3 		.comm	dt,4,4
 1705 14e8 0130C2E5 		.comm	USMaxBot_range1_old,4,4
 383:lab.c         **** = cnt_u[3];
 384:lab.c         **** }
 385:lab.c         **** /*------------ End Lab 2 ------------*/
 386:lab.c         **** /*------------ End Controller ------------*/
 387:lab.c         **** 
 1706              	ction	.debug_frame,"",%progbits
 1707 14ec 24209FE5 	.Lframe0:
 1708 14f0 0830A0E3 		.4byte	.LECIE0-.LSCIE0
 1709 14f4 B830C2E1 	.LSCIE0:
 388:lab.c         **** u.u4 = cnt_u[3];
 389:lab.c         **** }
 390:lab.c         **** /*------------ End Lab 2 ------------*/
 1710              	yte	0xffffffff
 1711 14f8 1C309FE5 		.byte	0x1
 1712 14fc B020D3E1 		.ascii	"\000"
 1713 1500 10309FE5 		.uleb128 0x1
 1714 1504 B620C3E1 		.sleb128 -4
 391:lab.c         ****  cnt_u[0];
 1715              	e	0xe
 1716 1508 0CD04BE2 		.byte	0xc
 1717 150c 00689DE8 		.uleb128 0xd
 1718 1510 1EFF2FE1 		.uleb128 0x0
 1719              		.align	2
 1720              	.LECIE0:
 1721              	.LSFDE0:
 1722 1514 00000000 		.4byte	.LEFDE0-.LASFDE0
 1723 1518 00000000 	.LASFDE0:
 1724 151c 00000000 		.4byte	.Lframe0
 1725              		.4byte	.LFB2
 1726              		.4byte	.LFE2-.LFB2
 1727              		.byte	0x4
 1728              		.4byte	.LCFI0-.LFB2
 1729              		.byte	0xd
 1730              		.uleb128 0xc
 1731              		.byte	0x4
 1732              		.4byte	.LCFI1-.LCFI0
 1733              		.byte	0x8e
 1734              		.uleb128 0x2
 1735              		.byte	0x8d
 1736              		.uleb128 0x3
 1737              		.byte	0x8b
 1738              		.uleb128 0x4
 1739              		.byte	0x4
 1740              		.4byte	.LCFI2-.LCFI1
 1741              		.byte	0xc
 1742              		.uleb128 0xb
 1743              		.uleb128 0x4
 1744              		.align	2
 1745              	.LEFDE0:
 1746              	.LSFDE2:
 1747              		.4byte	.LEFDE2-.LASFDE2
 1748              	.LASFDE2:
 1749              		.4byte	.Lframe0
 1750              		.4byte	.LFB3
 1751              		.4byte	.LFE3-.LFB3
 1752              		.byte	0x4
 1753              		.4byte	.LCFI3-.LFB3
 1754              		.byte	0xd
 1755              		.uleb128 0xc
 1975              		.4byte	0x0
DEFINED SYMBOLS
                            *ABS*:00000000 lab.c
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:15     .data:00000000 mass
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:16     .data:00000000 $d
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:21     .data:00000004 kF
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:27     .data:00000008 kM
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:33     .data:0000000c l
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:39     .data:00000010 MAXPHI2
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:45     .data:00000014 MINPHI2
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:51     .data:00000018 g
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:58     .bss:00000000 Ben_thrust
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:64     .text:00000000 lab
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:71     .text:00000000 $a
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:123    .text:00000060 VelocityEst
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:1665   .text:000014b0 Bens_Control_Law
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:1686   .text:000014c8 Bens_Command
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:106    .text:00000054 $d
                            *COM*:00000010 x_nom
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:129    .text:00000060 $a
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:188    .text:00000108 $d
                            *COM*:00000004 initialize
                            *COM*:00000004 previousXMeas
                            *COM*:00000004 previousYMeas
                            *COM*:00000004 previousZMeas
                            *COM*:00000004 VelEstX
                            *COM*:00000004 VelEstY
                            *COM*:00000004 VelEstZ
                            *COM*:00000020 real_mocap
                            *COM*:00000020 mocap
                            *COM*:00000004 velocityEstHolder
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:204    .text:00000140 $a
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:504    .text:00000578 lab3
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:826    .text:000009dc $d
                            *COM*:00000004 takeoff2
                            *COM*:00000004 IntegralHolder
                            *COM*:00000004 USMaxBot_range1_old
                            *COM*:00000004 roll_desired
                            *COM*:00000004 pitch_desired
                            *COM*:00000004 yaw_desired
                            *COM*:00000044 imusensor
                            *COM*:00000010 cnt_u
                            *COM*:00000010 u
                            *COM*:0000000c errorcum
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:861    .text:00000a64 $a
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:1145   .text:00000e24 lab2
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:1243   .text:00000f3c $d
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:1258   .text:00000f60 Command
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:1264   .text:00000f60 $a
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:1641   .text:00001464 $d
                            *COM*:00000040 Winv
                            *COM*:00000010 omega_cmd2
                            *COM*:00000010 omega_cmd
                            *COM*:00000010 cmd
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:1671   .text:000014b0 $a
C:\Users\bkuo\AppData\Local\Temp/ccItmaaa.s:1722   .text:00001514 $d
                            *COM*:00000004 GPS_timeout
                            *COM*:00000001 SYSTEM_initialized
                            *COM*:0000000c z
                            *COM*:00000004 dt

UNDEFINED SYMBOLS
__nesf2
__subsf3
__extendsfdf2
__divdf3
__truncdfsf2
__mulsf3
__subdf3
__muldf3
__adddf3
__addsf3
__floatsisf
__gtsf2
__ltsf2
USMaxBot_range1
__fixunssfsi
matrix_multiply
sqrt
WO_SDK
WO_Direct_Individual_Motor_Control
WO_CTRL_Input
