   1              		.file	"sdk.c"
   9              	.Ltext0:
  10              		.align	2
  11              		.global	SPI0Handler
  13              	SPI0Handler:
  14              	.LFB2:
  15              		.file 1 "sdk.c"
   1:sdk.c         **** /*
   2:sdk.c         **** 
   3:sdk.c         **** AscTec SDK 3.0
   4:sdk.c         **** 
   5:sdk.c         **** Copyright (c) 2011, Ascending Technologies GmbH
   6:sdk.c         **** All rights reserved.
   7:sdk.c         **** 
   8:sdk.c         **** Redistribution and use in source and binary forms, with or without
   9:sdk.c         **** modification, are permitted provided that the following conditions are met:
  10:sdk.c         **** 
  11:sdk.c         ****  * Redistributions of source code must retain the above copyright notice,
  12:sdk.c         ****    this list of conditions and the following disclaimer.
  13:sdk.c         ****  * Redistributions in binary form must reproduce the above copyright
  14:sdk.c         ****    notice, this list of conditions and the following disclaimer in the
  15:sdk.c         ****    documentation and/or other materials provided with the distribution.
  16:sdk.c         **** 
  17:sdk.c         **** THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND ANY
  18:sdk.c         **** EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  19:sdk.c         **** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  20:sdk.c         **** DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY
  21:sdk.c         **** DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  22:sdk.c         **** (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  23:sdk.c         **** SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  24:sdk.c         **** CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  25:sdk.c         **** LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  26:sdk.c         **** OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
  27:sdk.c         **** DAMAGE.
  28:sdk.c         **** 
  29:sdk.c         ****  */
  30:sdk.c         **** 
  31:sdk.c         **** #include "main.h"
  32:sdk.c         **** #include "sdk.h"
  33:sdk.c         **** #include "LL_HL_comm.h"
  34:sdk.c         **** #include "gpsmath.h"
  35:sdk.c         **** #include "sdk_telemetry.h"
  36:sdk.c         **** #include "uart.h"
  37:sdk.c         **** #include "system.h"
  38:sdk.c         **** #include "lpc_aci_eeprom.h"
  39:sdk.c         **** #include "lab.h"
  40:sdk.c         **** #include "Utilites.h"
  41:sdk.c         **** 
  42:sdk.c         **** //Dan Block Add
  43:sdk.c         **** #include <stdio.h>
  44:sdk.c         **** #include "LPC214x.h"
  45:sdk.c         **** #include "hardware.h"
  46:sdk.c         **** #include "irq.h"
  47:sdk.c         **** 
  48:sdk.c         **** #define USONIC_INIT_DELAY 2000
  49:sdk.c         **** #define SWITCH_INIT_DELAY 2000
  50:sdk.c         **** #define SDCARD_START_DELAY 4000
  51:sdk.c         **** //End Dan Block Add
  52:sdk.c         **** 
  53:sdk.c         **** #ifdef MATLAB
  54:sdk.c         **** #include "..\custom_mdl\onboard_matlab_ert_rtw\onboard_matlab.h"
  55:sdk.c         **** #endif
  56:sdk.c         **** 
  57:sdk.c         **** struct WO_SDK_STRUCT WO_SDK;
  58:sdk.c         **** struct WO_CTRL_INPUT WO_CTRL_Input;
  59:sdk.c         **** struct RO_RC_DATA RO_RC_Data;
  60:sdk.c         **** struct RO_ALL_DATA RO_ALL_Data;
  61:sdk.c         **** struct WO_DIRECT_MOTOR_CONTROL WO_Direct_Motor_Control;
  62:sdk.c         **** struct WO_DIRECT_INDIVIDUAL_MOTOR_CONTROL WO_Direct_Individual_Motor_Control;
  63:sdk.c         **** struct imuSensor imusensor;
  64:sdk.c         **** 
  65:sdk.c         **** //waypoint example global variables for jeti display
  66:sdk.c         **** unsigned char wpExampleWpNr=0;
  67:sdk.c         **** unsigned char wpExampleActive=0;
  68:sdk.c         **** 
  69:sdk.c         **** //emergency mode variables
  70:sdk.c         **** unsigned char emergencyMode;
  71:sdk.c         **** unsigned char emergencyModeUpdate=0;
  72:sdk.c         **** 
  73:sdk.c         **** #ifdef MATLAB
  74:sdk.c         **** unsigned char xbee_send_flag=0;
  75:sdk.c         **** unsigned char triggerSaveMatlabParams=0; //trigger command to save matlab parameters to flash
  76:sdk.c         **** struct MATLAB_DEBUG matlab_debug;
  77:sdk.c         **** struct MATLAB_UART matlab_uart, matlab_uart_tmp;
  78:sdk.c         **** struct MATLAB_PARAMS matlab_params, matlab_params_tmp;
  79:sdk.c         **** 
  80:sdk.c         **** void SDK_matlabMainLoop(void);
  81:sdk.c         **** #endif
  82:sdk.c         **** void SDK_EXAMPLE_direct_individual_motor_commands(void);
  83:sdk.c         **** void SDK_EXAMPLE_direct_motor_commands_with_standard_output_mapping(void);
  84:sdk.c         **** void SDK_EXAMPLE_attitude_commands(void);
  85:sdk.c         **** void SDK_EXAMPLE_gps_waypoint_control(void);
  86:sdk.c         **** int SDK_EXAMPLE_turn_motors_on(void);
  87:sdk.c         **** int SDK_EXAMPLE_turn_motors_off(void);
  88:sdk.c         **** 
  89:sdk.c         **** // Start Added by Dan Block
  90:sdk.c         **** unsigned long my_sdkloop_counter = 0;
  91:sdk.c         **** static int timer = 1;
  92:sdk.c         **** int firebit = 1;
  93:sdk.c         **** int UsonicTimer = 0;
  94:sdk.c         **** unsigned int SPI0data = 0;
  95:sdk.c         **** unsigned int SPI0command = 0;
  96:sdk.c         **** int f28027_ready = 0;
  97:sdk.c         **** int UsonicData = 0;
  98:sdk.c         **** int NewUsonicData = 0;
  99:sdk.c         **** int USMaxBot_range1 = 0;
 100:sdk.c         **** 
 101:sdk.c         **** int SwitchTimer = 0;
 102:sdk.c         **** int readSwitchbit = 0;
 103:sdk.c         **** int MagnetSwitch = 0;
 104:sdk.c         **** int NewMagnetSwitch = 0;
 105:sdk.c         **** int GotMagnet = 0;
 106:sdk.c         **** 
 107:sdk.c         **** #define MAX_SPI_SEND_SHORTS  50
 108:sdk.c         **** int SPItxCount = 0;
 109:sdk.c         **** int SPItxSize = 0;
 110:sdk.c         **** unsigned short int SPItxArray[MAX_SPI_SEND_SHORTS];
 111:sdk.c         **** int	SPItxDone = 1;
 112:sdk.c         **** int numMissedTx = 0;
 113:sdk.c         **** 
 114:sdk.c         **** typedef union float2short_tag {
 115:sdk.c         **** 	float fl;
 116:sdk.c         **** 	unsigned short int sh[2];
 117:sdk.c         **** } float2short;
 118:sdk.c         **** 
 119:sdk.c         **** float2short f2s;
 120:sdk.c         **** 
 121:sdk.c         **** int testcount = 0;
 122:sdk.c         **** float testarray[5];
 123:sdk.c         **** 
 124:sdk.c         **** void SPI0Handler(void) __irq
 125:sdk.c         **** {
  16              	@ Function supports interworking.
  17              		@ args = 0, pretend = 0, frame = 0
  18              		@ frame_needed = 0, uses_anonymous_args = 0
  19              		stmfd	sp!, {r4, r5, lr}
  20 0000 30402DE9 	.LCFI0:
  21              		.loc 1 128 0
 126:sdk.c         **** 	IENABLE;
 127:sdk.c         **** 
 128:sdk.c         **** 	IOSET0 = (1<<EXT_NCS); // set CS back high
  22              	r, #-536870912
  23 0004 0EE2A0E3 		add	lr, lr, #163840
  24 0008 0AE98EE2 		mov	r4, #128
  25 000c 8040A0E3 		str	r4, [lr, #4]
  26 0010 04408EE5 		.loc 1 129 0
 129:sdk.c         **** 	if ((S0SPSR&0x80) == 0x80) {
  27              	ip, #-536870912
  28 0014 0EC2A0E3 		add	ip, ip, #131072
  29 0018 02C88CE2 		ldr	r3, [ip, #4]
  30 001c 04309CE5 		tst	r3, #128
  31 0020 800013E3 		.loc 1 130 0
 130:sdk.c         **** 		SPI0data = S0SPDR; // read data
  32              	e	r2, [ip, #8]
  33 0024 08209C15 		ldrne	r3, .L36
  34 0028 30329F15 		strne	r2, [r3, #0]
  35 002c 00208315 		.loc 1 133 0
 131:sdk.c         **** 	}
 132:sdk.c         **** 
 133:sdk.c         **** 	if (SPI0command == 0xCC01) {  // command to tell f28027 to fire ultrasonic sensor
  36              		r2, .L36+4
  37 0030 2C229FE5 		mov	r3, #52224
  38 0034 333BA0E3 		ldr	r2, [r2, #0]
  39 0038 002092E5 		add	r3, r3, #1
  40 003c 013083E2 		cmp	r2, r3
  41 0040 030052E1 		beq	.L30
  42 0044 2400000A 		.loc 1 139 0
 134:sdk.c         **** 		if ((SPI0data == 0xBABE) || (SPI0data == 0xCABB)) {
 135:sdk.c         **** 			firebit = 0;
 136:sdk.c         **** 		} else { // error go back to not ready
 137:sdk.c         **** 			f28027_ready = 0;
 138:sdk.c         **** 		}
 139:sdk.c         **** 	} else if (SPI0command == 0xCC02) {  // command to read date from f28027 ultrasonic reading
  43              	, #52224
  44 0048 333BA0E3 		add	r3, r3, #2
  45 004c 023083E2 		cmp	r2, r3
  46 0050 030052E1 		beq	.L31
  47 0054 2F00000A 		.loc 1 150 0
 140:sdk.c         **** 		//mytest = SPI0data & 0xFF00;
 141:sdk.c         **** 		if ( (SPI0data & 0xFF00) == 0xDD00) {
 142:sdk.c         **** 			UsonicData = SPI0data & 0xFF;
 143:sdk.c         **** 			NewUsonicData = 1;
 144:sdk.c         **** 			firebit = 1;
 145:sdk.c         **** 			UsonicTimer = 0;
 146:sdk.c         **** 		} else {  // error go back to not ready
 147:sdk.c         **** 			f28027_ready = 0;
 148:sdk.c         **** 		}
 149:sdk.c         **** 
 150:sdk.c         **** 	} else if (SPI0command == 0xCC03) {  // command to just check if board attached to SPI
  48              	r3, #52224
  49 0058 333BA0E3 		add	r3, r3, #3
  50 005c 033083E2 		cmp	r2, r3
  51 0060 030052E1 		beq	.L32
  52 0064 3F00000A 		.loc 1 158 0
 151:sdk.c         **** 		if (SPI0data == 0xCABB) {
 152:sdk.c         **** 			f28027_ready = 1;
 153:sdk.c         **** 			firebit = 1;
 154:sdk.c         **** 			readSwitchbit = 1;
 155:sdk.c         **** 			UsonicTimer = 0;
 156:sdk.c         **** 			SwitchTimer = 0;
 157:sdk.c         **** 		}
 158:sdk.c         **** 	} else if (SPI0command == 0xCC04) { // command to beaglebone to store data to SD card
  53              	r3, #52224
  54 0068 333BA0E3 		add	r3, r3, #4
  55 006c 043083E2 		cmp	r2, r3
  56 0070 030052E1 		beq	.L33
  57 0074 5D00000A 		.loc 1 166 0
 159:sdk.c         **** 		if (SPItxCount < SPItxSize) {
 160:sdk.c         **** 			IOCLR0 = (1<<EXT_NCS);
 161:sdk.c         **** 			S0SPDR = SPItxArray[SPItxCount];
 162:sdk.c         **** 			SPItxCount++;
 163:sdk.c         **** 		} else {
 164:sdk.c         **** 			SPItxDone = 1;
 165:sdk.c         **** 		}
 166:sdk.c         **** 	} else if (SPI0command == 0xCC05) {  // command to tell f28027 to transfer magnet switch state
  58              	r3, #52224
  59 0078 333BA0E3 		add	r3, r3, #5
  60 007c 053083E2 		cmp	r2, r3
  61 0080 030052E1 		beq	.L34
  62 0084 4A00000A 		.loc 1 172 0
 167:sdk.c         **** 		if ((SPI0data == 0xBABE) || (SPI0data == 0xCABB)) {
 168:sdk.c         **** 			readSwitchbit = 0;
 169:sdk.c         **** 		} else { // error go back to not ready
 170:sdk.c         **** 			f28027_ready = 0;
 171:sdk.c         **** 		}
 172:sdk.c         **** 	} else if (SPI0command == 0xCC06) {  // command to read magnet switch state
  63              	r3, #52224
  64 0088 333BA0E3 		add	r3, r3, #6
  65 008c 063083E2 		cmp	r2, r3
  66 0090 030052E1 		bne	.L8
  67 0094 0700001A 		.loc 1 173 0
 173:sdk.c         **** 		if ( (SPI0data & 0xFF00) == 0xDD00) {
  68              	r3, .L36
  69 0098 C0319FE5 		ldr	r1, [r3, #0]
  70 009c 001093E5 		and	r2, r1, #65280
  71 00a0 FF2C01E2 		cmp	r2, #56576
  72 00a4 DD0C52E3 		.loc 1 179 0
 174:sdk.c         **** 			MagnetSwitch = SPI0data & 0xFF;
 175:sdk.c         **** 			NewMagnetSwitch = 1;
 176:sdk.c         **** 			readSwitchbit = 1;
 177:sdk.c         **** 			SwitchTimer = 0;
 178:sdk.c         **** 		} else {  // error go back to not ready
 179:sdk.c         **** 			f28027_ready = 0;
  73              	e	r2, #0
  74 00a8 0020A013 		.loc 1 173 0
  75              		beq	.L35
  76 00ac 5F00000A 	.L28:
  77              		.loc 1 179 0
  78              		ldr	r3, .L36+8
  79 00b0 B0319FE5 		str	r2, [r3, #0]
  80 00b4 002083E5 	.L8:
  81              		.loc 1 185 0
 180:sdk.c         **** 		}
 181:sdk.c         **** 
 182:sdk.c         **** 	}
 183:sdk.c         **** 
 184:sdk.c         **** 
 185:sdk.c         **** 	S0SPINT = 0x1;  // clear interrupt
  82              	#-536870912
  83 00b8 0E32A0E3 		add	r3, r3, #131072
  84 00bc 023883E2 		mov	r2, #1
  85 00c0 0120A0E3 		str	r2, [r3, #28]
  86 00c4 1C2083E5 		.loc 1 188 0
 186:sdk.c         **** 
 187:sdk.c         **** 	IDISABLE;
 188:sdk.c         **** 	VICVectAddr = 0;		/* Acknowledge Interrupt */
  87              	r1, #0
  88 00c8 0010A0E3 		mvn	r3, #0
  89 00cc 0030E0E3 		str	r1, [r3, #-4047]
  90 00d0 CF1F03E5 		.loc 1 189 0
 189:sdk.c         **** }
  91              	fd	sp!, {r4, r5, lr}
  92 00d4 3040BDE8 		bx	lr
  93 00d8 1EFF2FE1 	.L30:
  94              		.loc 1 134 0
  95              		ldr	r3, .L36
  96 00dc 7C319FE5 		mov	r2, #47616
  97 00e0 BA2CA0E3 		ldr	r1, [r3, #0]
  98 00e4 001093E5 		mov	r3, #51968
  99 00e8 CB3CA0E3 		sub	r3, r3, #69
 100 00ec 453043E2 		add	r2, r2, #190
 101 00f0 BE2082E2 		cmp	r1, r3
 102 00f4 030051E1 		cmpne	r1, r2
 103 00f8 02005111 		.loc 1 135 0
 104              		ldreq	r3, .L36+12
 105 00fc 68319F05 		.loc 1 134 0
 106              		movne	r2, #0
 107 0100 0020A013 		moveq	r2, #1
 108 0104 0120A003 		.loc 1 135 0
 109              		moveq	r2, #0
 110 0108 0020A003 		streq	r2, [r3, #0]
 111 010c 00208305 		.loc 1 134 0
 112              		beq	.L8
 113 0110 E8FFFF0A 		b	.L28
 114 0114 E5FFFFEA 	.L31:
 115              		.loc 1 141 0
 116              		ldr	r3, .L36
 117 0118 40319FE5 		ldr	r1, [r3, #0]
 118 011c 001093E5 		and	r2, r1, #65280
 119 0120 FF2C01E2 		cmp	r2, #56576
 120 0124 DD0C52E3 		.loc 1 147 0
 121              		ldrne	r3, .L36+8
 122 0128 38319F15 		movne	r2, #0
 123 012c 0020A013 		strne	r2, [r3, #0]
 124 0130 00208315 		.loc 1 141 0
 125              		bne	.L8
 126 0134 DFFFFF1A 		.loc 1 142 0
 127              		ldr	r3, .L36+16
 128 0138 30319FE5 		.loc 1 144 0
 129              		ldr	r2, .L36+12
 130 013c 28219FE5 		.loc 1 142 0
 131              		and	r1, r1, #255
 132 0140 FF1001E2 		.loc 1 143 0
 133              		mov	r0, #1
 134 0144 0100A0E3 		.loc 1 142 0
 135              		str	r1, [r3, #0]
 136 0148 001083E5 		.loc 1 144 0
 137              		str	r0, [r2, #0]
 138 014c 000082E5 		.loc 1 145 0
 139              		ldr	r3, .L36+20
 140 0150 1C319FE5 		.loc 1 143 0
 141              		ldr	r2, .L36+24
 142 0154 1C219FE5 		.loc 1 145 0
 143              		mov	r1, #0
 144 0158 0010A0E3 		str	r1, [r3, #0]
 145 015c 001083E5 		.loc 1 143 0
 146              		str	r0, [r2, #0]
 147 0160 000082E5 		b	.L8
 148 0164 D3FFFFEA 	.L32:
 149              		.loc 1 151 0
 150              		ldr	r3, .L36
 151 0168 F0309FE5 		mov	r2, #51968
 152 016c CB2CA0E3 		ldr	r1, [r3, #0]
 153 0170 001093E5 		sub	r2, r2, #69
 154 0174 452042E2 		cmp	r1, r2
 155 0178 020051E1 		bne	.L8
 156 017c CDFFFF1A 		.loc 1 154 0
 157              		ldr	r3, .L36+28
 158 0180 F4309FE5 		.loc 1 152 0
 159              		mov	r1, #1
 160 0184 0110A0E3 		.loc 1 156 0
 161              		ldr	r2, .L36+32
 162 0188 F0209FE5 		.loc 1 154 0
 163              		str	r1, [r3, #0]
 164 018c 001083E5 		.loc 1 152 0
 165              		ldr	r3, .L36+8
 166 0190 D0309FE5 		.loc 1 155 0
 167              		mov	r0, #0
 168 0194 0000A0E3 		.loc 1 156 0
 169              		str	r0, [r2, #0]
 170 0198 000082E5 		.loc 1 152 0
 171              		str	r1, [r3, #0]
 172 019c 001083E5 		.loc 1 153 0
 173              		ldr	r2, .L36+12
 174 01a0 C4209FE5 		.loc 1 155 0
 175              		ldr	r3, .L36+20
 176 01a4 C8309FE5 		.loc 1 153 0
 177              		str	r1, [r2, #0]
 178 01a8 001082E5 		.loc 1 155 0
 179              		str	r0, [r3, #0]
 180 01ac 000083E5 		b	.L8
 181 01b0 C0FFFFEA 	.L34:
 182              		.loc 1 167 0
 183              		ldr	r3, .L36
 184 01b4 A4309FE5 		mov	r2, #47616
 185 01b8 BA2CA0E3 		ldr	r1, [r3, #0]
 186 01bc 001093E5 		mov	r3, #51968
 187 01c0 CB3CA0E3 		sub	r3, r3, #69
 188 01c4 453043E2 		add	r2, r2, #190
 189 01c8 BE2082E2 		cmp	r1, r3
 190 01cc 030051E1 		cmpne	r1, r2
 191 01d0 02005111 		.loc 1 168 0
 192              		ldreq	r3, .L36+28
 193 01d4 A0309F05 		.loc 1 167 0
 194              		movne	r2, #0
 195 01d8 0020A013 		moveq	r2, #1
 196 01dc 0120A003 		.loc 1 168 0
 197              		moveq	r2, #0
 198 01e0 0020A003 		streq	r2, [r3, #0]
 199 01e4 00208305 		.loc 1 167 0
 200              		beq	.L8
 201 01e8 B2FFFF0A 		b	.L28
 202 01ec AFFFFFEA 	.L33:
 203              		.loc 1 159 0
 204              		ldr	r3, .L36+36
 205 01f0 8C309FE5 		ldr	r5, .L36+40
 206 01f4 8C509FE5 		ldr	r2, [r3, #0]
 207 01f8 002093E5 		ldr	r1, [r5, #0]
 208 01fc 001095E5 		cmp	r1, r2
 209 0200 020051E1 		.loc 1 161 0
 210              		ldrlt	r3, .L36+44
 211 0204 80309FB5 		movlt	r2, r1, asl #1
 212 0208 8120A0B1 		ldrlth	r0, [r2, r3]
 213 020c B30092B1 		.loc 1 164 0
 214              		ldrge	r3, .L36+48
 215 0210 78309FA5 		.loc 1 162 0
 216              		addlt	r1, r1, #1
 217 0214 011081B2 		.loc 1 164 0
 218              		movge	r2, #1
 219 0218 0120A0A3 		.loc 1 160 0
 220              		strlt	r4, [lr, #12]
 221 021c 0C408EB5 		.loc 1 162 0
 222              		strlt	r1, [r5, #0]
 223 0220 001085B5 		.loc 1 161 0
 224              		strlt	r0, [ip, #8]
 225 0224 08008CB5 		.loc 1 164 0
 226              		strge	r2, [r3, #0]
 227 0228 002083A5 		b	.L8
 228 022c A1FFFFEA 	.L35:
 229              		.loc 1 174 0
 230              		ldr	r3, .L36+52
 231 0230 5C309FE5 		.loc 1 176 0
 232              		ldr	r2, .L36+28
 233 0234 40209FE5 		.loc 1 174 0
 234              		and	r1, r1, #255
 235 0238 FF1001E2 		.loc 1 175 0
 236              		mov	r0, #1
 237 023c 0100A0E3 		.loc 1 174 0
 238              		str	r1, [r3, #0]
 239 0240 001083E5 		.loc 1 176 0
 240              		str	r0, [r2, #0]
 241 0244 000082E5 		.loc 1 177 0
 242              		ldr	r3, .L36+32
 243 0248 30309FE5 		.loc 1 175 0
 244              		ldr	r2, .L36+56
 245 024c 44209FE5 		.loc 1 177 0
 246              		mov	r1, #0
 247 0250 0010A0E3 		str	r1, [r3, #0]
 248 0254 001083E5 		.loc 1 175 0
 249              		str	r0, [r2, #0]
 250 0258 000082E5 		b	.L8
 251 025c 95FFFFEA 	.L37:
 252              		.align	2
 253              	.L36:
 254              		.word	SPI0data
 255 0260 00000000 		.word	SPI0command
 256 0264 00000000 		.word	f28027_ready
 257 0268 00000000 		.word	firebit
 258 026c 00000000 		.word	UsonicData
 259 0270 00000000 		.word	UsonicTimer
 260 0274 00000000 		.word	NewUsonicData
 261 0278 00000000 		.word	readSwitchbit
 262 027c 00000000 		.word	SwitchTimer
 263 0280 00000000 		.word	SPItxSize
 264 0284 00000000 		.word	SPItxCount
 265 0288 00000000 		.word	SPItxArray
 266 028c 00000000 		.word	SPItxDone
 267 0290 00000000 		.word	MagnetSwitch
 268 0294 00000000 		.word	NewMagnetSwitch
 269 0298 00000000 	.LFE2:
 271              		.align	2
 272              		.global	SDK_Init
 274              	SDK_Init:
 275              	.LFB3:
 276              		.loc 1 195 0
 190:sdk.c         **** // End Dan Block Added
 191:sdk.c         **** 
 192:sdk.c         **** /*----------------------------------------------------------------------*/
 193:sdk.c         **** /*------------------------- Initialization -----------------------------*/
 194:sdk.c         **** /*----------------------------------------------------------------------*/
 195:sdk.c         **** void SDK_Init(void) { 	// Used in lab.c
 277              	201 0
 278              		ldr	r3, .L40+4
 279              		str	r3, [r2, #12]	@ float
 280              		.loc 1 210 0
 281              		ldr	r3, .L40+8
 196:sdk.c         **** 	// initialize forces and torques structure
 197:sdk.c         **** 	u.u1 = 0.0;
 282              	 1 197 0
 283 029c 24209FE5 		mov	r1, #0
 198:sdk.c         **** 	u.u2 = 0.0;
 199:sdk.c         **** 	u.u3 = 0.0;
 200:sdk.c         **** 	float mass = 1.9; // kg	
 201:sdk.c         **** 	u.u4 = mass*9.81;
 284              	loc 1 210 0
 285 02a0 24309FE5 		mov	r0, #0
 286 02a4 0C3082E5 		.loc 1 195 0
 202:sdk.c         **** 
 203:sdk.c         **** // Start Dan Block Added
 204:sdk.c         **** //	ultrasound_timer = 0;
 205:sdk.c         **** //	ultrasound_z = 0;
 206:sdk.c         **** //	ultrasound_vz = 0;
 207:sdk.c         **** //	ultrasound_z_prev = 0;
 208:sdk.c         **** //	ultrasound_z_error_sum = 0;
 209:sdk.c         **** 
 210:sdk.c         **** 	my_sdkloop_counter = 0;
 287              	lr needed for prologue
 288 02a8 20309FE5 		.loc 1 210 0
 289              		str	r0, [r3, #0]
 290 02ac 0010A0E3 		.loc 1 199 0
 291              		str	r1, [r2, #8]	@ float
 292 02b0 0000A0E3 		.loc 1 197 0
 293              		str	r1, [r2, #0]	@ float
 294              		.loc 1 198 0
 295              		str	r1, [r2, #4]	@ float
 296 02b4 000083E5 		.loc 1 212 0
 297              		bx	lr
 298 02b8 081082E5 	.L41:
 299              		.align	2
 300 02bc 001082E5 	.L40:
 301              		.word	u
 302 02c0 041082E5 		.word	1100291244
 211:sdk.c         **** // End Dan Block Added
 212:sdk.c         **** }
 303              	p_counter
 304 02c4 1EFF2FE1 	.LFE3:
 306              		.align	2
 307              		.global	SDK_SetEmergencyMode
 309 02cc AC1C9541 	SDK_SetEmergencyMode:
 310 02d0 00000000 	.LFB5:
 311              		.loc 1 362 0
 312              		@ Function supports interworking.
 313              		@ args = 0, pretend = 0, frame = 0
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315              		@ link register save eliminated.
 316              	.LVL0:
 317              		and	r0, r0, #255
 213:sdk.c         **** /*----------------------------------------------------------------------*/
 214:sdk.c         **** /*----------------------- End Initialization ---------------------------*/
 215:sdk.c         **** /*----------------------------------------------------------------------*/
 216:sdk.c         **** 
 217:sdk.c         **** 
 218:sdk.c         **** 
 219:sdk.c         **** void SDK_mainloop(void)
 220:sdk.c         **** {
 221:sdk.c         **** //#ifdef MATLAB
 222:sdk.c         **** 	//SDK_matlabMainLoop(); //this runs only in combination with the AscTec Simulink Toolkit
 223:sdk.c         **** 
 224:sdk.c         **** 	//jeti telemetry can always be activated. You may deactivate this call if you don't have the AscTe
 225:sdk.c         **** 	//SDK_jetiAscTecExampleRun();
 226:sdk.c         **** 
 227:sdk.c         **** //#else //write your own C-cod e within this function
 228:sdk.c         **** 
 229:sdk.c         **** 	imusensor.dT = (float) RO_ALL_Data.flight_time;
 230:sdk.c         **** 	imusensor.dThetax = (3.14159/180.0)*(((float) RO_ALL_Data.angle_roll) / 1000.0);
 231:sdk.c         **** 	imusensor.dThetay = (3.14159/180.0)*(((float) RO_ALL_Data.angle_pitch) / 1000.0);
 232:sdk.c         **** 	imusensor.dThetaz = angle_diff((3.14159 / 180.0) * (((float) RO_ALL_Data.angle_yaw) / 1000.0),0);
 233:sdk.c         **** 	imusensor.dOmegax = (3.1415 / 180.0) * 0.0154 * (float) IMU_CalcData.angvel_roll;
 234:sdk.c         **** 	imusensor.dOmegay = (3.1415 / 180.0) * 0.0154 * (float) IMU_CalcData.angvel_nick;
 235:sdk.c         **** 	imusensor.dOmegaz = (3.1415 / 180.0) * 0.0154 * (float) IMU_CalcData.angvel_yaw;
 236:sdk.c         **** 
 237:sdk.c         **** // Added By Dan Block
 238:sdk.c         **** 	if (NewUsonicData == 1) {
 239:sdk.c         **** 		USMaxBot_range1 = UsonicData;
 240:sdk.c         **** 		//filter_ultrasound_z();
 241:sdk.c         **** 		NewUsonicData = 0;
 242:sdk.c         **** 	}
 243:sdk.c         **** 	if (NewMagnetSwitch == 1) {
 244:sdk.c         **** 		GotMagnet = ~MagnetSwitch & 0x1;
 245:sdk.c         **** 		NewMagnetSwitch = 0;
 246:sdk.c         **** 	}
 247:sdk.c         **** // End Add
 248:sdk.c         **** 
 249:sdk.c         **** 	lab();
 250:sdk.c         **** 
 251:sdk.c         **** //	 Add by Dan Block
 252:sdk.c         **** //	 Code to read magnet switch from attached 28027 board
 253:sdk.c         **** //	if (timer > SWITCH_INIT_DELAY) { //wait SWITCH_INIT_DELAY ms before talking to 28027
 254:sdk.c         **** //		if (f28027_ready == 1) {
 255:sdk.c         **** //			SwitchTimer++;
 256:sdk.c         **** //			if (readSwitchbit == 1) {
 257:sdk.c         **** //				if (SwitchTimer == 25) {  // read every 25 ms
 258:sdk.c         **** //					IOCLR0 = (1<<EXT_NCS);
 259:sdk.c         **** //					SPI0command = 0xCC05;
 260:sdk.c         **** //					S0SPDR = SPI0command;  // send Sample Switch Command
 261:sdk.c         **** //				}
 262:sdk.c         **** //			} else if (SwitchTimer == 26) {
 263:sdk.c         **** //				IOCLR0 = (1<<EXT_NCS);
 264:sdk.c         **** //				SPI0command = 0xCC06;
 265:sdk.c         **** //				S0SPDR = SPI0command;  // send transfer Switch State Command
 266:sdk.c         **** //			}
 267:sdk.c         **** //		} else {
 268:sdk.c         **** //			IOCLR0 = (1<<EXT_NCS);
 269:sdk.c         **** //			SPI0command = 0xCC03;
 270:sdk.c         **** //			S0SPDR = SPI0command;  // send Are you Alive command
 271:sdk.c         **** //		}
 272:sdk.c         **** //	}
 273:sdk.c         **** 
 274:sdk.c         **** // This code was communicating with BBB
 275:sdk.c         **** //	if (timer > SDCARD_START_DELAY) {
 276:sdk.c         **** //		if(0==(timer%500)) {
 277:sdk.c         **** //			if (SPItxDone == 1) {
 278:sdk.c         **** //				SPItxDone = 0;
 279:sdk.c         **** //				testarray[0] = (float)(testcount);
 280:sdk.c         **** //				testarray[1] = (float)(5*testcount + 1);
 281:sdk.c         **** //				testarray[2] = (float)(5*testcount + 2);
 282:sdk.c         **** //				testarray[3] = (float)(5*testcount + 3);
 283:sdk.c         **** //				testarray[4] = (float)(5*testcount + 4);
 284:sdk.c         **** //				testcount++;
 285:sdk.c         **** //				for (i=0;i<5;i++) {
 286:sdk.c         **** //					f2s.fl = testarray[i];
 287:sdk.c         **** //					SPItxArray[2*i] = f2s.sh[0];
 288:sdk.c         **** //					SPItxArray[2*i + 1] = f2s.sh[1];
 289:sdk.c         **** //				}
 290:sdk.c         **** //				SPItxCount = 0;
 291:sdk.c         **** //				SPItxSize = 10;
 292:sdk.c         **** //
 293:sdk.c         **** //				IOCLR0 = (1<<EXT_NCS);
 294:sdk.c         **** //				SPI0command = 0xCC04;
 295:sdk.c         **** //				S0SPDR = SPI0command;  // send Command to beaglebone to store floats to SDCard
 296:sdk.c         **** //			} else {
 297:sdk.c         **** //				numMissedTx++;
 298:sdk.c         **** //			}
 299:sdk.c         **** //		}
 300:sdk.c         **** //	}
 301:sdk.c         **** 
 302:sdk.c         **** 
 303:sdk.c         **** 	// Code for reading Ultrasonic sensor if 28027 board attached
 304:sdk.c         **** 	if (timer > USONIC_INIT_DELAY) { //wait USONIC_INIT_DELAY ms before talking to 28027
 305:sdk.c         **** 		if (f28027_ready == 1) {
 306:sdk.c         **** 			UsonicTimer++;
 307:sdk.c         **** 			if (firebit == 1) {
 308:sdk.c         **** 				if (UsonicTimer == 5) {
 309:sdk.c         **** 					IOCLR0 = (1<<EXT_NCS);
 310:sdk.c         **** 					SPI0command = 0xCC01;
 311:sdk.c         **** 					S0SPDR = SPI0command;  // send Start Measurement Usonic Command
 312:sdk.c         **** 				}
 313:sdk.c         **** 			} else if (UsonicTimer == 75) {
 314:sdk.c         **** 				IOCLR0 = (1<<EXT_NCS);
 315:sdk.c         **** 				SPI0command = 0xCC02;
 316:sdk.c         **** 				S0SPDR = SPI0command;  // send Read Measurement Usonic Command
 317:sdk.c         **** 			}
 318:sdk.c         **** 		} else {
 319:sdk.c         **** 			IOCLR0 = (1<<EXT_NCS);
 320:sdk.c         **** 			SPI0command = 0xCC03;
 321:sdk.c         **** 			S0SPDR = SPI0command;  // send Are you Alive command
 322:sdk.c         **** 		}
 323:sdk.c         **** 	}
 324:sdk.c         **** 
 325:sdk.c         **** 	timer++;
 326:sdk.c         **** 
 327:sdk.c         **** 	my_sdkloop_counter++;
 328:sdk.c         **** 
 329:sdk.c         **** // End Add by Dan Block
 330:sdk.c         **** 	//SDK_jetiAscTecExampleRun();
 331:sdk.c         **** 
 332:sdk.c         **** 	//if (wpExampleActive) //this is used to activate the waypoint example via the jeti telemetry disp
 333:sdk.c         **** 	//	SDK_EXAMPLE_gps_waypoint_control();
 334:sdk.c         **** 
 335:sdk.c         **** //#endif
 336:sdk.c         **** }
 337:sdk.c         **** 
 338:sdk.c         **** // Dan Block Add
 339:sdk.c         **** //void filter_ultrasound_z(void) {
 340:sdk.c         **** //	// take finite difference to estimate z velocity
 341:sdk.c         **** //	float dt = ((float)(my_sdkloop_counter - ultrasound_timer))/1000.0;
 342:sdk.c         **** //    float alpha = 0.95;
 343:sdk.c         **** //	ultrasound_z = (float)UsonicData/100.0;
 344:sdk.c         **** //	if (ultrasound_z_prev > 0.0) {
 345:sdk.c         **** //        ultrasound_z = alpha * ultrasound_z + (1-alpha)* ultrasound_z_prev;
 346:sdk.c         **** //		ultrasound_vz = (ultrasound_z - ultrasound_z_prev)/dt;
 347:sdk.c         **** //	}
 348:sdk.c         **** //
 349:sdk.c         **** //	g_state.dZ = ultrasound_z;
 350:sdk.c         **** //	g_state.dVz = ultrasound_vz;
 351:sdk.c         **** //
 352:sdk.c         **** //	ultrasound_z_prev = ultrasound_z;
 353:sdk.c         **** //	ultrasound_timer = my_sdkloop_counter;
 354:sdk.c         **** //}
 355:sdk.c         **** // End Dan Block Add
 356:sdk.c         **** 
 357:sdk.c         **** /*
 358:sdk.c         ****  *
 359:sdk.c         ****  * Sets emergency mode on LowLevel processor. Select one of the EM_ defines as mode option. See EM_
 360:sdk.c         ****  */
 361:sdk.c         **** 
 362:sdk.c         **** void SDK_SetEmergencyMode(unsigned char mode) {
 318              	sub	r3, r0, #1
 319              		cmp	r0, #8
 320              		cmpne	r3, #1
 321              		.loc 1 362 0
 322              		@ lr needed for prologue
 323              		.loc 1 363 0
 324 02d4 FF0000E2 		bls	.L43
 363:sdk.c         **** 	if ((mode != EM_SAVE_EXTENDED_WAITING_TIME) && (mode != EM_SAVE) && (mode
 325              	, #4
 326 02d8 013040E2 		bxne	lr
 327 02dc 080050E3 	.L43:
 328 02e0 01005313 		.loc 1 367 0
 329              		ldr	r3, .L47
 330              		strb	r0, [r3, #0]
 331              		.loc 1 368 0
 332 02e4 0100009A 		ldr	r3, .L47+4
 333 02e8 040050E3 		mov	r2, #1
 334 02ec 1EFF2F11 		strb	r2, [r3, #0]
 335              		bx	lr
 364:sdk.c         **** 			!= EM_RETURN_AT_MISSION_SUMMIT) && (mode
 365:sdk.c         **** 			!= EM_RETURN_AT_PREDEFINED_HEIGHT))
 366:sdk.c         **** 		return;
 367:sdk.c         **** 	emergencyMode = mode;
 336              	gn	2
 337 02f0 10309FE5 	.L47:
 338 02f4 0000C3E5 		.word	emergencyMode
 368:sdk.c         **** 	emergencyModeUpdate = 1;
 339              	ord	emergencyModeUpdate
 340 02f8 0C309FE5 	.LFE5:
 342 0300 0020C3E5 		.align	2
 343 0304 1EFF2FE1 		.global	SDK_EXAMPLE_direct_individual_motor_commands
 345              	SDK_EXAMPLE_direct_individual_motor_commands:
 346              	.LFB6:
 347 0308 00000000 		.loc 1 375 0
 348 030c 00000000 		@ Function supports interworking.
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              		@ link register save eliminated.
 352              		.loc 1 390 0
 353              		ldr	r0, .L63
 354              		ldr	r2, .L63+4
 355              		ldrh	r3, [r0, #16]
 369:sdk.c         **** }
 370:sdk.c         **** 
 371:sdk.c         **** /*
 372:sdk.c         ****  * the following example shows the direct motor command usage by mapping the stick directly to the 
 373:sdk.c         ****  */
 374:sdk.c         **** void SDK_EXAMPLE_direct_individual_motor_commands(void)
 375:sdk.c         **** {
 356              	, r3
 357              		rsb	r3, r1, r3
 358              		.loc 1 397 0
 359              		ldrh	ip, [r0, #24]
 360              		.loc 1 390 0
 376:sdk.c         **** 
 377:sdk.c         **** 	WO_SDK.ctrl_mode=0x00;	//0x00: direct individual motor control: individual commands for motors 0..
 378:sdk.c         **** 							//0x01: direct motor control using standard output mapping: commands are interpreted as pitc
 379:sdk.c         **** 							//0x02: attitude and throttle control: commands are input for standard attitude controller
 380:sdk.c         **** 							//0x03: GPS waypoint control
 381:sdk.c         **** 
 382:sdk.c         **** 	WO_SDK.ctrl_enabled=1;  //0: disable control by HL processor
 383:sdk.c         **** 							//1: enable control by HL processor
 384:sdk.c         **** 
 385:sdk.c         **** 	WO_SDK.disable_motor_onoff_by_stick=0;
 386:sdk.c         **** 
 387:sdk.c         **** 	unsigned int i;
 388:sdk.c         **** 
 389:sdk.c         **** 	//scale throttle stick to [0..200] and map it to all motors
 390:sdk.c         **** 	WO_Direct_Individual_Motor_Control.motor[0]=RO_ALL_Data.channel[2]/21;
 361              	r1, r1, r3, lsr #1
 362 0310 B0009FE5 		.loc 1 397 0
 363 0314 B0209FE5 		mov	r3, #2496
 364 0318 B031D0E1 		.loc 1 390 0
 365 031c 92C381E0 		ldr	r0, .L63+8
 366 0320 033061E0 		.loc 1 377 0
 391:sdk.c         **** 	WO_Direct_Individual_Motor_Control.motor[1]=RO_ALL_Data.channel[2]/21;
 392:sdk.c         **** 	WO_Direct_Individual_Motor_Control.motor[2]=RO_ALL_Data.channel[2]/21;
 393:sdk.c         **** 	WO_Direct_Individual_Motor_Control.motor[3]=RO_ALL_Data.channel[2]/21;
 394:sdk.c         **** 	WO_Direct_Individual_Motor_Control.motor[4]=RO_ALL_Data.channel[2]/21;
 395:sdk.c         **** 	WO_Direct_Individual_Motor_Control.motor[5]=RO_ALL_Data.channel[2]/21;
 396:sdk.c         **** 
 397:sdk.c         **** 	if (RO_ALL_Data.channel[6]>2500)
 367              	2, .L63+12
 368 0324 B8C1D0E1 		.loc 1 397 0
 369              		add	r3, r3, #4
 370 0328 A31081E0 		.loc 1 390 0
 371              		mov	r1, r1, lsr #4
 372 032c 273DA0E3 		and	r1, r1, #255
 373              		.loc 1 397 0
 374 0330 98009FE5 		cmp	ip, r3
 375              		.loc 1 377 0
 376 0334 98209FE5 		mov	r3, #0
 377              		.loc 1 382 0
 378 0338 043083E2 		mov	ip, #1
 379              		.loc 1 375 0
 380 033c 2112A0E1 		@ lr needed for prologue
 381 0340 FF1001E2 		.loc 1 385 0
 382              		strb	r3, [r2, #2]
 383 0344 03005CE1 		.loc 1 395 0
 384              		strb	r1, [r0, #5]
 385 0348 0030A0E3 		.loc 1 377 0
 386              		strb	r3, [r2, #0]
 387 034c 01C0A0E3 		.loc 1 382 0
 388              		strb	ip, [r2, #1]
 389              		.loc 1 390 0
 390              		strb	r1, [r0, #0]
 391 0350 0230C2E5 		.loc 1 391 0
 392              		strb	r1, [r0, #1]
 393 0354 0510C0E5 		.loc 1 392 0
 394              		strb	r1, [r0, #2]
 395 0358 0030C2E5 		.loc 1 393 0
 396              		strb	r1, [r0, #3]
 397 035c 01C0C2E5 		.loc 1 394 0
 398              		strb	r1, [r0, #4]
 399 0360 0010C0E5 		.loc 1 404 0
 400              		strlsb	r3, [r0, #8]
 401 0364 0110C0E5 		.loc 1 397 0
 402              		bls	.L52
 403 0368 0210C0E5 		.loc 1 401 0
 404              		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 405 036c 0310C0E5 		cmp	r3, #80
 406              		.loc 1 402 0
 407 0370 0410C0E5 		movhi	r3, #80
 398:sdk.c         **** 	{
 399:sdk.c         **** 		WO_Direct_Individual_Motor_Control.motorReverseMask=0x01; //invert motor 0 if AUX switch is enabl
 400:sdk.c         **** 		//limit inverted speed (IMPORTANT! THIS IS NOT DONE AUTOMATICALLY!)
 401:sdk.c         **** 		if (WO_Direct_Individual_Motor_Control.motor[0]>80)
 402:sdk.c         **** 			WO_Direct_Individual_Motor_Control.motor[0]=80;
 403:sdk.c         **** 	}else
 404:sdk.c         **** 		WO_Direct_Individual_Motor_Control.motorReverseMask=0x00;
 408              	402 0
 409 0374 0830C095 		strhib	r3, [r0, #0]
 410              	.L52:
 411 0378 0400009A 		.loc 1 404 0
 412              		ldr	r2, .L63+8
 413 037c 0030D0E5 		mov	r0, #1
 414 0380 500053E3 		add	r1, r2, #6
 415              		mvn	ip, #55
 416 0384 5030A083 	.L54:
 417              		.loc 1 411 0
 418 0388 08C0C0E5 		ldrb	r3, [r2, #0]	@ zero_extendqisi2
 419              		cmp	r3, #0
 420 038c 0030C085 		streqb	r0, [r2, #0]
 421              		beq	.L57
 422              		.loc 1 412 0
 423 0390 38209FE5 		cmp	r3, #200
 424 0394 0100A0E3 		strhib	ip, [r2, #0]
 425 0398 061082E2 	.L57:
 426 039c 37C0E0E3 		add	r2, r2, #1
 427              		.loc 1 409 0
 405:sdk.c         **** 
 406:sdk.c         **** 
 407:sdk.c         **** 	//make sure commands are never 0 so that motors will always keep spinning
 408:sdk.c         ****     //also make sure that commands stay within range
 409:sdk.c         ****     for(i=0;i<6;i++)
 410:sdk.c         ****     {
 411:sdk.c         ****     	if(!WO_Direct_Individual_Motor_Control.motor[i]) WO_Direct_Individual_Motor_Control.motor[i]=1
 428              	4
 429 03a0 0030D2E5 		.loc 1 414 0
 430 03a4 000053E3 		bx	lr
 431 03a8 0000C205 	.L64:
 432 03ac 0100000A 		.align	2
 412:sdk.c         ****     	else if (WO_Direct_Individual_Motor_Control.motor[i]>200) WO_Direct_Individual_Motor_Control.m
 433              	
 434 03b0 C80053E3 		.word	RO_ALL_Data
 435 03b4 00C0C285 		.word	-2045222521
 436              		.word	WO_Direct_Individual_Motor_Control
 437 03b8 012082E2 		.word	WO_SDK
 438              	.LFE6:
 440 03c0 F6FFFF1A 		.align	2
 413:sdk.c         ****     }
 414:sdk.c         **** }
 441              	l	SDK_EXAMPLE_direct_motor_commands_with_standard_output_mapping
 443              	SDK_EXAMPLE_direct_motor_commands_with_standard_output_mapping:
 444              	.LFB7:
 445              		.loc 1 418 0
 446 03c8 00000000 		@ Function supports interworking.
 447 03cc 87611886 		@ args = 0, pretend = 0, frame = 0
 448 03d0 00000000 		@ frame_needed = 0, uses_anonymous_args = 0
 449 03d4 00000000 		.loc 1 431 0
 450              		ldr	r3, .L67
 451              		.loc 1 418 0
 452              		stmfd	sp!, {r4, r5, r6, r7, lr}
 453              	.LCFI1:
 454              		.loc 1 433 0
 455              		ldrh	ip, [r3, #16]
 456              		.loc 1 432 0
 415:sdk.c         **** 
 416:sdk.c         **** 
 417:sdk.c         **** void SDK_EXAMPLE_direct_motor_commands_with_standard_output_mapping(void)
 418:sdk.c         **** {
 457              		ldrh	r0, [r3, #14]
 458              		.loc 1 431 0
 459              		ldrh	r6, [r3, #12]
 460              		.loc 1 434 0
 419:sdk.c         **** 	WO_SDK.ctrl_mode=0x01;	//0x00: direct individual motor control: individual commands for motors 0..
 420:sdk.c         **** 							//0x01: direct motor control using standard output mapping: commands are interpreted as pitc
 421:sdk.c         **** 							//0x02: attitude and throttle control: commands are input for standard attitude controller
 422:sdk.c         **** 							//0x03: GPS waypoint control
 423:sdk.c         **** 
 424:sdk.c         **** 	WO_SDK.ctrl_enabled=1;  //0: disable control by HL processor
 425:sdk.c         **** 							//1: enable control by HL processor
 426:sdk.c         **** 
 427:sdk.c         **** 	/*
 428:sdk.c         **** 	 *  Stick commands directly mapped to motors, NO attitude control! Do NOT try to fly!
 429:sdk.c         **** 	 * */
 430:sdk.c         **** 
 431:sdk.c         **** 	WO_Direct_Motor_Control.pitch=(4095-RO_ALL_Data.channel[0])/21;
 461              	h	r1, [r3, #18]
 462 03d8 94309FE5 		.loc 1 431 0
 463              		mov	r2, #4080
 464 03dc F0402DE9 		.loc 1 433 0
 465              		umull	r3, r5, r4, ip
 432:sdk.c         **** 	WO_Direct_Motor_Control.roll=RO_ALL_Data.channel[1]/21;
 433:sdk.c         **** 	WO_Direct_Motor_Control.thrust=RO_ALL_Data.channel[2]/21;
 466              	 1 431 0
 467 03e0 B0C1D3E1 		mov	r3, #817889280
 468              		.loc 1 432 0
 469 03e4 8C409FE5 		umull	r7, lr, r4, r0
 470 03e8 BE00D3E1 		.loc 1 431 0
 471              		add	r2, r2, #15
 472 03ec BC60D3E1 		add	r3, r3, #199680
 434:sdk.c         **** 	WO_Direct_Motor_Control.yaw=(4095-RO_ALL_Data.channel[3])/21;
 473              	 434 0
 474 03f0 B211D3E1 		rsb	r1, r1, r2
 475              		.loc 1 431 0
 476 03f4 FF2EA0E3 		add	r3, r3, #49
 477              		rsb	r2, r6, r2
 478 03f8 943C85E0 		.loc 1 434 0
 479              		smull	r4, r6, r3, r1
 480 03fc C335A0E3 		.loc 1 431 0
 481              		smull	r7, r4, r3, r2
 482 0400 94708EE0 		.loc 1 432 0
 483              		rsb	r0, lr, r0
 484 0404 0F2082E2 		.loc 1 433 0
 485 0408 C33B83E2 		rsb	ip, r5, ip
 486              		.loc 1 431 0
 487 040c 021061E0 		ldr	r3, .L67+8
 488              		.loc 1 432 0
 489 0410 313083E2 		add	lr, lr, r0, lsr #1
 490 0414 022066E0 		.loc 1 433 0
 491              		add	r5, r5, ip, lsr #1
 492 0418 9341C6E0 		.loc 1 431 0
 493              		mov	r2, r2, asr #31
 494 041c 9372C4E0 		.loc 1 419 0
 495              		ldr	ip, .L67+12
 496 0420 00006EE0 		.loc 1 434 0
 497              		mov	r1, r1, asr #31
 498 0424 0CC065E0 		.loc 1 419 0
 499              		mov	r0, #1
 500 0428 4C309FE5 		.loc 1 431 0
 501              		rsb	r2, r2, r4, asr #2
 502 042c A0E08EE0 		.loc 1 434 0
 503              		rsb	r1, r1, r6, asr #2
 504 0430 AC5085E0 		.loc 1 432 0
 505              		mov	lr, lr, lsr #4
 506 0434 C22FA0E1 		.loc 1 433 0
 507              		mov	r5, r5, lsr #4
 508 0438 40C09FE5 		.loc 1 424 0
 509              		strb	r0, [ip, #1]
 510 043c C11FA0E1 		.loc 1 434 0
 511              		strb	r1, [r3, #2]
 512 0440 0100A0E3 		.loc 1 431 0
 513              		strb	r2, [r3, #0]
 514 0444 442162E0 		.loc 1 432 0
 515              		strb	lr, [r3, #1]
 516 0448 461161E0 		.loc 1 433 0
 517              		strb	r5, [r3, #3]
 518 044c 2EE2A0E1 		.loc 1 419 0
 519              		strb	r0, [ip, #0]
 520 0450 2552A0E1 		.loc 1 436 0
 521              		ldmfd	sp!, {r4, r5, r6, r7, lr}
 522 0454 0100CCE5 		bx	lr
 523              	.L68:
 524 0458 0210C3E5 		.align	2
 525              	.L67:
 526 045c 0020C3E5 		.word	RO_ALL_Data
 527              		.word	-2045222521
 528 0460 01E0C3E5 		.word	WO_Direct_Motor_Control
 529              		.word	WO_SDK
 530 0464 0350C3E5 	.LFE7:
 532 0468 0000CCE5 		.align	2
 435:sdk.c         **** 
 436:sdk.c         **** }
 533              	titude_commands, %function
 534 046c F040BDE8 	SDK_EXAMPLE_attitude_commands:
 535 0470 1EFF2FE1 	.LFB8:
 536              		.loc 1 440 0
 537              		@ Function supports interworking.
 538              		@ args = 0, pretend = 0, frame = 0
 539 0474 00000000 		@ frame_needed = 0, uses_anonymous_args = 0
 540 0478 87611886 		@ link register save eliminated.
 541 047c 00000000 		.loc 1 441 0
 542 0480 00000000 		ldr	r1, .L71
 543              		.loc 1 450 0
 544              		ldr	r0, .L71+4
 545              		.loc 1 446 0
 546              		mov	r3, #1
 547              		strb	r3, [r1, #1]
 548              		.loc 1 453 0
 549              		mov	r3, #400	@ movhi
 437:sdk.c         **** 
 438:sdk.c         **** 
 439:sdk.c         **** void SDK_EXAMPLE_attitude_commands(void)
 440:sdk.c         **** {
 550              	v	r2, #2
 551              		.loc 1 453 0
 552              		strh	r3, [r0, #6]	@ movhi
 553              		.loc 1 450 0
 554              		mov	r3, #8	@ movhi
 441:sdk.c         **** 	WO_SDK.ctrl_mode=0x02;	//0x00: direct individual motor control: individual commands for motors 0..
 555              	 1 440 0
 556 0484 24109FE5 		@ lr needed for prologue
 442:sdk.c         **** 							//0x01: direct motor control using standard output mapping: commands are interpreted as pitc
 443:sdk.c         **** 							//0x02: attitude and throttle control: commands are input for standard attitude controller
 444:sdk.c         **** 							//0x03: GPS waypoint control
 445:sdk.c         **** 
 446:sdk.c         **** 	WO_SDK.ctrl_enabled=1;  //0: disable control by HL processor
 447:sdk.c         **** 							//1: enable control by HL processor
 448:sdk.c         **** 
 449:sdk.c         **** 	//with this example the UAV will go to ~10% throttle when SDK control is activated
 450:sdk.c         **** 	WO_CTRL_Input.ctrl=0x08;	//0x08: enable throttle control by HL. Height control and GPS are deactiv
 557              	loc 1 441 0
 558 0488 24009FE5 		strb	r2, [r1, #0]
 559              		.loc 1 450 0
 560 048c 0130A0E3 		strh	r3, [r0, #8]	@ movhi
 561 0490 0130C1E5 		.loc 1 456 0
 451:sdk.c         **** 								//pitch, roll and yaw are still commanded via the remote control
 452:sdk.c         **** 
 453:sdk.c         **** 	WO_CTRL_Input.thrust=400;	//10% throttle command
 562              	r
 563 0494 193EA0E3 	.L72:
 564              		.align	2
 565 0498 0220A0E3 	.L71:
 566              		.word	WO_SDK
 567 049c B630C0E1 		.word	WO_CTRL_Input
 568              	.LFE8:
 570              		.align	2
 571              		.global	SDK_EXAMPLE_turn_motors_on
 573 04a4 0020C1E5 	SDK_EXAMPLE_turn_motors_on:
 574              	.LFB10:
 575 04a8 B830C0E1 		.loc 1 737 0
 454:sdk.c         **** 
 455:sdk.c         **** 
 456:sdk.c         **** }
 576              	pports interworking.
 577 04ac 1EFF2FE1 		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579              		.loc 1 750 0
 580              		ldr	r0, .L80
 581 04b0 00000000 		ldr	r3, [r0, #0]
 582 04b4 00000000 		.loc 1 740 0
 583              		ldr	r2, .L80+4
 584              		.loc 1 750 0
 585              		add	ip, r3, #1
 586              		.loc 1 737 0
 587              		stmfd	sp!, {r4, lr}
 588              	.LCFI2:
 589              		.loc 1 745 0
 457:sdk.c         **** 
 458:sdk.c         **** 
 459:sdk.c         **** 
 460:sdk.c         **** /* This function demonstrates a simple waypoint command generation. The switch on Channel 7 is used
 461:sdk.c         ****  * to activate a 15m by 15m square. Therefore a waypoint is calculated from the current position an
 462:sdk.c         ****  * height and is transmitted to the low level processor. The waypoint status is monitored to switch
 463:sdk.c         ****  * the next waypoint after the current one is reached.
 464:sdk.c         ****  *
 465:sdk.c         ****  * wpCtrlWpCmd is used to send a command to the low level processor. Different options like waypoin
 466:sdk.c         ****  * are available. See LL_HL_comm.h for WP_CMD_* defines
 467:sdk.c         ****  *
 468:sdk.c         ****  * wpCtrlWpCmdUpdated has to be set to 1 to send the command. When the cmd is sent it is set back t
 469:sdk.c         ****  *
 470:sdk.c         ****  * wpCtrlAckTrigger is set to 1 when the LL accepts the waypoint
 471:sdk.c         ****  *
 472:sdk.c         ****  * wpCtrlNavStatus gives you a navigation status. See WP_NAVSTAT_* defines in SDK.h for options
 473:sdk.c         ****  *
 474:sdk.c         ****  * wpCtrlDistToWp gives you the current distance to the current waypoint in dm (= 10 cm)
 475:sdk.c         ****  */
 476:sdk.c         **** void SDK_EXAMPLE_gps_waypoint_control()
 477:sdk.c         **** {
 478:sdk.c         **** 	static unsigned char wpExampleState=0;
 479:sdk.c         **** 	static double originLat,originLon;
 480:sdk.c         **** 
 481:sdk.c         **** 
 482:sdk.c         **** 	WO_SDK.ctrl_mode=0x03;
 483:sdk.c         **** 
 484:sdk.c         **** 	WO_SDK.ctrl_enabled=1;  //0: disable control by HL processor
 485:sdk.c         **** 							//1: enable control by HL processor
 486:sdk.c         **** 
 487:sdk.c         **** 	switch (wpExampleState)
 488:sdk.c         **** 	{
 489:sdk.c         **** 		//prior to start, the lever on channel 7 has to be in "OFF" position
 490:sdk.c         **** 		case 0:
 491:sdk.c         **** 		if ((RO_ALL_Data.channel[6]<1600) || (wpExampleActive))
 492:sdk.c         **** 			wpExampleState=1;
 493:sdk.c         **** 		break;
 494:sdk.c         **** 
 495:sdk.c         **** 		case 1:
 496:sdk.c         **** 		if ((RO_ALL_Data.channel[6]>2400) || (wpExampleActive))
 497:sdk.c         **** 		{
 498:sdk.c         **** 			double lat,lon;
 499:sdk.c         **** 			//lever was set to "ON" state -> calculate and send first waypoint and switch state
 500:sdk.c         **** 
 501:sdk.c         **** 			//fill waypoint structure
 502:sdk.c         **** 			wpToLL.max_speed=100;
 503:sdk.c         **** 			wpToLL.pos_acc=3000; 	//3m accuracy
 504:sdk.c         **** 			wpToLL.time=400; 		//4 seconds waiting time at each waypoint
 505:sdk.c         **** 			wpToLL.wp_activated=1;
 506:sdk.c         **** 
 507:sdk.c         **** 			//see LL_HL_comm.h for WPPROP defines
 508:sdk.c         **** 			wpToLL.properties=WPPROP_ABSCOORDS|WPPROP_AUTOMATICGOTO|WPPROP_HEIGHTENABLED|WPPROP_YAWENABLED;
 509:sdk.c         **** 
 510:sdk.c         **** 			//use current height and yaw
 511:sdk.c         **** 			wpToLL.yaw=RO_ALL_Data.angle_yaw; //use current yaw
 512:sdk.c         **** 			wpToLL.height=RO_ALL_Data.fusion_height; //use current height
 513:sdk.c         **** 
 514:sdk.c         **** 			originLat=(double)GPS_Data.latitude/10000000.0;
 515:sdk.c         **** 			originLon=(double)GPS_Data.longitude/10000000.0;
 516:sdk.c         **** 
 517:sdk.c         **** 			//calculate a position 15m north of us
 518:sdk.c         **** 			xy2latlon(originLat,originLon,0.0,15.0,&lat,&lon);
 519:sdk.c         **** 
 520:sdk.c         **** 			wpToLL.X=lon*10000000;
 521:sdk.c         **** 			wpToLL.Y=lat*10000000;
 522:sdk.c         **** 
 523:sdk.c         **** 			//calc chksum
 524:sdk.c         **** 			wpToLL.chksum = 0xAAAA
 525:sdk.c         **** 									+ wpToLL.yaw
 526:sdk.c         **** 									+ wpToLL.height
 527:sdk.c         **** 									+ wpToLL.time
 528:sdk.c         **** 									+ wpToLL.X
 529:sdk.c         **** 									+ wpToLL.Y
 530:sdk.c         **** 									+ wpToLL.max_speed
 531:sdk.c         **** 									+ wpToLL.pos_acc
 532:sdk.c         **** 									+ wpToLL.properties
 533:sdk.c         **** 									+ wpToLL.wp_activated;
 534:sdk.c         **** 
 535:sdk.c         **** 			//send waypoint
 536:sdk.c         **** 			wpCtrlAckTrigger=0;
 537:sdk.c         **** 			wpCtrlWpCmd=WP_CMD_SINGLE_WP;
 538:sdk.c         **** 			wpCtrlWpCmdUpdated=1;
 539:sdk.c         **** 			wpExampleWpNr=0;
 540:sdk.c         **** 			wpExampleState=2;
 541:sdk.c         **** 
 542:sdk.c         **** 		}
 543:sdk.c         **** 		break;
 544:sdk.c         **** 
 545:sdk.c         **** 		case 2:
 546:sdk.c         **** 			//wait until cmd is processed and sent to LL processor
 547:sdk.c         **** 			if ((wpCtrlWpCmdUpdated==0) && (wpCtrlAckTrigger))
 548:sdk.c         **** 			{
 549:sdk.c         **** 				//check if waypoint was reached and wait time is over
 550:sdk.c         **** 				if (wpCtrlNavStatus&(WP_NAVSTAT_REACHED_POS_TIME))
 551:sdk.c         **** 				{
 552:sdk.c         **** 					//new waypoint
 553:sdk.c         **** 					double lat,lon;
 554:sdk.c         **** 
 555:sdk.c         **** 					//fill waypoint structure
 556:sdk.c         **** 					wpToLL.max_speed=100;
 557:sdk.c         **** 					wpToLL.pos_acc=3000; //3m accuracy
 558:sdk.c         **** 					wpToLL.time=400; //4 seconds wait time
 559:sdk.c         **** 					wpToLL.wp_activated=1;
 560:sdk.c         **** 
 561:sdk.c         **** 					//see LL_HL_comm.h for WPPROP defines
 562:sdk.c         **** 					wpToLL.properties=WPPROP_ABSCOORDS|WPPROP_AUTOMATICGOTO|WPPROP_HEIGHTENABLED|WPPROP_YAWENABLED
 563:sdk.c         **** 
 564:sdk.c         **** 					//use current height and yaw
 565:sdk.c         **** 					wpToLL.yaw=RO_ALL_Data.angle_yaw; //use current yaw
 566:sdk.c         **** 					wpToLL.height=RO_ALL_Data.fusion_height; //use current height
 567:sdk.c         **** 
 568:sdk.c         **** 					//calculate a position 15m north and 15m east of origin
 569:sdk.c         **** 					xy2latlon(originLat,originLon,15.0,15.0,&lat,&lon);
 570:sdk.c         **** 
 571:sdk.c         **** 					wpToLL.X=lon*10000000;
 572:sdk.c         **** 					wpToLL.Y=lat*10000000;
 573:sdk.c         **** 
 574:sdk.c         **** 					//calc chksum
 575:sdk.c         **** 					wpToLL.chksum = 0xAAAA
 576:sdk.c         **** 											+ wpToLL.yaw
 577:sdk.c         **** 											+ wpToLL.height
 578:sdk.c         **** 											+ wpToLL.time
 579:sdk.c         **** 											+ wpToLL.X
 580:sdk.c         **** 											+ wpToLL.Y
 581:sdk.c         **** 											+ wpToLL.max_speed
 582:sdk.c         **** 											+ wpToLL.pos_acc
 583:sdk.c         **** 											+ wpToLL.properties
 584:sdk.c         **** 											+ wpToLL.wp_activated;
 585:sdk.c         **** 					//send waypoint
 586:sdk.c         **** 					wpCtrlAckTrigger=0;
 587:sdk.c         **** 					wpCtrlWpCmd=WP_CMD_SINGLE_WP;
 588:sdk.c         **** 					wpCtrlWpCmdUpdated=1;
 589:sdk.c         **** 					wpExampleWpNr++;
 590:sdk.c         **** 
 591:sdk.c         **** 					wpExampleState=3;
 592:sdk.c         **** 				}
 593:sdk.c         **** 
 594:sdk.c         **** 				if (wpCtrlNavStatus&WP_NAVSTAT_PILOT_ABORT)
 595:sdk.c         **** 				{
 596:sdk.c         **** 					wpExampleActive=0;
 597:sdk.c         **** 					wpExampleState=0;
 598:sdk.c         **** 				}
 599:sdk.c         **** 
 600:sdk.c         **** 
 601:sdk.c         **** 			}
 602:sdk.c         **** 			if ((RO_ALL_Data.channel[6]<1600) && (wpExampleActive==0))
 603:sdk.c         **** 						wpExampleState=0;
 604:sdk.c         **** 		break;
 605:sdk.c         **** 
 606:sdk.c         **** 		case 3:
 607:sdk.c         **** 			//wait until cmd is processed and sent to LL processor
 608:sdk.c         **** 			if ((wpCtrlWpCmdUpdated==0) && (wpCtrlAckTrigger))
 609:sdk.c         **** 			{
 610:sdk.c         **** 				//check if waypoint was reached and wait time is over
 611:sdk.c         **** 				if (wpCtrlNavStatus&(WP_NAVSTAT_REACHED_POS_TIME))
 612:sdk.c         **** 				{
 613:sdk.c         **** 					//new waypoint
 614:sdk.c         **** 					double lat,lon;
 615:sdk.c         **** 
 616:sdk.c         **** 					//fill waypoint structure
 617:sdk.c         **** 					wpToLL.max_speed=100;
 618:sdk.c         **** 					wpToLL.pos_acc=3000; //3m accuracy
 619:sdk.c         **** 					wpToLL.time=400; //4 seconds wait time
 620:sdk.c         **** 					wpToLL.wp_activated=1;
 621:sdk.c         **** 
 622:sdk.c         **** 					//see LL_HL_comm.h for WPPROP defines
 623:sdk.c         **** 					wpToLL.properties=WPPROP_ABSCOORDS|WPPROP_AUTOMATICGOTO|WPPROP_HEIGHTENABLED|WPPROP_YAWENABLED
 624:sdk.c         **** 
 625:sdk.c         **** 					//use current height and yaw
 626:sdk.c         **** 					wpToLL.yaw=RO_ALL_Data.angle_yaw; //use current yaw
 627:sdk.c         **** 					wpToLL.height=RO_ALL_Data.fusion_height; //use current height
 628:sdk.c         **** 
 629:sdk.c         **** 					//calculate a position 15m east of origin
 630:sdk.c         **** 					xy2latlon(originLat,originLon,15.0,0.0,&lat,&lon);
 631:sdk.c         **** 
 632:sdk.c         **** 					wpToLL.X=lon*10000000;
 633:sdk.c         **** 					wpToLL.Y=lat*10000000;
 634:sdk.c         **** 
 635:sdk.c         **** 					//calc chksum
 636:sdk.c         **** 					wpToLL.chksum = 0xAAAA
 637:sdk.c         **** 											+ wpToLL.yaw
 638:sdk.c         **** 											+ wpToLL.height
 639:sdk.c         **** 											+ wpToLL.time
 640:sdk.c         **** 											+ wpToLL.X
 641:sdk.c         **** 											+ wpToLL.Y
 642:sdk.c         **** 											+ wpToLL.max_speed
 643:sdk.c         **** 											+ wpToLL.pos_acc
 644:sdk.c         **** 											+ wpToLL.properties
 645:sdk.c         **** 											+ wpToLL.wp_activated;
 646:sdk.c         **** 
 647:sdk.c         **** 					//send waypoint
 648:sdk.c         **** 					wpCtrlAckTrigger=0;
 649:sdk.c         **** 					wpCtrlWpCmd=WP_CMD_SINGLE_WP;
 650:sdk.c         **** 					wpCtrlWpCmdUpdated=1;
 651:sdk.c         **** 					wpExampleWpNr++;
 652:sdk.c         **** 
 653:sdk.c         **** 					wpExampleState=4;
 654:sdk.c         **** 				}
 655:sdk.c         **** 
 656:sdk.c         **** 				if (wpCtrlNavStatus&WP_NAVSTAT_PILOT_ABORT)
 657:sdk.c         **** 				{
 658:sdk.c         **** 					wpExampleActive=0;
 659:sdk.c         **** 					wpExampleState=0;
 660:sdk.c         **** 				}
 661:sdk.c         **** 
 662:sdk.c         **** 
 663:sdk.c         **** 			}
 664:sdk.c         **** 			if ((RO_ALL_Data.channel[6]<1600) && (wpExampleActive==0))
 665:sdk.c         **** 						wpExampleState=0;
 666:sdk.c         **** 		break;
 667:sdk.c         **** 
 668:sdk.c         **** 		case 4:
 669:sdk.c         **** 			//wait until cmd is processed and sent to LL processor
 670:sdk.c         **** 			if ((wpCtrlWpCmdUpdated==0) && (wpCtrlAckTrigger))
 671:sdk.c         **** 			{
 672:sdk.c         **** 				//check if waypoint was reached and wait time is over
 673:sdk.c         **** 				if (wpCtrlNavStatus&(WP_NAVSTAT_REACHED_POS_TIME))
 674:sdk.c         **** 				{
 675:sdk.c         **** 
 676:sdk.c         **** 					//fill waypoint structure
 677:sdk.c         **** 					wpToLL.max_speed=100;
 678:sdk.c         **** 					wpToLL.pos_acc=3000; //3m accuracy
 679:sdk.c         **** 					wpToLL.time=400; //4 seconds wait time
 680:sdk.c         **** 					wpToLL.wp_activated=1;
 681:sdk.c         **** 
 682:sdk.c         **** 					//see LL_HL_comm.h for WPPROP defines
 683:sdk.c         **** 					wpToLL.properties=WPPROP_ABSCOORDS|WPPROP_AUTOMATICGOTO|WPPROP_HEIGHTENABLED|WPPROP_YAWENABLED
 684:sdk.c         **** 
 685:sdk.c         **** 					//use current height and yaw
 686:sdk.c         **** 					wpToLL.yaw=RO_ALL_Data.angle_yaw; //use current yaw
 687:sdk.c         **** 					wpToLL.height=RO_ALL_Data.fusion_height; //use current height
 688:sdk.c         **** 
 689:sdk.c         **** 					//go to the beginning
 690:sdk.c         **** 
 691:sdk.c         **** 					wpToLL.X=originLon*10000000;
 692:sdk.c         **** 					wpToLL.Y=originLat*10000000;
 693:sdk.c         **** 
 694:sdk.c         **** 					//calc chksum
 695:sdk.c         **** 					wpToLL.chksum = 0xAAAA
 696:sdk.c         **** 											+ wpToLL.yaw
 697:sdk.c         **** 											+ wpToLL.height
 698:sdk.c         **** 											+ wpToLL.time
 699:sdk.c         **** 											+ wpToLL.X
 700:sdk.c         **** 											+ wpToLL.Y
 701:sdk.c         **** 											+ wpToLL.max_speed
 702:sdk.c         **** 											+ wpToLL.pos_acc
 703:sdk.c         **** 											+ wpToLL.properties
 704:sdk.c         **** 											+ wpToLL.wp_activated;
 705:sdk.c         **** 
 706:sdk.c         **** 					//send waypoint
 707:sdk.c         **** 					wpCtrlAckTrigger=0;
 708:sdk.c         **** 					wpCtrlWpCmd=WP_CMD_SINGLE_WP;
 709:sdk.c         **** 					wpCtrlWpCmdUpdated=1;
 710:sdk.c         **** 
 711:sdk.c         **** 					wpExampleWpNr++;
 712:sdk.c         **** 
 713:sdk.c         **** 					wpExampleState=0;
 714:sdk.c         **** 					wpExampleActive=0;
 715:sdk.c         **** 				}
 716:sdk.c         **** 
 717:sdk.c         **** 				if (wpCtrlNavStatus&WP_NAVSTAT_PILOT_ABORT)
 718:sdk.c         **** 				{
 719:sdk.c         **** 					wpExampleActive=0;
 720:sdk.c         **** 					wpExampleState=0;
 721:sdk.c         **** 				}
 722:sdk.c         **** 
 723:sdk.c         **** 
 724:sdk.c         **** 			}
 725:sdk.c         **** 			if ((RO_ALL_Data.channel[6]<1600) && (wpExampleActive==0))
 726:sdk.c         **** 						wpExampleState=0;
 727:sdk.c         **** 		break;
 728:sdk.c         **** 
 729:sdk.c         **** 		default:
 730:sdk.c         **** 			wpExampleState=0;
 731:sdk.c         **** 		break;
 732:sdk.c         **** 	}
 733:sdk.c         **** 
 734:sdk.c         **** }
 735:sdk.c         **** 
 736:sdk.c         **** int SDK_EXAMPLE_turn_motors_on(void) //hold throttle stick down and yaw stick fully left to turn mo
 737:sdk.c         **** {
 590              	loc 1 748 0
 591              		mov	lr, #0
 592              		.loc 1 750 0
 593              		cmp	ip, #1000
 738:sdk.c         **** 	static int timeout=0;
 739:sdk.c         **** 
 740:sdk.c         **** 	WO_SDK.ctrl_mode=0x02;	//0x00: direct individual motor control: individual commands for motors 0..
 741:sdk.c         **** 							//0x01: direct motor control using standard output mapping: commands are interpreted as pitc
 742:sdk.c         **** 							//0x02: attitude and throttle control: commands are input for standard attitude controller
 743:sdk.c         **** 							//0x03: GPS waypoint control
 744:sdk.c         **** 
 745:sdk.c         **** 	WO_SDK.ctrl_enabled=1;  //0: disable control by HL processor
 746:sdk.c         **** 							//1: enable control by HL processor
 747:sdk.c         **** 
 748:sdk.c         **** 	WO_SDK.disable_motor_onoff_by_stick=0; //make sure stick command is accepted
 749:sdk.c         **** 
 750:sdk.c         **** 	if(++timeout>=1000)
 594              	c 1 740 0
 595 04b8 7C009FE5 		mov	r3, #2
 596 04bc 003090E5 		.loc 1 750 0
 597              		str	ip, [r0, #0]
 598 04c0 78209FE5 		.loc 1 752 0
 599              		mov	r4, r1
 600 04c4 01C083E2 		.loc 1 740 0
 601              		strb	r3, [r2, #0]
 602 04c8 10402DE9 		.loc 1 748 0
 603              		strb	lr, [r2, #2]
 604              		.loc 1 745 0
 605 04cc 0110A0E3 		strb	r1, [r2, #1]
 606              		.loc 1 752 0
 607 04d0 00E0A0E3 		strge	lr, [r0, #0]
 608              		.loc 1 750 0
 609 04d4 FA0F5CE3 		bge	.L76
 610              		.loc 1 764 0
 611 04d8 0230A0E3 		ldr	r1, .L80+8
 612              		.loc 1 766 0
 613 04dc 00C080E5 		mvn	r3, #2032
 751:sdk.c         **** 	{
 752:sdk.c         **** 		timeout=0;
 614              	p, #500
 615 04e0 0140A0E1 		.loc 1 766 0
 616              		sub	r3, r3, #14
 617 04e4 0030C2E5 		strleh	r3, [r1, #4]	@ movhi
 618              		.loc 1 757 0
 619 04e8 02E0C2E5 		movgt	r3, #12	@ movhi
 620              		.loc 1 764 0
 621 04ec 0110C2E5 		movle	r3, #12	@ movhi
 622              		.loc 1 759 0
 623 04f0 00E080A5 		strgth	lr, [r1, #4]	@ movhi
 624              		.loc 1 757 0
 625 04f4 0D0000AA 		strgth	r3, [r1, #8]	@ movhi
 753:sdk.c         **** 		return(1); //1 => start sequence completed => motors running => user can stop calling this functi
 754:sdk.c         **** 	}
 755:sdk.c         **** 	else if(timeout>500) //neutral stick command for 500 ms
 756:sdk.c         **** 	{
 757:sdk.c         **** 		WO_CTRL_Input.ctrl=0x0C;	//0x0C: enable throttle control and yaw control
 758:sdk.c         **** 		WO_CTRL_Input.thrust=0;
 759:sdk.c         **** 		WO_CTRL_Input.yaw=0;
 760:sdk.c         **** 		return(0);
 761:sdk.c         **** 	}
 762:sdk.c         **** 	else //hold stick command for 500 ms
 763:sdk.c         **** 	{
 764:sdk.c         **** 		WO_CTRL_Input.ctrl=0x0C;	//0x0C: enable throttle control and yaw control
 626              	0
 627 04f8 44109FE5 		strgth	lr, [r1, #6]	@ movhi
 765:sdk.c         **** 		WO_CTRL_Input.thrust=0;
 766:sdk.c         **** 		WO_CTRL_Input.yaw=-2047;
 628              	loc 1 765 0
 629 04fc 7F3EE0E3 		strleh	lr, [r1, #6]	@ movhi
 630              		.loc 1 764 0
 631 0500 7D0F5CE3 		strleh	r3, [r1, #8]	@ movhi
 632              		.loc 1 759 0
 633 0504 0E3043E2 		mov	r4, lr
 634 0508 B430C1D1 		.loc 1 766 0
 635              		movle	r4, lr
 636 050c 0C30A0C3 	.L76:
 637              		.loc 1 770 0
 638 0510 0C30A0D3 		mov	r0, r4
 639              		ldmfd	sp!, {r4, lr}
 640 0514 B4E0C1C1 		bx	lr
 641              	.L81:
 642 0518 B830C1C1 		.align	2
 643              	.L80:
 644 051c B6E0C1C1 		.word	timeout.2831
 645              		.word	WO_SDK
 646 0520 B6E0C1D1 		.word	WO_CTRL_Input
 647              	.LFE10:
 649              		.align	2
 650 0528 0E40A0E1 		.global	SDK_EXAMPLE_turn_motors_off
 652 052c 0E40A0D1 	SDK_EXAMPLE_turn_motors_off:
 653              	.LFB11:
 767:sdk.c         **** 		return(0);
 768:sdk.c         **** 	}
 769:sdk.c         **** 
 770:sdk.c         **** }
 654              	supports interworking.
 655 0530 0400A0E1 		@ args = 0, pretend = 0, frame = 0
 656 0534 1040BDE8 		@ frame_needed = 0, uses_anonymous_args = 0
 657 0538 1EFF2FE1 		.loc 1 786 0
 658              		ldr	r0, .L89
 659              		ldr	r3, [r0, #0]
 660              		.loc 1 776 0
 661 053c 4C000000 		ldr	r2, .L89+4
 662 0540 00000000 		.loc 1 786 0
 663 0544 00000000 		add	ip, r3, #1
 664              		.loc 1 773 0
 665              		stmfd	sp!, {r4, lr}
 666              	.LCFI3:
 667              		.loc 1 781 0
 668              		mov	r1, #1
 669              		.loc 1 784 0
 670              		mov	lr, #0
 771:sdk.c         **** 
 772:sdk.c         **** int SDK_EXAMPLE_turn_motors_off(void) //hold throttle stick down and yaw stick fully right to turn 
 773:sdk.c         **** {
 671              	p	ip, #1000
 672              		.loc 1 776 0
 673              		mov	r3, #2
 674              		.loc 1 786 0
 774:sdk.c         **** 	static int timeout=0;
 775:sdk.c         **** 
 776:sdk.c         **** 	WO_SDK.ctrl_mode=0x02;	//0x00: direct individual motor control: individual commands for motors 0..
 777:sdk.c         **** 							//0x01: direct motor control using standard output mapping: commands are interpreted as pitc
 778:sdk.c         **** 							//0x02: attitude and throttle control: commands are input for standard attitude controller
 779:sdk.c         **** 							//0x03: GPS waypoint control
 780:sdk.c         **** 
 781:sdk.c         **** 	WO_SDK.ctrl_enabled=1;  //0: disable control by HL processor
 782:sdk.c         **** 							//1: enable control by HL processor
 783:sdk.c         **** 
 784:sdk.c         **** 	WO_SDK.disable_motor_onoff_by_stick=0; //make sure stick command is accepted
 785:sdk.c         **** 
 786:sdk.c         **** 	if(++timeout>=1000)
 675              		ip, [r0, #0]
 676 0548 7C009FE5 		.loc 1 788 0
 677 054c 003090E5 		mov	r4, r1
 678              		.loc 1 776 0
 679 0550 78209FE5 		strb	r3, [r2, #0]
 680              		.loc 1 784 0
 681 0554 01C083E2 		strb	lr, [r2, #2]
 682              		.loc 1 781 0
 683 0558 10402DE9 		strb	r1, [r2, #1]
 684              		.loc 1 788 0
 685              		strge	lr, [r0, #0]
 686 055c 0110A0E3 		.loc 1 786 0
 687              		bge	.L85
 688 0560 00E0A0E3 		.loc 1 800 0
 689              		ldr	r2, .L89+8
 690 0564 FA0F5CE3 		.loc 1 791 0
 691              		cmp	ip, #500
 692 0568 0230A0E3 		.loc 1 793 0
 693              		mov	r3, r2
 694 056c 00C080E5 		.loc 1 802 0
 787:sdk.c         **** 	{
 788:sdk.c         **** 		timeout=0;
 695              	loc 1 795 0
 696 0570 0140A0E1 		strgth	lr, [r2, #4]	@ movhi
 697              		.loc 1 802 0
 698 0574 0030C2E5 		strleh	r3, [r2, #4]	@ movhi
 699              		.loc 1 793 0
 700 0578 02E0C2E5 		movgt	r2, #12	@ movhi
 701              		.loc 1 800 0
 702 057c 0110C2E5 		movle	r3, #12	@ movhi
 703              		.loc 1 793 0
 704 0580 00E080A5 		strgth	r2, [r3, #8]	@ movhi
 705              		.loc 1 794 0
 706 0584 0D0000AA 		strgth	lr, [r3, #6]	@ movhi
 789:sdk.c         **** 		return(1); //1 => stop sequence completed => motors turned off => user can stop calling this func
 790:sdk.c         **** 	}
 791:sdk.c         **** 	else if(timeout>500) //neutral stick command for 500 ms
 792:sdk.c         **** 	{
 793:sdk.c         **** 		WO_CTRL_Input.ctrl=0x0C;	//0x0C: enable throttle control and yaw control
 794:sdk.c         **** 		WO_CTRL_Input.thrust=0;
 795:sdk.c         **** 		WO_CTRL_Input.yaw=0;
 796:sdk.c         **** 		return(0);
 797:sdk.c         **** 	}
 798:sdk.c         **** 	else //hold stick command for 500 ms
 799:sdk.c         **** 	{
 800:sdk.c         **** 		WO_CTRL_Input.ctrl=0x0C;	//0x0C: enable throttle control and yaw control
 707              	0
 708 0588 44209FE5 		strleh	lr, [r2, #6]	@ movhi
 709              		.loc 1 800 0
 710 058c 7D0F5CE3 		strleh	r3, [r2, #8]	@ movhi
 711              		.loc 1 795 0
 712 0590 0230A0E1 		mov	r4, lr
 801:sdk.c         **** 		WO_CTRL_Input.thrust=0;
 802:sdk.c         **** 		WO_CTRL_Input.yaw=2047;
 713              	1 802 0
 714 0594 3E3BE0D3 		movle	r4, lr
 715              	.L85:
 716 0598 B4E0C2C1 		.loc 1 805 0
 717              		mov	r0, r4
 718 059c B430C2D1 		ldmfd	sp!, {r4, lr}
 719              		bx	lr
 720 05a0 0C20A0C3 	.L90:
 721              		.align	2
 722 05a4 0C30A0D3 	.L89:
 723              		.word	timeout.2838
 724 05a8 B820C3C1 		.word	WO_SDK
 725              		.word	WO_CTRL_Input
 726 05ac B6E0C3C1 	.LFE11:
 728 05b0 B6E0C2D1 		.global	__floatsidf
 729              		.global	__divdf3
 730 05b4 B830C2D1 		.global	__muldf3
 731              		.global	__fixdfsi
 732 05b8 0E40A0E1 		.align	2
 733              		.global	SDK_EXAMPLE_gps_waypoint_control
 735              	SDK_EXAMPLE_gps_waypoint_control:
 803:sdk.c         **** 		return(0);
 804:sdk.c         **** 	}
 805:sdk.c         **** }
 736              	 Function supports interworking.
 737 05c0 0400A0E1 		@ args = 0, pretend = 0, frame = 28
 738 05c4 1040BDE8 		@ frame_needed = 0, uses_anonymous_args = 0
 739 05c8 1EFF2FE1 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 740              	.LCFI4:
 741              		.loc 1 487 0
 742              		ldr	r9, .L143
 743 05cc 48000000 		.loc 1 482 0
 744 05d0 00000000 		ldr	r1, .L143+4
 745 05d4 00000000 		.loc 1 487 0
 746              		ldrb	r0, [r9, #0]	@ zero_extendqisi2
 747              		.loc 1 484 0
 748              		mov	r3, #1
 749              		.loc 1 482 0
 750              		mov	r2, #3
 751              		.loc 1 477 0
 752              		sub	sp, sp, #52
 753              	.LCFI5:
 754              		.loc 1 484 0
 755              		strb	r3, [r1, #1]
 756              		.loc 1 482 0
 757              		strb	r2, [r1, #0]
 758              		.loc 1 487 0
 759              		cmp	r0, #4
 760              		ldrls	pc, [pc, r0, asl #2]
 761 05d8 F04F2DE9 		b	.L92
 762              		.p2align 2
 763              	.L98:
 764 05dc 64969FE5 		.word	.L93
 765              		.word	.L94
 766 05e0 64169FE5 		.word	.L95
 767              		.word	.L96
 768 05e4 0000D9E5 		.word	.L97
 769              	.L92:
 770 05e8 0130A0E3 		.loc 1 730 0
 771              		mov	r3, #0
 772 05ec 0320A0E3 	.LVL1:
 773              	.L138:
 774 05f0 34D04DE2 		strb	r3, [r9, #0]
 775              	.LVL2:
 776              	.L128:
 777 05f4 0130C1E5 		.loc 1 734 0
 778              		add	sp, sp, #52
 779 05f8 0020C1E5 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 780              		bx	lr
 781 05fc 040050E3 	.LVL3:
 782 0600 00F19F97 	.L97:
 783 0604 040000EA 		.loc 1 670 0
 784              		ldr	fp, .L143+8
 785              		ldrb	sl, [fp, #0]	@ zero_extendqisi2
 786 0608 8C090000 		cmp	sl, #0
 787 060c 9C070000 		bne	.L120
 788 0610 48090000 		ldr	r2, .L143+12
 789 0614 58070000 		ldrb	r3, [r2, #0]	@ zero_extendqisi2
 790 0618 30060000 		cmp	r3, #0
 791              		beq	.L120
 792              		.loc 1 673 0
 793 061c 0030A0E3 		ldr	r3, .L143+16
 794              		ldrh	r7, [r3, #0]
 795              		tst	r7, #2
 796 0620 0030C9E5 		beq	.L123
 797              		.loc 1 677 0
 798              		ldr	r5, .L143+20
 799              		.loc 1 686 0
 800 0624 34D08DE2 		ldr	r3, .L143+24
 801 0628 F04FBDE8 		.loc 1 677 0
 802 062c 1EFF2FE1 		mov	ip, #100
 803              		.loc 1 686 0
 804              		ldr	r6, [r3, #36]
 805              		.loc 1 687 0
 806 0630 18B69FE5 		ldr	r4, [r3, #132]
 807 0634 00A0DBE5 		.loc 1 691 0
 808 0638 00005AE3 		ldr	r1, .L143+28
 809 063c 4000001A 		.loc 1 677 0
 810 0640 0C269FE5 		strb	ip, [r5, #5]
 811 0644 0030D2E5 		.loc 1 678 0
 812 0648 000053E3 		mov	lr, #2992
 813 064c 3C00000A 		.loc 1 683 0
 814              		sub	ip, ip, #77
 815 0650 00369FE5 		.loc 1 678 0
 816 0654 B070D3E1 		add	lr, lr, #8
 817 0658 020017E3 		.loc 1 680 0
 818 065c 3400000A 		mov	r8, #1
 819              		.loc 1 683 0
 820 0660 F4559FE5 		strb	ip, [r5, #4]
 821              		.loc 1 679 0
 822 0664 F4359FE5 		mov	ip, #400	@ movhi
 823              		.loc 1 691 0
 824 0668 64C0A0E3 		ldmia	r1, {r2-r3}
 825              		.loc 1 679 0
 826 066c 246093E5 		strh	ip, [r5, #6]	@ movhi
 827              		.loc 1 678 0
 828 0670 844093E5 		strh	lr, [r5, #8]	@ movhi
 829              		.loc 1 686 0
 830 0674 E8159FE5 		str	r6, [r5, #20]
 831              		.loc 1 687 0
 832 0678 05C0C5E5 		str	r4, [r5, #24]
 833              		.loc 1 691 0
 834 067c BBEEA0E3 		ldr	r0, .L143+32
 835              		mov	r1, #0
 836 0680 4DC04CE2 		.loc 1 680 0
 837              		str	r8, [r5, #0]
 838 0684 08E08EE2 		.loc 1 691 0
 839              		bl	__muldf3
 840 0688 0180A0E3 		bl	__fixdfsi
 841              		str	r0, [sp, #32]
 842 068c 04C0C5E5 		ldr	lr, [sp, #32]
 843              		.loc 1 692 0
 844 0690 19CEA0E3 		ldr	r1, .L143+36
 845              		.loc 1 691 0
 846 0694 0C0091E8 		str	lr, [r5, #12]
 847              		.loc 1 692 0
 848 0698 B6C0C5E1 		ldmia	r1, {r2-r3}
 849              		ldr	r0, .L143+32
 850 069c B8E0C5E1 		mov	r1, #0
 851              		bl	__muldf3
 852 06a0 146085E5 		bl	__fixdfsi
 853              		.loc 1 711 0
 854 06a4 184085E5 		ldr	r2, .L143+40
 855              		ldrb	r3, [r2, #0]	@ zero_extendqisi2
 856 06a8 B8059FE5 		.loc 1 695 0
 857 06ac 0010A0E3 		add	r6, r6, #400
 858              		ldr	r1, [sp, #32]
 859 06b0 008085E5 		.loc 1 711 0
 860              		add	r3, r3, r8
 861 06b4 FEFFFFEB 		.loc 1 695 0
 862 06b8 FEFFFFEB 		add	r4, r4, r6
 863 06bc 20008DE5 		.loc 1 711 0
 864 06c0 20E09DE5 		strb	r3, [r2, #0]
 865              		.loc 1 695 0
 866 06c4 A0159FE5 		add	r4, r4, r1
 867              		.loc 1 707 0
 868 06c8 0CE085E5 		ldr	r2, .L143+12
 869              		.loc 1 695 0
 870 06cc 0C0091E8 		sub	r4, r4, #18688
 871 06d0 90059FE5 		sub	r4, r4, #34
 872 06d4 0010A0E3 		.loc 1 707 0
 873 06d8 FEFFFFEB 		strb	sl, [r2, #0]
 874 06dc FEFFFFEB 		.loc 1 708 0
 875              		ldr	r3, .L143+44
 876 06e0 88259FE5 		.loc 1 714 0
 877 06e4 0030D2E5 		ldr	r2, .L143+48
 878              		.loc 1 695 0
 879 06e8 196E86E2 		add	r4, r0, r4
 880 06ec 20109DE5 		strh	r4, [r5, #10]	@ movhi
 881              		.loc 1 709 0
 882 06f0 083083E0 		strb	r8, [fp, #0]
 883              		.loc 1 708 0
 884 06f4 064084E0 		strb	r8, [r3, #0]
 885              		.loc 1 714 0
 886 06f8 0030C2E5 		strb	sl, [r2, #0]
 887              		.loc 1 692 0
 888 06fc 014084E0 		str	r0, [r5, #16]
 889              		.loc 1 713 0
 890 0700 4C259FE5 		strb	sl, [r9, #0]
 891              	.L123:
 892 0704 494C44E2 		.loc 1 717 0
 893 0708 224044E2 		tst	r7, #8
 894              		.loc 1 719 0
 895 070c 00A0C2E5 		ldrne	r3, .L143+48
 896              		.loc 1 720 0
 897 0710 5C359FE5 		strneb	sl, [r9, #0]
 898              		.loc 1 719 0
 899 0714 5C259FE5 		strneb	sl, [r3, #0]
 900              	.L120:
 901 0718 044080E0 		.loc 1 725 0
 902 071c BA40C5E1 		ldr	r4, .L143+24
 903              		ldrh	r3, [r4, #24]
 904 0720 0080CBE5 		cmp	r3, #1600
 905              		bcc	.L139
 906 0724 0080C3E5 		b	.L128
 907              	.L96:
 908 0728 00A0C2E5 		.loc 1 608 0
 909              		ldr	sl, .L143+8
 910 072c 100085E5 		ldrb	r8, [sl, #0]	@ zero_extendqisi2
 911              		cmp	r8, #0
 912 0730 00A0C9E5 		bne	.L112
 913              		ldr	fp, .L143+12
 914              		ldrb	r3, [fp, #0]	@ zero_extendqisi2
 915 0734 080017E3 		cmp	r3, #0
 916              		bne	.L141
 917 0738 38359F15 	.LVL4:
 918              	.L112:
 919 073c 00A0C915 		.loc 1 664 0
 920              		ldr	r1, .L143+24
 921 0740 00A0C315 		ldrh	r3, [r1, #24]
 922              		cmp	r3, #1600
 923              		bcs	.L128
 924 0744 14459FE5 	.L139:
 925 0748 B831D4E1 		.loc 1 725 0
 926 074c 190D53E3 		ldr	r3, .L143+48
 927 0750 0C00003A 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 928 0754 B2FFFFEA 		cmp	r3, #0
 929              		beq	.L138
 930              		b	.L128
 931 0758 F0A49FE5 	.LVL5:
 932 075c 0080DAE5 	.L94:
 933 0760 000058E3 		.loc 1 496 0
 934 0764 0300001A 		ldr	r1, .L143+24
 935 0768 E4B49FE5 		ldrh	r3, [r1, #24]
 936 076c 0030DBE5 		cmp	r3, #2400
 937 0770 000053E3 		bhi	.L102
 938 0774 8F00001A 		ldr	r3, .L143+48
 939              		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 940              		cmp	r2, #0
 941              		beq	.L128
 942 0778 E0149FE5 	.L102:
 943 077c B831D1E1 	.LBB2:
 944 0780 190D53E3 		.loc 1 502 0
 945 0784 A6FFFF2A 		ldr	r6, .L143+20
 946              		.loc 1 512 0
 947              		ldr	ip, [r1, #132]
 948 0788 E8349FE5 		.loc 1 511 0
 949 078c 0030D3E5 		ldr	r1, [r1, #36]
 950 0790 000053E3 		.loc 1 514 0
 951 0794 A1FFFF0A 		ldr	r4, .L143+52
 952 0798 A1FFFFEA 		.loc 1 502 0
 953              		mov	r3, #100
 954              		.loc 1 503 0
 955              		mov	r2, #2992
 956 079c BC149FE5 		add	r2, r2, #8
 957 07a0 B831D1E1 		.loc 1 505 0
 958 07a4 960E53E3 		mov	sl, #1
 959 07a8 0300008A 		.loc 1 502 0
 960 07ac C4349FE5 		strb	r3, [r6, #5]
 961 07b0 0020D3E5 		.loc 1 511 0
 962 07b4 000052E3 		str	r1, [r6, #20]
 963 07b8 99FFFF0A 		.loc 1 508 0
 964              		sub	r3, r3, #77
 965              		.loc 1 504 0
 966              		mov	r1, #400	@ movhi
 967 07bc 98649FE5 		.loc 1 514 0
 968              		ldr	r0, [r4, #0]
 969 07c0 84C091E5 		.loc 1 512 0
 970              		str	ip, [r6, #24]
 971 07c4 241091E5 		.loc 1 503 0
 972              		strh	r2, [r6, #8]	@ movhi
 973 07c8 AC449FE5 		.loc 1 508 0
 974              		strb	r3, [r6, #4]
 975 07cc 6430A0E3 		.loc 1 504 0
 976              		strh	r1, [r6, #6]	@ movhi
 977 07d0 BB2EA0E3 		.loc 1 505 0
 978 07d4 082082E2 		str	sl, [r6, #0]
 979              		.loc 1 514 0
 980 07d8 01A0A0E3 		bl	__floatsidf
 981              		ldr	r2, .L143+32
 982 07dc 0530C6E5 		mov	r3, #0
 983              		bl	__divdf3
 984 07e0 141086E5 		str	r0, [sp, #24]
 985              		str	r1, [sp, #28]
 986 07e4 4D3043E2 		ldr	r3, .L143+36
 987              		.loc 1 515 0
 988 07e8 191EA0E3 		ldr	r0, [r4, #4]
 989              		.loc 1 514 0
 990 07ec 000094E5 		add	r4, sp, #24
 991              		ldmia	r4, {r4-r5}
 992 07f0 18C086E5 		stmia	r3, {r4-r5}
 993              		.loc 1 515 0
 994 07f4 B820C6E1 		bl	__floatsidf
 995              		ldr	r2, .L143+32
 996 07f8 0430C6E5 		mov	r3, #0
 997              		bl	__divdf3
 998 07fc B610C6E1 		ldr	ip, .L143+28
 999              		mov	r4, r0
 1000 0800 00A086E5 		mov	r5, r1
 1001              		stmia	ip, {r4-r5}
 1002 0804 FEFFFFEB 		.loc 1 518 0
 1003 0808 58249FE5 		mov	r2, r4
 1004 080c 0030A0E3 		mov	r3, r5
 1005 0810 FEFFFFEB 		mov	r4, #0
 1006 0814 18008DE5 		mov	r5, #0
 1007 0818 1C108DE5 		stmia	sp, {r4-r5}
 1008 081c 48349FE5 		mov	r4, #1073741824
 1009              		add	ip, sp, #44
 1010 0820 040094E5 		add	lr, sp, #36
 1011              		add	r0, sp, #24
 1012 0824 18408DE2 		ldmia	r0, {r0-r1}
 1013 0828 300094E8 		add	r4, r4, #3014656
 1014 082c 300083E8 		mov	r5, #0
 1015              		str	ip, [sp, #20]
 1016 0830 FEFFFFEB 		str	lr, [sp, #16]
 1017 0834 2C249FE5 		str	r4, [sp, #8]
 1018 0838 0030A0E3 		str	r5, [sp, #12]
 1019 083c FEFFFFEB 		bl	xy2latlon
 1020 0840 1CC49FE5 	.LVL6:
 1021 0844 0040A0E1 		.loc 1 520 0
 1022 0848 0150A0E1 		add	r2, sp, #44
 1023 084c 30008CE8 		ldmia	r2, {r2-r3}
 1024              		ldr	r0, .L143+32
 1025 0850 0420A0E1 		mov	r1, #0
 1026 0854 0530A0E1 		bl	__muldf3
 1027 0858 0040A0E3 		bl	__fixdfsi
 1028 085c 0050A0E3 		mov	r4, r0
 1029 0860 30008DE8 	.LVL7:
 1030 0864 0141A0E3 		.loc 1 521 0
 1031 0868 2CC08DE2 		add	r2, sp, #36
 1032 086c 24E08DE2 		ldmia	r2, {r2-r3}
 1033 0870 18008DE2 		ldr	r0, .L143+32
 1034 0874 030090E8 		mov	r1, #0
 1035 0878 2E4884E2 		.loc 1 520 0
 1036 087c 0050A0E3 		str	r4, [r6, #12]
 1037 0880 14C08DE5 		.loc 1 521 0
 1038 0884 10E08DE5 		bl	__muldf3
 1039 0888 08408DE5 		bl	__fixdfsi
 1040 088c 0C508DE5 		.loc 1 524 0
 1041 0890 FEFFFFEB 		ldrh	r2, [r6, #6]
 1042              		ldr	r3, [r6, #20]
 1043              		ldr	r1, [r6, #24]
 1044 0894 2C208DE2 		add	r3, r3, r2
 1045 0898 0C0092E8 		add	r1, r1, r3
 1046 089c C4039FE5 		ldrb	ip, [r6, #5]	@ zero_extendqisi2
 1047 08a0 0010A0E3 		add	r1, r1, r4
 1048 08a4 FEFFFFEB 		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 1049 08a8 FEFFFFEB 		add	ip, ip, r1
 1050 08ac 0040A0E1 		ldrh	r2, [r6, #8]
 1051              		ldr	r1, [r6, #0]
 1052              		add	r3, r3, ip
 1053 08b0 24208DE2 		add	r2, r0, r2
 1054 08b4 0C0092E8 		sub	r3, r3, #21760
 1055 08b8 A8039FE5 		add	r2, r2, r1
 1056 08bc 0010A0E3 		sub	r3, r3, #86
 1057              		add	r2, r2, r3
 1058 08c0 0C4086E5 		.loc 1 538 0
 1059              		ldr	r3, .L143+8
 1060 08c4 FEFFFFEB 		.loc 1 524 0
 1061 08c8 FEFFFFEB 		strh	r2, [r6, #10]	@ movhi
 1062              		.loc 1 539 0
 1063 08cc B620D6E1 		ldr	r2, .L143+40
 1064 08d0 143096E5 		.loc 1 536 0
 1065 08d4 181096E5 		mov	r1, #0
 1066 08d8 023083E0 		.loc 1 538 0
 1067 08dc 031081E0 		strb	sl, [r3, #0]
 1068 08e0 05C0D6E5 		.loc 1 540 0
 1069 08e4 041081E0 		mov	r3, #2
 1070 08e8 0430D6E5 		.loc 1 539 0
 1071 08ec 01C08CE0 		strb	r1, [r2, #0]
 1072 08f0 B820D6E1 		.loc 1 540 0
 1073 08f4 001096E5 		strb	r3, [r9, #0]
 1074 08f8 0C3083E0 		.loc 1 536 0
 1075 08fc 022080E0 		ldr	r2, .L143+12
 1076 0900 553C43E2 		.loc 1 537 0
 1077 0904 012082E0 		ldr	r3, .L143+44
 1078 0908 563043E2 		.loc 1 536 0
 1079 090c 032082E0 		strb	r1, [r2, #0]
 1080              		.loc 1 537 0
 1081 0910 38339FE5 		strb	sl, [r3, #0]
 1082              		.loc 1 521 0
 1083 0914 BA20C6E1 		str	r0, [r6, #16]
 1084              		b	.L128
 1085 0918 50239FE5 	.LVL8:
 1086              	.L95:
 1087 091c 0010A0E3 	.LBE2:
 1088              		.loc 1 547 0
 1089 0920 00A0C3E5 		ldr	sl, .L143+8
 1090              		ldrb	r8, [sl, #0]	@ zero_extendqisi2
 1091 0924 0230A0E3 		cmp	r8, #0
 1092              		bne	.L112
 1093 0928 0010C2E5 		ldr	fp, .L143+12
 1094              		ldrb	r3, [fp, #0]	@ zero_extendqisi2
 1095 092c 0030C9E5 		cmp	r3, #0
 1096              		beq	.L112
 1097 0930 1C239FE5 		.loc 1 550 0
 1098              		ldr	r5, .L143+16
 1099 0934 38339FE5 		ldrh	ip, [r5, #0]
 1100              		tst	ip, #2
 1101 0938 0010C2E5 		bne	.L142
 1102              	.LVL9:
 1103 093c 00A0C3E5 	.L115:
 1104              		.loc 1 656 0
 1105 0940 100086E5 		tst	ip, #8
 1106 0944 36FFFFEA 		.loc 1 658 0
 1107              		ldrne	r3, .L143+48
 1108              		.loc 1 659 0
 1109              		strneb	r8, [r9, #0]
 1110              		.loc 1 658 0
 1111 0948 00A39FE5 		strneb	r8, [r3, #0]
 1112 094c 0080DAE5 		b	.L112
 1113 0950 000058E3 	.LVL10:
 1114 0954 87FFFF1A 	.L93:
 1115 0958 F4B29FE5 		.loc 1 491 0
 1116 095c 0030DBE5 		ldr	r3, .L143+24
 1117 0960 000053E3 		ldrh	r2, [r3, #24]
 1118 0964 83FFFF0A 		cmp	r2, #1600
 1119              		bcc	.L99
 1120 0968 E8529FE5 		ldr	r3, .L143+48
 1121 096c B0C0D5E1 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1122 0970 02001CE3 		cmp	r2, #0
 1123 0974 6400001A 		beq	.L128
 1124              	.L99:
 1125              		.loc 1 492 0
 1126              		mov	r3, #1
 1127 0978 08001CE3 		strb	r3, [r9, #0]
 1128              		b	.L128
 1129 097c F4329F15 	.L141:
 1130              		.loc 1 611 0
 1131 0980 0080C915 		ldr	r2, .L143+16
 1132              		ldrh	ip, [r2, #0]
 1133 0984 0080C315 		tst	ip, #2
 1134 0988 7AFFFFEA 		beq	.L115
 1135              	.LBB3:
 1136              		.loc 1 630 0
 1137              		ldr	r3, .L143+36
 1138 098c CC329FE5 		ldr	ip, .L143+28
 1139 0990 B821D3E1 		.loc 1 626 0
 1140 0994 190D52E3 		ldr	r6, .L143+24
 1141 0998 0300003A 		.loc 1 617 0
 1142 099c D4329FE5 		ldr	r4, .L143+20
 1143 09a0 0020D3E5 		.loc 1 630 0
 1144 09a4 000052E3 		ldmia	r3, {r0-r1}
 1145 09a8 1DFFFF0A 		.loc 1 626 0
 1146              		ldr	r5, [r6, #36]
 1147              		.loc 1 630 0
 1148 09ac 0130A0E3 		ldmia	ip, {r2-r3}
 1149 09b0 0030C9E5 		.loc 1 618 0
 1150 09b4 1AFFFFEA 		mov	lr, #2992
 1151              		.loc 1 617 0
 1152              		mov	ip, #100
 1153 09b8 98229FE5 		.loc 1 627 0
 1154 09bc B0C0D2E1 		ldr	r6, [r6, #132]
 1155 09c0 02001CE3 		.loc 1 617 0
 1156 09c4 EBFFFF0A 		strb	ip, [r4, #5]
 1157              		.loc 1 618 0
 1158              		add	lr, lr, #8
 1159 09c8 9C329FE5 		.loc 1 623 0
 1160 09cc 90C29FE5 		sub	ip, ip, #77
 1161              		.loc 1 618 0
 1162 09d0 88629FE5 		strh	lr, [r4, #8]	@ movhi
 1163              		.loc 1 623 0
 1164 09d4 80429FE5 		strb	ip, [r4, #4]
 1165              		.loc 1 626 0
 1166 09d8 030093E8 		str	r5, [r4, #20]
 1167              		.loc 1 630 0
 1168 09dc 245096E5 		add	ip, sp, #36
 1169              		add	lr, sp, #44
 1170 09e0 0C009CE8 		mov	r5, #1073741824
 1171              		.loc 1 627 0
 1172 09e4 BBEEA0E3 		str	r6, [r4, #24]
 1173              		.loc 1 630 0
 1174 09e8 64C0A0E3 		add	r5, r5, #3014656
 1175              		str	ip, [sp, #16]
 1176 09ec 846096E5 		str	lr, [sp, #20]
 1177              		.loc 1 619 0
 1178 09f0 05C0C4E5 		mov	ip, #400	@ movhi
 1179              		.loc 1 620 0
 1180 09f4 08E08EE2 		mov	lr, #1
 1181              		.loc 1 630 0
 1182 09f8 4DC04CE2 		mov	r6, #0
 1183              		.loc 1 619 0
 1184 09fc B8E0C4E1 		strh	ip, [r4, #6]	@ movhi
 1185              		.loc 1 620 0
 1186 0a00 04C0C4E5 		str	lr, [r4, #0]
 1187              		.loc 1 630 0
 1188 0a04 145084E5 		stmia	sp, {r5-r6}
 1189              		mov	r5, #0
 1190 0a08 24C08DE2 		mov	r6, #0
 1191 0a0c 2CE08DE2 		str	r5, [sp, #8]
 1192 0a10 0151A0E3 		str	r6, [sp, #12]
 1193              		bl	xy2latlon
 1194 0a14 186084E5 	.LVL11:
 1195              		.loc 1 632 0
 1196 0a18 2E5885E2 		add	r2, sp, #44
 1197 0a1c 10C08DE5 		ldmia	r2, {r2-r3}
 1198 0a20 14E08DE5 		ldr	r0, .L143+32
 1199              		mov	r1, #0
 1200 0a24 19CEA0E3 		bl	__muldf3
 1201              		bl	__fixdfsi
 1202 0a28 01E0A0E3 		mov	r5, r0
 1203              	.LVL12:
 1204 0a2c 0060A0E3 		.loc 1 633 0
 1205              		add	r2, sp, #36
 1206 0a30 B6C0C4E1 		ldmia	r2, {r2-r3}
 1207              		.loc 1 632 0
 1208 0a34 00E084E5 		str	r5, [r4, #12]
 1209              		.loc 1 633 0
 1210 0a38 60008DE8 		ldr	r0, .L143+32
 1211 0a3c 0050A0E3 		mov	r1, #0
 1212 0a40 0060A0E3 		bl	__muldf3
 1213 0a44 08508DE5 		bl	__fixdfsi
 1214 0a48 0C608DE5 		.loc 1 636 0
 1215 0a4c FEFFFFEB 		ldrh	r1, [r4, #6]
 1216              		ldr	r3, [r4, #20]
 1217              		ldr	r2, [r4, #24]
 1218 0a50 2C208DE2 		add	r3, r3, r1
 1219 0a54 0C0092E8 		add	r2, r2, r3
 1220 0a58 08029FE5 		ldrb	ip, [r4, #5]	@ zero_extendqisi2
 1221 0a5c 0010A0E3 		add	r2, r2, r5
 1222 0a60 FEFFFFEB 		ldrb	r1, [r4, #4]	@ zero_extendqisi2
 1223 0a64 FEFFFFEB 		add	ip, ip, r2
 1224 0a68 0050A0E1 		ldrh	r3, [r4, #8]
 1225              		.loc 1 651 0
 1226              		ldr	r5, .L143+40
 1227 0a6c 24208DE2 		.loc 1 636 0
 1228 0a70 0C0092E8 		add	r1, r1, ip
 1229              		ldr	lr, [r4, #0]
 1230 0a74 0C5084E5 		add	r3, r0, r3
 1231              		sub	r1, r1, #21760
 1232 0a78 E8019FE5 		.loc 1 651 0
 1233 0a7c 0010A0E3 		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 1234 0a80 FEFFFFEB 		.loc 1 636 0
 1235 0a84 FEFFFFEB 		add	r3, r3, lr
 1236              		sub	r1, r1, #86
 1237 0a88 B610D4E1 		ldr	r6, .L143+16
 1238 0a8c 143094E5 		add	r3, r3, r1
 1239 0a90 182094E5 		.loc 1 651 0
 1240 0a94 013083E0 		add	r2, r2, #1
 1241 0a98 032082E0 		.loc 1 636 0
 1242 0a9c 05C0D4E5 		strh	r3, [r4, #10]	@ movhi
 1243 0aa0 052082E0 		ldrh	ip, [r6, #0]
 1244 0aa4 0410D4E5 		.loc 1 649 0
 1245 0aa8 02C08CE0 		ldr	r3, .L143+44
 1246 0aac B830D4E1 		.loc 1 650 0
 1247              		mov	lr, #1
 1248 0ab0 B8519FE5 		.loc 1 651 0
 1249              		strb	r2, [r5, #0]
 1250 0ab4 0C1081E0 		.loc 1 653 0
 1251 0ab8 00E094E5 		mov	r2, #4
 1252 0abc 033080E0 		.loc 1 650 0
 1253 0ac0 551C41E2 		strb	lr, [sl, #0]
 1254              		.loc 1 648 0
 1255 0ac4 0020D5E5 		strb	r8, [fp, #0]
 1256              		.loc 1 649 0
 1257 0ac8 0E3083E0 		strb	lr, [r3, #0]
 1258 0acc 561041E2 		.loc 1 653 0
 1259 0ad0 80619FE5 		strb	r2, [r9, #0]
 1260 0ad4 013083E0 		.loc 1 633 0
 1261              		str	r0, [r4, #16]
 1262 0ad8 012082E2 		b	.L115
 1263              	.LVL13:
 1264 0adc BA30C4E1 	.L142:
 1265 0ae0 B0C0D6E1 	.LBE3:
 1266              	.LBB4:
 1267 0ae4 88319FE5 		.loc 1 569 0
 1268              		ldr	r3, .L143+36
 1269 0ae8 01E0A0E3 		ldr	ip, .L143+28
 1270              		.loc 1 556 0
 1271 0aec 0020C5E5 		ldr	r4, .L143+20
 1272              		.loc 1 565 0
 1273 0af0 0420A0E3 		ldr	r6, .L143+24
 1274              		.loc 1 569 0
 1275 0af4 00E0CAE5 		ldmia	r3, {r0-r1}
 1276              		.loc 1 557 0
 1277 0af8 0080CBE5 		mov	lr, #2992
 1278              		.loc 1 569 0
 1279 0afc 00E0C3E5 		ldmia	ip, {r2-r3}
 1280              		.loc 1 556 0
 1281 0b00 0020C9E5 		mov	ip, #100
 1282              		.loc 1 565 0
 1283 0b04 100084E5 		ldr	r5, [r6, #36]
 1284 0b08 9AFFFFEA 		.loc 1 556 0
 1285              		strb	ip, [r4, #5]
 1286              		.loc 1 566 0
 1287              		ldr	r6, [r6, #132]
 1288              		.loc 1 557 0
 1289              		add	lr, lr, #8
 1290 0b0c 58319FE5 		.loc 1 562 0
 1291 0b10 4CC19FE5 		sub	ip, ip, #77
 1292              		.loc 1 557 0
 1293 0b14 40419FE5 		strh	lr, [r4, #8]	@ movhi
 1294              		.loc 1 562 0
 1295 0b18 40619FE5 		strb	ip, [r4, #4]
 1296              		.loc 1 569 0
 1297 0b1c 030093E8 		add	lr, sp, #36
 1298              		add	ip, sp, #44
 1299 0b20 BBEEA0E3 		.loc 1 565 0
 1300              		str	r5, [r4, #20]
 1301 0b24 0C009CE8 		.loc 1 566 0
 1302              		str	r6, [r4, #24]
 1303 0b28 64C0A0E3 		.loc 1 569 0
 1304              		mov	r5, #1073741824
 1305 0b2c 245096E5 		str	ip, [sp, #16]
 1306              		str	lr, [sp, #20]
 1307 0b30 05C0C4E5 		.loc 1 558 0
 1308              		mov	ip, #400	@ movhi
 1309 0b34 846096E5 		.loc 1 559 0
 1310              		mov	lr, #1
 1311 0b38 08E08EE2 		.loc 1 558 0
 1312              		strh	ip, [r4, #6]	@ movhi
 1313 0b3c 4DC04CE2 		.loc 1 559 0
 1314              		str	lr, [r4, #0]
 1315 0b40 B8E0C4E1 		.loc 1 569 0
 1316              		add	r5, r5, #3014656
 1317 0b44 04C0C4E5 		mov	r6, #0
 1318              		stmia	sp, {r5-r6}
 1319 0b48 24E08DE2 		str	r5, [sp, #8]
 1320 0b4c 2CC08DE2 		str	r6, [sp, #12]
 1321              		bl	xy2latlon
 1322 0b50 145084E5 	.LVL14:
 1323              		.loc 1 571 0
 1324 0b54 186084E5 		add	r2, sp, #36
 1325              		ldmia	r2, {r2-r3}
 1326 0b58 0151A0E3 		ldr	r0, .L143+32
 1327 0b5c 10C08DE5 		mov	r1, #0
 1328 0b60 14E08DE5 		bl	__muldf3
 1329              		bl	__fixdfsi
 1330 0b64 19CEA0E3 		mov	r5, r0
 1331              	.LVL15:
 1332 0b68 01E0A0E3 		.loc 1 572 0
 1333              		add	r2, sp, #44
 1334 0b6c B6C0C4E1 		ldmia	r2, {r2-r3}
 1335              		.loc 1 571 0
 1336 0b70 00E084E5 		str	r5, [r4, #12]
 1337              		.loc 1 572 0
 1338 0b74 2E5885E2 		ldr	r0, .L143+32
 1339 0b78 0060A0E3 		mov	r1, #0
 1340 0b7c 60008DE8 		bl	__muldf3
 1341 0b80 08508DE5 		bl	__fixdfsi
 1342 0b84 0C608DE5 		.loc 1 575 0
 1343 0b88 FEFFFFEB 		ldrh	r1, [r4, #6]
 1344              		ldr	r3, [r4, #20]
 1345              		ldr	r2, [r4, #24]
 1346 0b8c 24208DE2 		add	r3, r3, r1
 1347 0b90 0C0092E8 		add	r2, r2, r3
 1348 0b94 CC009FE5 		ldrb	ip, [r4, #5]	@ zero_extendqisi2
 1349 0b98 0010A0E3 		add	r2, r2, r5
 1350 0b9c FEFFFFEB 		ldrb	r1, [r4, #4]	@ zero_extendqisi2
 1351 0ba0 FEFFFFEB 		add	ip, ip, r2
 1352 0ba4 0050A0E1 		ldrh	r3, [r4, #8]
 1353              		.loc 1 589 0
 1354              		ldr	r5, .L143+40
 1355 0ba8 2C208DE2 		.loc 1 575 0
 1356 0bac 0C0092E8 		add	r1, r1, ip
 1357              		ldr	lr, [r4, #0]
 1358 0bb0 0C5084E5 		add	r3, r0, r3
 1359              		sub	r1, r1, #21760
 1360 0bb4 AC009FE5 		.loc 1 589 0
 1361 0bb8 0010A0E3 		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 1362 0bbc FEFFFFEB 		.loc 1 575 0
 1363 0bc0 FEFFFFEB 		add	r3, r3, lr
 1364              		sub	r1, r1, #86
 1365 0bc4 B610D4E1 		ldr	r6, .L143+16
 1366 0bc8 143094E5 		add	r3, r3, r1
 1367 0bcc 182094E5 		.loc 1 589 0
 1368 0bd0 013083E0 		add	r2, r2, #1
 1369 0bd4 032082E0 		.loc 1 575 0
 1370 0bd8 05C0D4E5 		strh	r3, [r4, #10]	@ movhi
 1371 0bdc 052082E0 		ldrh	ip, [r6, #0]
 1372 0be0 0410D4E5 		.loc 1 587 0
 1373 0be4 02C08CE0 		ldr	r3, .L143+44
 1374 0be8 B830D4E1 		.loc 1 588 0
 1375              		mov	lr, #1
 1376 0bec 7C509FE5 		.loc 1 589 0
 1377              		strb	r2, [r5, #0]
 1378 0bf0 0C1081E0 		.loc 1 591 0
 1379 0bf4 00E094E5 		mov	r2, #3
 1380 0bf8 033080E0 		.loc 1 588 0
 1381 0bfc 551C41E2 		strb	lr, [sl, #0]
 1382              		.loc 1 586 0
 1383 0c00 0020D5E5 		strb	r8, [fp, #0]
 1384              		.loc 1 587 0
 1385 0c04 0E3083E0 		strb	lr, [r3, #0]
 1386 0c08 561041E2 		.loc 1 591 0
 1387 0c0c 44609FE5 		strb	r2, [r9, #0]
 1388 0c10 013083E0 		.loc 1 572 0
 1389              		str	r0, [r4, #16]
 1390 0c14 012082E2 		b	.L115
 1391              	.L144:
 1392 0c18 BA30C4E1 		.align	2
 1393 0c1c B0C0D6E1 	.L143:
 1394              		.word	wpExampleState.2738
 1395 0c20 4C309FE5 		.word	WO_SDK
 1396              		.word	wpCtrlWpCmdUpdated
 1397 0c24 01E0A0E3 		.word	wpCtrlAckTrigger
 1398              		.word	wpCtrlNavStatus
 1399 0c28 0020C5E5 		.word	wpToLL
 1400              		.word	RO_ALL_Data
 1401 0c2c 0320A0E3 		.word	originLon.2740
 1402              		.word	1097011920
 1403 0c30 00E0CAE5 		.word	originLat.2739
 1404              		.word	wpExampleWpNr
 1405 0c34 0080CBE5 		.word	wpCtrlWpCmd
 1406              		.word	wpExampleActive
 1407 0c38 00E0C3E5 		.word	GPS_Data
 1408              	.LBE4:
 1409 0c3c 0020C9E5 	.LFE9:
 1411 0c40 100084E5 		.global	__floatsisf
 1412 0c44 4BFFFFEA 		.global	__extendsfdf2
 1413              		.global	__truncdfsf2
 1414              		.align	2
 1415              		.global	SDK_mainloop
 1417 0c4c 00000000 	SDK_mainloop:
 1418 0c50 00000000 	.LFB4:
 1419 0c54 00000000 		.loc 1 220 0
 1420 0c58 00000000 		@ Function supports interworking.
 1421 0c5c 00000000 		@ args = 0, pretend = 0, frame = 0
 1422 0c60 00000000 		@ frame_needed = 0, uses_anonymous_args = 0
 1423 0c64 50000000 		stmfd	sp!, {r4, r5, lr}
 1424 0c68 D0126341 	.LCFI6:
 1425 0c6c 58000000 		.loc 1 229 0
 1426 0c70 00000000 		ldr	r4, .L164+16
 1427 0c74 00000000 		ldrsh	r0, [r4, #4]
 1428 0c78 00000000 		bl	__floatsisf
 1429 0c7c 00000000 		ldr	r5, .L164+20
 1430              		str	r0, [r5, #0]	@ float
 1431              		.loc 1 230 0
 1432              		ldr	r0, [r4, #32]
 1433              		bl	__floatsisf
 1434              		bl	__extendsfdf2
 1435              		mov	r2, #1073741824
 1436              		add	r2, r2, #9371648
 1437              		add	r2, r2, #16384
 1438              		mov	r3, #0
 1439              		bl	__divdf3
 1440              		adr	r2, .L164
 1441              		ldmia	r2, {r2-r3}
 1442              		bl	__muldf3
 1443              		bl	__truncdfsf2
 1444              		str	r0, [r5, #4]	@ float
 1445 0c80 30402DE9 		.loc 1 231 0
 1446              		ldr	r0, [r4, #28]
 1447              		bl	__floatsisf
 1448 0c84 4C429FE5 		bl	__extendsfdf2
 1449 0c88 F400D4E1 		mov	r2, #1073741824
 1450 0c8c FEFFFFEB 		add	r2, r2, #9371648
 1451 0c90 44529FE5 		add	r2, r2, #16384
 1452 0c94 000085E5 		mov	r3, #0
 1453              		bl	__divdf3
 1454 0c98 200094E5 		adr	r2, .L164
 1455 0c9c FEFFFFEB 		ldmia	r2, {r2-r3}
 1456 0ca0 FEFFFFEB 		bl	__muldf3
 1457 0ca4 0121A0E3 		bl	__truncdfsf2
 1458 0ca8 8F2882E2 		str	r0, [r5, #8]	@ float
 1459 0cac 012982E2 		.loc 1 232 0
 1460 0cb0 0030A0E3 		ldr	r0, [r4, #36]
 1461 0cb4 FEFFFFEB 		bl	__floatsisf
 1462 0cb8 822F8FE2 		bl	__extendsfdf2
 1463 0cbc 0C0092E8 		mov	r2, #1073741824
 1464 0cc0 FEFFFFEB 		add	r2, r2, #9371648
 1465 0cc4 FEFFFFEB 		add	r2, r2, #16384
 1466 0cc8 040085E5 		mov	r3, #0
 1467              		bl	__divdf3
 1468 0ccc 1C0094E5 		adr	r2, .L164
 1469 0cd0 FEFFFFEB 		ldmia	r2, {r2-r3}
 1470 0cd4 FEFFFFEB 		bl	__muldf3
 1471 0cd8 0121A0E3 		bl	__truncdfsf2
 1472 0cdc 8F2882E2 		mov	r1, #0
 1473 0ce0 012982E2 		bl	angle_diff
 1474 0ce4 0030A0E3 		.loc 1 233 0
 1475 0ce8 FEFFFFEB 		ldr	r4, .L164+24
 1476 0cec 752F8FE2 		.loc 1 232 0
 1477 0cf0 0C0092E8 		str	r0, [r5, #12]	@ float
 1478 0cf4 FEFFFFEB 		.loc 1 233 0
 1479 0cf8 FEFFFFEB 		ldr	r0, [r4, #16]
 1480 0cfc 080085E5 		bl	__floatsisf
 1481              		bl	__extendsfdf2
 1482 0d00 240094E5 		adr	r2, .L164+8
 1483 0d04 FEFFFFEB 		ldmia	r2, {r2-r3}
 1484 0d08 FEFFFFEB 		bl	__muldf3
 1485 0d0c 0121A0E3 		bl	__truncdfsf2
 1486 0d10 8F2882E2 		str	r0, [r5, #28]	@ float
 1487 0d14 012982E2 		.loc 1 234 0
 1488 0d18 0030A0E3 		ldr	r0, [r4, #12]
 1489 0d1c FEFFFFEB 		bl	__floatsisf
 1490 0d20 1A2E8FE2 		bl	__extendsfdf2
 1491 0d24 0C0092E8 		adr	r2, .L164+8
 1492 0d28 FEFFFFEB 		ldmia	r2, {r2-r3}
 1493 0d2c FEFFFFEB 		bl	__muldf3
 1494 0d30 0010A0E3 		bl	__truncdfsf2
 1495 0d34 FEFFFFEB 		str	r0, [r5, #32]	@ float
 1496              		.loc 1 235 0
 1497 0d38 A0419FE5 		ldr	r0, [r4, #20]
 1498              		bl	__floatsisf
 1499 0d3c 0C0085E5 		bl	__extendsfdf2
 1500              		adr	r2, .L164+8
 1501 0d40 100094E5 		ldmia	r2, {r2-r3}
 1502 0d44 FEFFFFEB 		bl	__muldf3
 1503 0d48 FEFFFFEB 		bl	__truncdfsf2
 1504 0d4c 5F2F8FE2 		.loc 1 238 0
 1505 0d50 0C0092E8 		ldr	ip, .L164+28
 1506 0d54 FEFFFFEB 		ldr	r3, [ip, #0]
 1507 0d58 FEFFFFEB 		cmp	r3, #1
 1508 0d5c 1C0085E5 		.loc 1 235 0
 1509              		str	r0, [r5, #36]	@ float
 1510 0d60 0C0094E5 		.loc 1 238 0
 1511 0d64 FEFFFFEB 		beq	.L160
 1512 0d68 FEFFFFEB 	.L146:
 1513 0d6c 572F8FE2 		.loc 1 243 0
 1514 0d70 0C0092E8 		ldr	r0, .L164+32
 1515 0d74 FEFFFFEB 		ldr	r3, [r0, #0]
 1516 0d78 FEFFFFEB 		cmp	r3, #1
 1517 0d7c 200085E5 		beq	.L161
 1518              	.L148:
 1519 0d80 140094E5 		.loc 1 249 0
 1520 0d84 FEFFFFEB 		bl	lab
 1521 0d88 FEFFFFEB 		.loc 1 304 0
 1522 0d8c 4F2F8FE2 		ldr	lr, .L164+36
 1523 0d90 0C0092E8 		ldr	ip, [lr, #0]
 1524 0d94 FEFFFFEB 		cmp	ip, #2000
 1525 0d98 FEFFFFEB 		ble	.L150
 1526              		.loc 1 305 0
 1527 0d9c 40C19FE5 		ldr	r3, .L164+40
 1528 0da0 00309CE5 		ldr	r2, [r3, #0]
 1529 0da4 010053E3 		cmp	r2, #1
 1530              		.loc 1 319 0
 1531 0da8 240085E5 		movne	r1, #-536870912
 1532              		.loc 1 320 0
 1533 0dac 2800000A 		movne	r0, #52224
 1534              		.loc 1 321 0
 1535              		movne	r2, r1
 1536 0db0 30019FE5 		.loc 1 320 0
 1537 0db4 003090E5 		addne	r0, r0, #3
 1538 0db8 010053E3 		.loc 1 305 0
 1539 0dbc 1B00000A 		beq	.L162
 1540              	.L159:
 1541              		.loc 1 319 0
 1542 0dc0 FEFFFFEB 		mov	r3, #128
 1543              		add	r1, r1, #163840
 1544 0dc4 20E19FE5 		str	r3, [r1, #12]
 1545 0dc8 00C09EE5 		.loc 1 320 0
 1546 0dcc 7D0E5CE3 		ldr	r3, .L164+44
 1547 0dd0 0E0000DA 		.loc 1 321 0
 1548              		add	r2, r2, #131072
 1549 0dd4 14319FE5 		str	r0, [r2, #8]
 1550 0dd8 002093E5 		.loc 1 320 0
 1551 0ddc 010052E3 		str	r0, [r3, #0]
 1552              	.L150:
 1553 0de0 0E12A013 		.loc 1 327 0
 1554              		ldr	r3, .L164+48
 1555 0de4 330BA013 		ldr	r2, [r3, #0]
 1556              		.loc 1 325 0
 1557 0de8 0120A011 		add	r1, ip, #1
 1558              		.loc 1 327 0
 1559 0dec 03008012 		add	r2, r2, #1
 1560              		.loc 1 325 0
 1561 0df0 1E00000A 		str	r1, [lr, #0]
 1562              		.loc 1 327 0
 1563              		str	r2, [r3, #0]
 1564 0df4 8030A0E3 		.loc 1 336 0
 1565 0df8 0A1981E2 		ldmfd	sp!, {r4, r5, lr}
 1566 0dfc 0C3081E5 		bx	lr
 1567              	.L161:
 1568 0e00 EC309FE5 		.loc 1 244 0
 1569              		ldr	r2, .L164+52
 1570 0e04 022882E2 		ldr	r3, [r2, #0]
 1571 0e08 080082E5 		ldr	r2, .L164+56
 1572              		mvn	r3, r3
 1573 0e0c 000083E5 		and	r3, r3, #1
 1574              		.loc 1 245 0
 1575              		mov	r1, #0
 1576 0e10 E0309FE5 		.loc 1 244 0
 1577 0e14 002093E5 		str	r3, [r2, #0]
 1578              		.loc 1 245 0
 1579 0e18 01108CE2 		str	r1, [r0, #0]
 1580              		b	.L148
 1581 0e1c 012082E2 	.L160:
 1582              		.loc 1 239 0
 1583 0e20 00108EE5 		ldr	r3, .L164+60
 1584              		ldr	r2, .L164+64
 1585 0e24 002083E5 		ldr	r1, [r3, #0]
 1586              		.loc 1 241 0
 1587 0e28 3040BDE8 		mov	r3, #0
 1588 0e2c 1EFF2FE1 		.loc 1 239 0
 1589              		str	r1, [r2, #0]
 1590              		.loc 1 241 0
 1591 0e30 C4209FE5 		str	r3, [ip, #0]
 1592 0e34 003092E5 		b	.L146
 1593 0e38 C0209FE5 	.L162:
 1594 0e3c 0330E0E1 		.loc 1 306 0
 1595 0e40 013003E2 		ldr	r0, .L164+68
 1596              		.loc 1 307 0
 1597 0e44 0010A0E3 		ldr	r3, .L164+72
 1598              		.loc 1 306 0
 1599 0e48 003082E5 		ldr	r1, [r0, #0]
 1600              		.loc 1 307 0
 1601 0e4c 001080E5 		ldr	r2, [r3, #0]
 1602 0e50 DAFFFFEA 		.loc 1 306 0
 1603              		add	r1, r1, #1
 1604              		.loc 1 307 0
 1605 0e54 A8309FE5 		cmp	r2, #1
 1606 0e58 A8209FE5 		.loc 1 306 0
 1607 0e5c 001093E5 		str	r1, [r0, #0]
 1608              		.loc 1 307 0
 1609 0e60 0030A0E3 		beq	.L163
 1610              		.loc 1 313 0
 1611 0e64 001082E5 		cmp	r1, #75
 1612              		.loc 1 314 0
 1613 0e68 00308CE5 		moveq	r1, #-536870912
 1614 0e6c CFFFFFEA 		.loc 1 315 0
 1615              		moveq	r0, #52224
 1616              		.loc 1 316 0
 1617 0e70 94009FE5 		moveq	r2, r1
 1618              		.loc 1 315 0
 1619 0e74 94309FE5 		addeq	r0, r0, #2
 1620              		.loc 1 313 0
 1621 0e78 001090E5 		bne	.L150
 1622              		b	.L159
 1623 0e7c 002093E5 	.L163:
 1624              		.loc 1 308 0
 1625 0e80 011081E2 		cmp	r1, #5
 1626              		.loc 1 309 0
 1627 0e84 010052E3 		subeq	r1, r1, #536870917
 1628              		.loc 1 310 0
 1629 0e88 001080E5 		moveq	r0, #52224
 1630              		.loc 1 311 0
 1631 0e8c 0600000A 		moveq	r2, r1
 1632              		.loc 1 310 0
 1633 0e90 4B0051E3 		addeq	r0, r0, #1
 1634              		.loc 1 308 0
 1635 0e94 0E12A003 		bne	.L150
 1636              		b	.L159
 1637 0e98 330BA003 	.L165:
 1638              		.align	2
 1639 0e9c 0120A001 	.L164:
 1640              		.word	1066524485
 1641 0ea0 02008002 		.word	-1525816720
 1642              		.word	1060216130
 1643 0ea4 D9FFFF1A 		.word	1248163157
 1644 0ea8 D1FFFFEA 		.word	RO_ALL_Data
 1645              		.word	imusensor
 1646              		.word	IMU_CalcData
 1647 0eac 050051E3 		.word	NewUsonicData
 1648              		.word	NewMagnetSwitch
 1649 0eb0 52124102 		.word	timer
 1650              		.word	f28027_ready
 1651 0eb4 330BA003 		.word	SPI0command
 1652              		.word	my_sdkloop_counter
 1653 0eb8 0120A001 		.word	MagnetSwitch
 1654              		.word	GotMagnet
 1655 0ebc 01008002 		.word	UsonicData
 1656              		.word	USMaxBot_range1
 1657 0ec0 D2FFFF1A 		.word	UsonicTimer
 1658 0ec4 CAFFFFEA 		.word	firebit
 1659              	.LFE4:
 1661              		.global	wpExampleWpNr
 1662 0ec8 45DF913F 		.bss
 1665 0ed4 5575654A 	wpExampleWpNr:
 1666 0ed8 00000000 		.space	1
 1667 0edc 00000000 		.global	wpExampleActive
 1670 0ee8 00000000 	wpExampleActive:
 1671 0eec 08000000 		.space	1
 1672 0ef0 00000000 		.global	emergencyModeUpdate
 1675 0efc 00000000 	emergencyModeUpdate:
 1676 0f00 00000000 		.space	1
 1677 0f04 00000000 		.global	my_sdkloop_counter
 1678 0f08 00000000 		.align	2
 1681              	my_sdkloop_counter:
 1682              		.space	4
 1683              		.global	firebit
 1684              		.data
 1685              		.align	2
 1688 0000 00       	firebit:
 1689              		.word	1
 1690              		.global	UsonicTimer
 1691              		.bss
 1692              		.align	2
 1695              	UsonicTimer:
 1696              		.space	4
 1697              		.global	SPI0data
 1698 0002 00       		.align	2
 1701              	SPI0data:
 1702              		.space	4
 1703              		.global	SPI0command
 1704 0004 00000000 		.align	2
 1707              	SPI0command:
 1708              		.space	4
 1709              		.global	f28027_ready
 1710              		.align	2
 1713              	f28027_ready:
 1714              		.space	4
 1715              		.global	UsonicData
 1716              		.align	2
 1719              	UsonicData:
 1720              		.space	4
 1721              		.global	NewUsonicData
 1722              		.align	2
 1725              	NewUsonicData:
 1726              		.space	4
 1727              		.global	USMaxBot_range1
 1728              		.align	2
 1731              	USMaxBot_range1:
 1732              		.space	4
 1733              		.global	SwitchTimer
 1734              		.align	2
 1737              	SwitchTimer:
 1738              		.space	4
 1739              		.global	readSwitchbit
 1740              		.align	2
 1743              	readSwitchbit:
 1744              		.space	4
 1745              		.global	MagnetSwitch
 1746              		.align	2
 1749              	MagnetSwitch:
 1750              		.space	4
 1751              		.global	NewMagnetSwitch
 1752              		.align	2
 1755              	NewMagnetSwitch:
 1756              		.space	4
 1757              		.global	GotMagnet
 1758              		.align	2
 1761              	GotMagnet:
 1762              		.space	4
 1763              		.global	SPItxCount
 1764              		.align	2
 1767              	SPItxCount:
 1768              		.space	4
 1769              		.global	SPItxSize
 1770              		.align	2
 1773              	SPItxSize:
 1774              		.space	4
 1775              		.global	SPItxDone
 1776              		.data
 1777              		.align	2
 1780              	SPItxDone:
 1781              		.word	1
 1782              		.global	numMissedTx
 1783              		.bss
 1784 0034 00000000 		.align	2
 1787              	numMissedTx:
 1788              		.space	4
 1789              		.global	testcount
 1790 0038 00000000 		.align	2
 1793              	testcount:
 1794              		.space	4
 1795              		.align	2
 1796 003c 00000000 	timeout.2838:
 1797              		.space	4
 1798              		.align	2
 1799              	timeout.2831:
 1800              		.space	4
 1801              		.align	2
 1802              	originLon.2740:
 1803 0004 01000000 		.space	8
 1804              		.align	2
 1805              	originLat.2739:
 1806              		.space	8
 1807              	wpExampleState.2738:
 1808              		.space	1
 1809              		.data
 1810 0040 00000000 		.align	2
 1813              	timer:
 1814              		.word	1
 1815              		.comm	GPS_timeout,4,4
 1816 0044 00000000 		.comm	SYSTEM_initialized,1,1
 1817              		.comm	WO_SDK,4,4
 1818              		.comm	RO_ALL_Data,152,4
 1819 0048 00000000 		.comm	RO_RC_Data,16,4
 1820              		.comm	WO_Direct_Individual_Motor_Control,12,4
 1821              		.comm	WO_Direct_Motor_Control,4,4
 1822 004c 00000000 		.comm	WO_CTRL_Input,12,4
 1823              		.comm	emergencyMode,1,1
 1824              		.comm	imusensor,68,4
 1825 0050 00000000 		.comm	SPItxArray,100,2
 1825      00000000 
 1826              		.comm	f2s,4,4
 1827              		.comm	testarray,20,4
 1828 0058 00000000 		.section	.debug_frame,"",%progbits
 1828      00000000 
 1829              	.Lframe0:
 1830 0060 00       		.4byte	.LECIE0-.LSCIE0
 1831 0061 000000   	.LSCIE0:
 1832              		.4byte	0xffffffff
 1833              		.byte	0x1
 1834              		.ascii	"\000"
 1835              		.uleb128 0x1
 1836 0008 01000000 		.sleb128 -4
 1837              		.byte	0xe
 1838              		.byte	0xc
 1839              		.uleb128 0xd
 1840              		.uleb128 0x0
 1841              		.align	2
 1842              	.LECIE0:
 1843              	.LSFDE0:
 1844              		.4byte	.LEFDE0-.LASFDE0
 1845              	.LASFDE0:
 1846              		.4byte	.Lframe0
 1847              		.4byte	.LFB2
 1848              		.4byte	.LFE2-.LFB2
 1849              		.byte	0x4
 2026              		.2byte	0x2
DEFINED SYMBOLS
                            *ABS*:00000000 sdk.c
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:13     .text:00000000 SPI0Handler
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:20     .text:00000000 $a
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:255    .text:00000260 $d
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1723   .bss:0000000c SPI0data
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1729   .bss:00000010 SPI0command
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1735   .bss:00000014 f28027_ready
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1710   .data:00000000 firebit
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1741   .bss:00000018 UsonicData
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1717   .bss:00000008 UsonicTimer
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1747   .bss:0000001c NewUsonicData
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1765   .bss:00000028 readSwitchbit
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1759   .bss:00000024 SwitchTimer
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1795   .bss:0000003c SPItxSize
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1789   .bss:00000038 SPItxCount
                            *COM*:00000064 SPItxArray
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1802   .data:00000004 SPItxDone
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1771   .bss:0000002c MagnetSwitch
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1777   .bss:00000030 NewMagnetSwitch
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:275    .text:0000029c SDK_Init
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:283    .text:0000029c $a
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:308    .text:000002c8 $d
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1703   .bss:00000004 my_sdkloop_counter
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:316    .text:000002d4 SDK_SetEmergencyMode
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:324    .text:000002d4 $a
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:347    .text:00000308 $d
                            *COM*:00000001 emergencyMode
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1697   .bss:00000002 emergencyModeUpdate
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:354    .text:00000310 SDK_EXAMPLE_direct_individual_motor_commands
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:362    .text:00000310 $a
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:446    .text:000003c8 $d
                            *COM*:00000098 RO_ALL_Data
                            *COM*:0000000c WO_Direct_Individual_Motor_Control
                            *COM*:00000004 WO_SDK
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:455    .text:000003d8 SDK_EXAMPLE_direct_motor_commands_with_standard_output_mapping
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:462    .text:000003d8 $a
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:539    .text:00000474 $d
                            *COM*:00000004 WO_Direct_Motor_Control
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:548    .text:00000484 SDK_EXAMPLE_attitude_commands
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:556    .text:00000484 $a
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:581    .text:000004b0 $d
                            *COM*:0000000c WO_CTRL_Input
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:588    .text:000004b8 SDK_EXAMPLE_turn_motors_on
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:595    .text:000004b8 $a
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:661    .text:0000053c $d
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1821   .bss:0000004c timeout.2831
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:669    .text:00000548 SDK_EXAMPLE_turn_motors_off
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:676    .text:00000548 $a
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:743    .text:000005cc $d
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1818   .bss:00000048 timeout.2838
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:755    .text:000005d8 SDK_EXAMPLE_gps_waypoint_control
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:761    .text:000005d8 $a
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:786    .text:00000608 $d
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:793    .text:0000061c $a
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1416   .text:00000c48 $d
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1829   .bss:00000060 wpExampleState.2738
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1824   .bss:00000050 originLon.2740
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1827   .bss:00000058 originLat.2739
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1687   .bss:00000000 wpExampleWpNr
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1692   .bss:00000001 wpExampleActive
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1439   .text:00000c80 SDK_mainloop
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1445   .text:00000c80 $a
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1662   .text:00000ec8 $d
                            *COM*:00000044 imusensor
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1835   .data:00000008 timer
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1783   .bss:00000034 GotMagnet
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1753   .bss:00000020 USMaxBot_range1
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1711   .data:00000000 $d
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1809   .bss:00000040 numMissedTx
C:\Users\bkuo\AppData\Local\Temp/ccwzbaaa.s:1815   .bss:00000044 testcount
                            *COM*:00000004 GPS_timeout
                            *COM*:00000001 SYSTEM_initialized
                            *COM*:00000010 RO_RC_Data
                            *COM*:00000004 f2s
                            *COM*:00000014 testarray

UNDEFINED SYMBOLS
u
__floatsidf
__divdf3
__muldf3
__fixdfsi
xy2latlon
wpCtrlWpCmdUpdated
wpCtrlAckTrigger
wpCtrlNavStatus
wpToLL
wpCtrlWpCmd
GPS_Data
__floatsisf
__extendsfdf2
__truncdfsf2
angle_diff
lab
IMU_CalcData
